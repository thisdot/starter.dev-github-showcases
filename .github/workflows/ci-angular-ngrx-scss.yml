# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Angular NgRx SCSS CI

on:
  push:
    branches: [main]
    paths:
      - "angular-ngrx-scss/**"
  pull_request:
    branches: [main]
    paths:
      - "angular-ngrx-scss/**"

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: angular-ngrx-scss/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: angular-ngrx-scss

      - name: Lint files
        run: npm run lint
        working-directory: angular-ngrx-scss

  format-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: angular-ngrx-scss/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: angular-ngrx-scss

      - name: Check formatting
        run: npm run format:check
        working-directory: angular-ngrx-scss

  build:
    runs-on: ubuntu-latest
    needs: [lint, format-check]

    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: angular-ngrx-scss/package-lock.json

      - name: Install dependencies
        run: npm ci

        working-directory: angular-ngrx-scss
      - name: Build Project
        run: npm run build
        working-directory: angular-ngrx-scss

  test:
    runs-on: ubuntu-latest
    needs: [lint, format-check]

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: angular-ngrx-scss/package-lock.json

      - name: Install dependencies
        run: npm ci

        working-directory: angular-ngrx-scss
      - name: Test Project
        run: npm run test:ci
        working-directory: angular-ngrx-scss
  check:
      name: Check files
      outputs:
        run_job: ${{ steps.check_files.outputs.run_job }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
          with:
            fetch-depth: 2
        - name: check modified files
          id: check_files
          run: |
            echo "=============== list modified files ==============="
            git diff --name-only HEAD^ HEAD
            
            echo "========== check paths of modified files =========="
            git diff --name-only HEAD^ HEAD &gt; files.txt
            while IFS= read -r file
            do
              echo $file
              if [[ $file != /* ]]; then
                echo "This modified file is not under the 'db' folder."
                echo "::set-output name=run_job::false"
                break
              else
                echo "::set-output name=run_job::true"
              fi
            done &lt; files.txt

  job_for_db:
    name: Job for 'db' folder
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: run for 'db' folder
        run: echo "This job runs only when all the modified files are under the 'db' folder."