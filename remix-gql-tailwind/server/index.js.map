{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../node_modules/remix/index.js", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user.ts", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/root.tsx", "../app/components/Navbar/NavBar.tsx", "../app/components/Navbar/NavBar.classNames.ts", "../app/components/UserDropdown/UserDropdown.view.tsx", "../app/components/UserDropdown/UserDropdown.classNames.ts", "../app/components/Icons/GitHubLogo.tsx", "../app/services/auth.server.ts", "../app/services/session.server.ts", "../app/lib/queries/UserDropdown.ts", "../app/lib/graphql-client.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/blob/$branch/index.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/blob/$branch/$.tsx", "../app/context/RepoContext.tsx", "../app/components/RepoPage/parseTopics.ts", "../app/lib/queries/RepoPage.ts", "../app/lib/queries/FileViewer.ts", "../app/components/FileViewer/FileViewer.tsx", "../app/components/FileViewer/FileViewer.view.tsx", "../app/components/FileViewer/FileCode.tsx", "../app/components/FileViewer/FileViewer.classNames.ts", "../app/components/FileViewer/FileText.tsx", "../app/components/FileViewer/mapExtensionToLanguage.ts", "../app/components/RepoHeader/RepoHeader.tsx", "../app/components/RepoHeading/RepoHeading.tsx", "../app/components/RepoHeading/PrivacyIcon.tsx", "../app/components/Icons/index.ts", "../app/components/Icons/PullRequestIcon.tsx", "../app/components/Icons/EyeIcon.tsx", "../app/components/Icons/GitBranchIcon.tsx", "../app/components/Icons/GitRepoIcon.tsx", "../app/components/Icons/TwitterIcon.tsx", "../app/components/Icons/MergedPullRequestIcon.tsx", "../app/components/Icons/ClosedPullRequestIcon.tsx", "../app/components/Icons/TOCIcon.tsx", "../app/components/RepoHeading/RepoHeading.classNames.ts", "../app/components/PrivacyBadge/PrivacyBadge.tsx", "../app/components/PrivacyBadge/PrivacyBadge.classNames.ts", "../app/components/RepoActionButtons/RepoActionButtons.tsx", "../app/components/RepoActionButtons/CountButtonGroup.tsx", "../app/components/RepoActionButtons/RepoActionButtons.classNames.ts", "../app/components/TabNavigation/TabNavigation.tsx", "../app/components/TabNavigation/TabNavigation.classNames.ts", "../app/components/RepoHeader/RepoHeader.classNames.ts", "../app/components/RepoHeader/tabList.tsx", "../app/components/FileExplorerNav/FileExplorerNav.tsx", "../app/components/FileExplorerNav/FileExplorerNav.classNames.ts", "../app/lib/pathUtils.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/tree/$branch/$.tsx", "../app/components/FileExplorer/parseQueryData.ts", "../app/components/FileExplorer/FileExplorer.view.tsx", "../app/components/FileExplorer/FileExplorer.classNames.ts", "../app/components/RepoReadMe/parseQuery.ts", "../app/components/RepoReadMe/RepoReadMe.view.tsx", "../app/components/RepoReadMe/Empty.tsx", "../app/components/RepoReadMe/RepoReadMe.classNames.ts", "../app/lib/queries/FileExplorer.ts", "../app/lib/queries/RepoReadMe.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/issues.tsx", "../app/components/RepoIssues/parseQuery.ts", "../app/components/RepoIssues/RepoIssues.tsx", "../app/components/IssuesContainer/IssuesContainer.tsx", "../app/components/IssuesContainer/IssuesContainer.classNames.ts", "../app/components/IssuesEmpty/IssuesEmpty.tsx", "../app/components/IssuesEmpty/IssuesEmpty.classNames.ts", "../app/components/RepoIssues/RepoIssues.view.tsx", "../app/components/RepoIssues/RepoIssues.classNames.ts", "../app/components/IssueFilters/useIssueFilters.tsx", "../app/components/RepoFilters/useRepoFilters.tsx", "../app/components/IssueFilters/IssueFilters.tsx", "../app/components/FilterDropdown/FilterDropdown.tsx", "../app/components/FilterDropdown/FilterDropdown.classNames.ts", "../app/components/IssueFilters/IssueFilters.classNames.ts", "../app/components/IssueFilters/Pagination.tsx", "../app/components/IssueFilters/Pagination.classNames.ts", "../app/lib/queries/RepoIssues.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/index.tsx", "../app/components/RepoAboutWidget/RepoAboutWidget.tsx", "../app/components/RepoAboutWidget/Description.tsx", "../app/components/RepoAboutWidget/HomepageUrl.tsx", "../app/components/RepoAboutWidget/RepoAboutWidget.classNames.ts", "../app/components/RepoAboutWidget/Topics.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/pulls.tsx", "../app/components/RepoPulls/parseQuery.ts", "../app/components/RepoPulls/RepoPulls.tsx", "../app/components/RepoPulls/RepoPulls.view.tsx", "../app/lib/queries/RepoPulls.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/auth.github.callback.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/index.tsx", "../app/lib/queries/UserProfile.ts", "../app/lib/queries/UserRepos.ts", "../app/components/UserRepos/parseQuery.ts", "../app/components/ProfilePage/ProfilePage.view.tsx", "../app/components/ProfileNav/ProfileNav.tsx", "../app/components/ProfileNav/tabList.tsx", "../app/components/UserProfile/UserProfile.view.tsx", "../app/components/UserProfile/OrgList.tsx", "../app/components/UserProfile/OrgList.classNames.ts", "../app/components/UserProfile/UserProfile.classNames.ts", "../app/components/UserRepos/UserRepos.view.tsx", "../app/components/RepoMeta/RepoMeta.tsx", "../app/components/RepoMeta/RepoMeta.classNames.ts", "../app/components/UserRepos/UserRepos.classNames.ts", "../app/components/Pagination/Pagination.tsx", "../app/components/Pagination/Pagination.classNames.ts", "../app/components/UserRepos/filterRepos.ts", "../app/components/UserRepos/getLanguages.ts", "../app/components/RepoFilters/RepoFilters.tsx", "../app/components/RepoFilters/FilterDropdown.tsx", "../app/components/RepoFilters/FilterDropdown.classNames.ts", "../app/components/RepoFilters/RepoFilters.classNames.ts", "../app/components/ProfilePage/ProfilePage.classNames.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/auth.github.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/logout.tsx", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/index.tsx", "../app/components/UserTopRepos/parseQuery.ts", "../app/components/UserGists/parseQuery.ts", "../app/lib/queries/UserTopRepos.ts", "../app/lib/queries/UserGists.ts", "../app/components/UserTopRepos/UserTopRepos.view.tsx", "../app/components/UserTopRepos/UserTopRepos.classNames.ts", "../app/components/UserGists/UserGists.view.tsx", "../app/components/UserGists/container.tsx", "../app/components/UserGists/container.classNames.ts", "../app/components/UserGists/UserGists.classNames.ts", "/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar node = require('@remix-run/node');\n\n\n\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serverRuntime = require('@remix-run/server-runtime');\n\n\n\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar react = require('@remix-run/react');\n\n\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\n\n", "// import type { ActionFunction } from \"@remix-run/node\";\n// import { redirect } from \"@remix-run/node\";\n\n// import { createUser } from \"~/models/user.server\";\n// import { createUserSession } from \"~/session.server\";\n\n// export const action: ActionFunction = async ({ request }) => {\n//   if (process.env.NODE_ENV === \"production\") {\n//     console.error(\n//       \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n//     );\n//     // test routes should not be enabled in production or without\n//     // enable test routes... Just in case this somehow slips through\n//     // we'll redirect :)\n//     return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n//   }\n\n//   const { email } = await request.json();\n//   if (!email) {\n//     throw new Error(\"email required for login\");\n//   }\n//   if (!email.endsWith(\"@example.com\")) {\n//     throw new Error(\"All test emails must end in @example.com\");\n//   }\n\n//   const user = await createUser(email, \"myreallystrongpassword\");\n\n//   return createUserSession({\n//     request,\n//     userId: user.id,\n//     remember: true,\n//     redirectTo: \"/\",\n//   });\n// };\n\n// export default null;\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\n// if (process.env.NODE_ENV !== \"production\") {\n//   require(\"./mocks\");\n// }\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/entry.server.tsx\";\nimport * as route0 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/root.tsx\";\nimport * as route1 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/blob/$branch/index.tsx\";\nimport * as route2 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/blob/$branch/$.tsx\";\nimport * as route3 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/tree/$branch/$.tsx\";\nimport * as route4 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/issues.tsx\";\nimport * as route5 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/index.tsx\";\nimport * as route6 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/pulls.tsx\";\nimport * as route7 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/auth.github.callback.tsx\";\nimport * as route8 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/index.tsx\";\nimport * as route9 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/auth.github.tsx\";\nimport * as route10 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/logout.tsx\";\nimport * as route11 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/index.tsx\";\nimport * as route12 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/login.tsx\";\nimport * as route13 from \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$user/$repository/blob/$branch/index\": {\n      id: \"routes/$user/$repository/blob/$branch/index\",\n      parentId: \"root\",\n      path: \":user/:repository/blob/:branch\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$user/$repository/blob/$branch/$\": {\n      id: \"routes/$user/$repository/blob/$branch/$\",\n      parentId: \"root\",\n      path: \":user/:repository/blob/:branch/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/$user/$repository/tree/$branch/$\": {\n      id: \"routes/$user/$repository/tree/$branch/$\",\n      parentId: \"root\",\n      path: \":user/:repository/tree/:branch/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/$user/$repository/issues\": {\n      id: \"routes/$user/$repository/issues\",\n      parentId: \"root\",\n      path: \":user/:repository/issues\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/$user/$repository/index\": {\n      id: \"routes/$user/$repository/index\",\n      parentId: \"root\",\n      path: \":user/:repository\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/$user/$repository/pulls\": {\n      id: \"routes/$user/$repository/pulls\",\n      parentId: \"root\",\n      path: \":user/:repository/pulls\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/auth.github.callback\": {\n      id: \"routes/auth.github.callback\",\n      parentId: \"root\",\n      path: \"auth/github/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/$user/index\": {\n      id: \"routes/$user/index\",\n      parentId: \"root\",\n      path: \":user\",\n      index: true,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/auth.github\": {\n      id: \"routes/auth.github\",\n      parentId: \"root\",\n      path: \"auth/github\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user\": {\n      id: \"/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  // json,\n  Link,\n  Links,\n  LiveReload,\n  // LoaderFunction,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport { json, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport styles from \"./styles/tailwind.css\";\nimport NavBar from \"./components/Navbar/NavBar\";\nimport { auth } from \"./services/auth.server\";\nimport { CURRENT_USER_QUERY } from \"./lib/queries/UserDropdown\";\nimport gqlClient from \"./lib/graphql-client\";\nimport { sessionStorage } from \"./services/session.server\";\n\ntype DocumentProps = {\n  children: React.ReactNode;\n  title?: string;\n};\n\nexport function links() {\n  return [{ rel: \"stylesheet\", href: styles }];\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: \"GitHub Demo App\" };\n};\n\n// Global ErrorBoundary\n// TODO: Put in proper/approved error wording/formatting/styling\nexport function ErrorBoundary({ error }: any) {\n  console.error(error);\n  return (\n    <Document>\n      <h1>Error</h1>\n      <p>{error.message}</p>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n  return (\n    <Document title=\"Error\">\n      <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-center\">\n        <div className=\" mb-8 text-9xl\">{caught.status}</div>\n        <div className=\"mb-5 text-2xl\">\n          <span className=\"\">Ooops...</span>\n          <br />\n          {caught.statusText}\n        </div>\n        <div className=\" rounded bg-gray-900 px-7 py-2 text-white\">\n          <Link to={`/`} className=\" \">\n            Go to Home\n          </Link>\n        </div>\n      </div>\n    </Document>\n  );\n}\n\ntype LoaderData = {\n  viewer?: any;\n  valid?: any;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  const valid = session.get(auth.sessionKey);\n\n  // verifies authed before calling to prevent redirect spiral\n  if (valid) {\n    const { accessToken } = await auth.isAuthenticated(request, {\n      failureRedirect: \"/login\",\n    });\n    const { viewer } = await gqlClient.request(CURRENT_USER_QUERY, undefined, {\n      authorization: `Bearer ${accessToken}`,\n    });\n    return json<LoaderData>({ viewer, valid });\n  }\n  return json<LoaderData>({ valid });\n};\n\nexport default function App() {\n  const { viewer, valid } = useLoaderData<LoaderData>();\n  return (\n    <Document>\n      {valid ? <NavBar user={viewer} /> : null}\n      <Outlet />\n      <ScrollRestoration />\n      <Scripts />\n    </Document>\n  );\n}\n\nexport function Document({ children, title }: DocumentProps) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>{title ? title : \"GitHub Demo App\"}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n", "import * as styles from \"./NavBar.classNames\";\nimport UserDropdownView from \"../UserDropdown/UserDropdown.view\";\nimport { Link } from \"@remix-run/react\";\nimport { GitHubLogo } from \"../Icons/GitHubLogo\";\n\ntype NavBarProps = {\n  user: {\n    avatarUrl: string;\n    login: string;\n  };\n};\n\nfunction NavBar({ user }: NavBarProps) {\n  return (\n    <header className={styles.header}>\n      <Link to=\"/\">\n        <GitHubLogo />\n      </Link>\n      <div>\n        <div>\n          {user ? (\n            <UserDropdownView image={user.avatarUrl} username={user.login} />\n          ) : (\n            <Link to=\"/api/auth/signin\">\n              <a className={styles.navLink}>Sign In</a>\n            </Link>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default NavBar;\n", "export const header = 'bg-gray-900 flex justify-between items-center py-4 px-8';\nexport const navLink = 'text-white font-semibold text-lg';\n", "import { Fragment } from \"react\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";\nimport * as styles from \"./UserDropdown.classNames\";\nimport { Form, Link } from \"@remix-run/react\";\n\ninterface UserDropdownViewProps {\n  image?: string | null;\n  username?: string;\n}\n\nfunction UserDropdownView({ image, username }: UserDropdownViewProps) {\n  return (\n    <Menu as=\"nav\" className={styles.dropdown}>\n      <Menu.Button role=\"button\" className={styles.dropdownBtn}>\n        <div className={styles.avatarContainer}>\n          {image && (\n            <img src={image} alt=\"Profile Photo\" width={32} height={32} />\n          )}\n        </div>\n        <ChevronDownIcon className=\"-mr-1 ml-2 h-5 w-5\" aria-hidden=\"true\" />\n      </Menu.Button>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className={styles.menuItems} data-testid=\"dropdown-menu\">\n          <div className=\"py-1\">\n            {username && (\n              <Menu.Item>\n                <Link to={`/${username}`} className={styles.menuBtn}>\n                  Profile\n                </Link>\n              </Menu.Item>\n            )}\n            <Menu.Item>\n              <Form method=\"post\" action=\"/logout\">\n                <button className={styles.menuBtn}>Sign Out</button>\n              </Form>\n            </Menu.Item>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n}\n\nexport default UserDropdownView;\n", "export const dropdown = 'relative top-1 inline-block text-left';\nexport const dropdownBtn = 'inline-flex items-center text-white';\nexport const avatarContainer =\n  'w-8 h-8 rounded-full overflow-hidden flex items-center justify-center bg-gray-600';\nexport const menuItems =\n  'z-30 origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none';\nexport const menuBtn =\n  'block font-medium px-4 py-2 text-gray-900 hover:text-blue-600';\n", "export function GitHubLogo() {\n  return (\n    <svg\n      height=\"32\"\n      aria-hidden=\"true\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"32\"\n      data-view-component=\"true\"\n      className=\"overflow-visible inline-block text-white align-middle\"\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default GitHubLogo;\n", "import { Authenticator } from 'remix-auth';\nimport type { GitHubExtraParams, GitHubProfile } from 'remix-auth-github';\nimport { GitHubStrategy } from 'remix-auth-github';\nimport { sessionStorage } from '~/services/session.server';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('GITHUB_CLIENT_ID is required');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('GITHUB_CLIENT_SECRET is required');\n}\n\nif (!process.env.BASE_URL) {\n  throw new Error('BASE_URL is required');\n}\n\nconst BASE_URL = process.env.BASE_URL;\n\nexport const auth = new Authenticator<{\n  profile: GitHubProfile;\n  accessToken: string;\n  extraParams: GitHubExtraParams;\n}>(sessionStorage);\n\nauth.use(\n  new GitHubStrategy(\n    {\n      clientID: process.env.GITHUB_CLIENT_ID!,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET!,\n      callbackURL: new URL('/auth/github/callback', BASE_URL).toString(),\n      scope:\n        'user read:user public_repo repo repo_deployment repo:status read:repo_hook read:org read:public_key read:gpg_key',\n    },\n    async ({ profile, accessToken, extraParams }) => {\n      return { profile, accessToken, extraParams };\n    }\n  )\n);\n", "import { createCookieSessionStorage, Session } from 'remix';\n\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '__session',\n    httpOnly: true,\n    path: '/',\n    sameSite: 'lax',\n    secrets: [process.env.SESSION_SECRET], // TODO: replace this with an actual secret\n    secure: process.env.NODE_ENV === 'production',\n  },\n});\n\nexport function getSession(request: Request): Promise<Session> {\n  return sessionStorage.getSession(request.headers.get('Cookie'));\n}\n\nexport let { commitSession, destroySession } = sessionStorage;\n", "import { gql } from 'graphql-request';\n\nexport const CURRENT_USER_QUERY = gql`\n  query CurrentUser {\n    viewer {\n      avatarUrl\n      login\n      name\n    }\n  }\n`;\n", "import { GraphQLClient } from 'graphql-request';\n\nlet gqlClient: GraphQLClient;\n\nconst endpoint =\n  process.env.GITHUB_GRAPHQL_ENDPOINT ?? 'http://localhost:3000/api/graphql';\n  \n// TODO refactor to include auth so we don't have to always pass in auth\ngqlClient = new GraphQLClient(endpoint);\n\nexport default gqlClient;\n", "export {}", "import { useLoaderData } from \"@remix-run/react\";\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport { auth } from \"~/services/auth.server\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { RepoContext, RepoProvider } from \"~/context/RepoContext\";\nimport { parseTopics } from \"~/components/RepoPage/parseTopics\";\nimport { REPO_PAGE_QUERY } from \"~/lib/queries/RepoPage\";\nimport { REPO_FILE_QUERY } from \"~/lib/queries/FileViewer\";\nimport FileViewer from \"~/components/FileViewer/FileViewer\";\nimport RepoHeader from \"~/components/RepoHeader/RepoHeader\";\nimport FileExplorerNav from \"~/components/FileExplorerNav/FileExplorerNav\";\n\ntype LoaderData = {\n  context: RepoContext;\n  data: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  const pathname = url.pathname;\n  const basePath = pathname.split(\"/\");\n  const index = basePath.indexOf(`${params.branch}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join(\"/\") : path;\n  console.log(formattedPath);\n  const defaultBranch = \"HEAD\";\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === \"string\",\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_FILE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: `${context.branch}:${formattedPath}`,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  return json<LoaderData>({ context, data });\n};\n\nexport default function Repository() {\n  const { context, data } = useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-2xl py-8 px-4\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"col-span-12\">\n            <FileExplorerNav />\n            <FileViewer data={data} />\n          </div>\n        </div>\n      </div>\n    </RepoProvider>\n  );\n}\n", "import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\n\nexport interface RepoContext {\n  name: string;\n  owner: string;\n  branch: string;\n  path: string;\n  pathname: string;\n  isRepoLoading?: boolean;\n  data?: {\n    isPrivate: boolean;\n    stargazerCount: number;\n    forkCount: number;\n    watcherCount: number;\n    openIssueCount: number;\n    openPullRequestCount: number;\n    description?: string | null;\n    homepageUrl?: string | null;\n    topics: string[];\n    isOrg: boolean;\n  };\n}\n\ninterface RepoProviderProps {\n  children: ReactNode;\n  value: RepoContext;\n}\n\nexport const RepoContext = createContext<RepoContext | undefined>(undefined);\n\nexport function RepoProvider({ children, value }: RepoProviderProps) {\n  return (\n    <RepoContext.Provider\n      value={{\n        isRepoLoading: false,\n        ...value,\n      }}\n    >\n      {children}\n    </RepoContext.Provider>\n  );\n}\n\nexport function useRepo() {\n  const context = useContext(RepoContext);\n  if (context === undefined) {\n    throw new Error('useRepo must be used within a RepoPage');\n  }\n  return context;\n}\n", "type TopicNodes =\n  | (\n      | {\n          __typename?: 'RepositoryTopic' | undefined;\n          id: string;\n          topic: {\n            __typename?: 'Topic' | undefined;\n            name: string;\n          };\n        }\n      | null\n      | undefined\n    )[]\n  | null\n  | undefined;\n\nexport function parseTopics(topics: TopicNodes): string[] {\n  if (!topics) {\n    return [];\n  }\n\n  return topics.reduce((acc: string[], topic) => {\n    if (topic?.topic) {\n      acc.push(topic.topic.name);\n    }\n    return acc;\n  }, []);\n}\n", "import { gql } from 'graphql-request';\n\nexport const REPO_PAGE_QUERY = gql`\n  query RepoPage($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      defaultBranchRef {\n        name\n      }\n      isPrivate\n      stargazerCount\n      forkCount\n      description\n      homepageUrl\n      watchers(last: 1) {\n        totalCount\n      }\n      issues(first: 1, states: [OPEN]) {\n        totalCount\n      }\n      pullRequests(first: 1, states: [OPEN]) {\n        totalCount\n      }\n      topics: repositoryTopics(first: 10) {\n        nodes {\n          id\n          topic {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n", "import { gql } from 'graphql-request';\n\nexport const REPO_FILE_QUERY = gql`\n  query RepoFile($owner: String!, $name: String!, $expression: String!) {\n    repository(owner: $owner, name: $name) {\n      blob: object(expression: $expression) {\n        ... on Blob {\n          byteSize\n          text\n        }\n      }\n    }\n  }\n`;\n", "import FileViewerView from './FileViewer.view';\nimport { mapExtensionToLanguage } from './mapExtensionToLanguage';\nimport { useRepo } from '~/context/RepoContext';\n\nexport type Blob = {\n  __typename?: 'Blob';\n  abbreviatedOid: string;\n  byteSize: number;\n  commitResourcePath: any;\n  commitUrl: any;\n  id: string;\n  isBinary?: boolean;\n  isTruncated: boolean;\n  oid: any;\n  repository: any;\n  text?: string;\n};\n\nfunction FileViewer({ data }: any ) {\n  const { path } = useRepo();\n\n\n  const file = data?.repository?.blob as Blob | undefined;\n\n  if (!file) {\n    const err = new Error('Repository path not found');\n    throw err;\n  }\n\n  const extension = path.split('.').pop();\n  const language = mapExtensionToLanguage(extension);\n  const text = file.text ? file.text : '';\n  const lines = text.split('\\n').length;\n\n  return (\n    <FileViewerView\n      text={text}\n      byteSize={file.byteSize}\n      lines={lines}\n      language={language}\n    />\n  );\n}\n\nexport default FileViewer;\n", "import type { Language } from 'prism-react-renderer';\nimport FileCode from './FileCode';\nimport FileText from './FileText';\nimport * as styles from './FileViewer.classNames';\n\ninterface FileViewerViewProps {\n  text: string;\n  byteSize: number;\n  lines: number;\n  language?: Language;\n}\n\nfunction FileViewerView({\n  text,\n  byteSize,\n  lines,\n  language,\n}: FileViewerViewProps) {\n  return (\n    <div className={styles.container}>\n      <div className={styles.fileHeader}>\n        <span className={styles.fileHeaderLines}>{lines} lines</span>\n        <span className={styles.fileHeaderBytes}>{byteSize} Bytes</span>\n      </div>\n      {language ? (\n        <FileCode text={text} language={language} />\n      ) : (\n        <FileText text={text} />\n      )}\n    </div>\n  );\n}\n\nexport default FileViewerView;\n", "import type { Language } from 'prism-react-renderer';\nimport cn from 'classnames';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwlLight';\nimport * as styles from './FileViewer.classNames';\n\ninterface FileCodeProps {\n  text: string;\n  language: Language;\n}\n\nfunction FileCode({ text, language }: FileCodeProps) {\n  return (\n    <Highlight {...defaultProps} theme={theme} code={text} language={language}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          data-testid=\"code-block\"\n          className={cn(styles.codeBlock, className)}\n          style={style}\n        >\n          {tokens.map((line, i) => {\n            const { className: defaultClassName, ...lineProps } = getLineProps({\n              line,\n              key: i,\n            });\n            return (\n              <div\n                className={cn('table-row', defaultClassName)}\n                key={i}\n                {...lineProps}\n              >\n                <span className={styles.lineNumber}>{i + 1}</span>\n                <span className=\"table-cell\">\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </span>\n              </div>\n            );\n          })}\n        </pre>\n      )}\n    </Highlight>\n  );\n}\n\nexport default FileCode;\n", "export const container = 'border border-gray-300 rounded-lg overflow-hidden';\n\nexport const fileHeader = 'px-4 py-3 bg-gray-100 border-b border-gray-300 font-mono text-xs text-gray-800';\n\nexport const fileHeaderLines = 'px-2';\n\nexport const fileHeaderBytes = 'px-2 border-l border-gray-300';\n\nexport const codeBlock = 'text-left text-xs py-1 px-8 overflow-auto codeBlock';\n\nexport const lineNumber = 'table-cell text-right pr-4 select-none text-gray-500';\n", "import * as styles from './FileViewer.classNames';\n\ninterface FileTextProps {\n  text: string;\n}\n\nfunction FileText({ text }: FileTextProps) {\n  const lines = text.split('\\n');\n  return (\n    <pre data-testid=\"text-block\" className={styles.codeBlock}>\n      {lines.map((line, i) => (\n        <div key={i} className=\"table-row\">\n          <span className={styles.lineNumber}>{i + 1}</span>\n          <span className=\"table-cell\">{line}</span>\n        </div>\n      ))}\n    </pre>\n  );\n}\n\nexport default FileText;\n", "import type { Language } from 'prism-react-renderer';\n\nexport function mapExtensionToLanguage(\n  extension?: string\n): Language | undefined {\n  let language: Language | undefined;\n  switch (extension?.toLowerCase()) {\n    case 'html':\n    case 'xhtml':\n    case 'xml':\n      language = 'markup';\n      break;\n    case 'sh':\n    case 'bash':\n    case 'zsh':\n      language = 'bash';\n      break;\n    case 'c':\n      language = 'c';\n      break;\n    case 'cpp':\n    case 'cc':\n    case 'h':\n      language = 'cpp';\n      break;\n    case 'css':\n      language = 'css';\n      break;\n    case 'js':\n      language = 'javascript';\n      break;\n    case 'jsx':\n      language = 'jsx';\n      break;\n    case 'coffee':\n      language = 'coffeescript';\n      break;\n    case 'patch':\n    case 'diff':\n      language = 'diff';\n      break;\n    case 'git':\n      language = 'git';\n      break;\n    case 'go':\n      language = 'go';\n      break;\n    case 'graphql':\n    case 'gql':\n      language = 'graphql';\n      break;\n    case 'handlebars':\n    case 'hbs':\n      language = 'handlebars';\n      break;\n    case 'json':\n      language = 'json';\n      break;\n    case 'less':\n      language = 'less';\n      break;\n    case 'md':\n      language = 'markdown';\n      break;\n    case 'm':\n      language = 'objectivec';\n      break;\n    case 'ocaml':\n    case 'ml':\n      language = 'ocaml';\n      break;\n    case 'py':\n    case 'py3':\n    case 'pyc':\n    case 'pyo':\n    case 'pyw':\n    case 'pyx':\n      language = 'python';\n      break;\n    case 're':\n    case 'rei':\n      language = 'reason';\n      break;\n    case 'sass':\n      language = 'sass';\n      break;\n    case 'scss':\n      language = 'scss';\n      break;\n    case 'sql':\n      language = 'sql';\n      break;\n    case 'stylus':\n      language = 'stylus';\n      break;\n    case 'tsx':\n      language = 'tsx';\n      break;\n    case 'ts':\n      language = 'typescript';\n      break;\n    case 'wasm':\n      language = 'wasm';\n      break;\n    case 'yml':\n    case 'yaml':\n      language = 'yaml';\n      break;\n  }\n  return language;\n}\n", "import RepoHeading from '../RepoHeading/RepoHeading';\nimport RepoActionButtons from '../RepoActionButtons/RepoActionButtons';\nimport TabNavigation from '../TabNavigation/TabNavigation';\nimport * as styles from './RepoHeader.classNames';\nimport { createTabList } from './tabList';\nimport { useRepo } from '../../context/RepoContext';\n\nfunction RepoHeader() {\n  const repo = useRepo();\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.topRow}>\n        <RepoHeading />\n        <RepoActionButtons />\n      </div>\n      <div className={styles.bottomRow}>\n        <TabNavigation\n          tabs={createTabList({\n            issueCount: repo.data?.openIssueCount,\n            pullRequestCount: repo.data?.openPullRequestCount,\n          })}\n          basePath={`${repo.owner}/${repo.name}`}\n          pathname={repo.pathname}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default RepoHeader;\n", "import { Link } from \"@remix-run/react\";\nimport { useRepo } from \"../../context/RepoContext\";\nimport PrivacyIcon from \"./PrivacyIcon\";\nimport PrivacyBadge from \"../PrivacyBadge/PrivacyBadge\";\nimport * as styles from \"./RepoHeading.classNames\";\n\nfunction RepoHeading() {\n  const { owner, name, data } = useRepo();\n  return (\n    <h1 className={styles.heading}>\n      <PrivacyIcon isPrivate={data?.isPrivate} />\n      <span className={styles.navContainer}>\n        <Link\n          to={data?.isOrg ? `/orgs/${owner}` : `/${owner}`}\n          className={styles.ownerLink}\n        >\n          {owner}\n        </Link>\n        <span className={styles.separator}>/</span>\n        <Link to={`/${owner}/${name}`} className={styles.nameLink}>\n          {name}\n        </Link>\n      </span>\n      {data ? (\n        <PrivacyBadge isPrivate={data.isPrivate} />\n      ) : (\n        <div className={styles.badgePlaceholder} />\n      )}\n    </h1>\n  );\n}\n\nexport default RepoHeading;\n", "import { LockClosedIcon } from '@heroicons/react/outline';\nimport { GitRepoIcon } from '../Icons';\nimport * as styles from './RepoHeading.classNames';\n\ninterface PrivacyIconProps {\n  isPrivate?: boolean;\n}\n\nfunction PrivacyIcon({ isPrivate }: PrivacyIconProps) {\n  if (isPrivate === undefined) {\n    return <div className={styles.iconPlaceholder} />;\n  }\n\n  return isPrivate ? (\n    <LockClosedIcon className={styles.privacyIcon} />\n  ) : (\n    <GitRepoIcon className={styles.privacyIcon} />\n  );\n}\n\nexport default PrivacyIcon;\n", "export { default as PullRequestIcon } from './PullRequestIcon';\nexport { default as EyeIcon } from './EyeIcon';\nexport { default as GitBranchIcon } from './GitBranchIcon';\nexport { default as GitRepoIcon } from './GitRepoIcon';\nexport { default as TwitterIcon } from './TwitterIcon';\nexport { default as MergedPullRequestIcon } from './MergedPullRequestIcon';\nexport { default as ClosedPullRequestIcon } from './ClosedPullRequestIcon';\nexport { default as TOCIcon } from './TOCIcon';\n", "function PullRequestIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className || 'w-6 h-6'}\n      fill=\"currentColor\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M15 5h2a2 2 0 0 1 2 2v8.17a3.001 3.001 0 1 1-2 0V7h-2v3l-4.5-4L15 2v3zM5 8.83a3.001 3.001 0 1 1 2 0v6.34a3.001 3.001 0 1 1-2 0V8.83zM6 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm0 12a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm12 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\n    </svg>\n  );\n}\n\nexport default PullRequestIcon;\n", "function EyeIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className || 'w-6 h-6'}\n      fill=\"currentColor\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9C2.121 6.88 6.608 3 12 3zm0 16a9.005 9.005 0 0 0 8.777-7 9.005 9.005 0 0 0-17.554 0A9.005 9.005 0 0 0 12 19zm0-2.5a4.5 4.5 0 1 1 0-9 4.5 4.5 0 0 1 0 9zm0-2a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\" />\n    </svg>\n  );\n}\n\nexport default EyeIcon;\n", "function GitBranchIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className || 'w-6 h-6'}\n      fill=\"currentColor\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M7.105 15.21A3.001 3.001 0 1 1 5 15.17V8.83a3.001 3.001 0 1 1 2 0V12c.836-.628 1.874-1 3-1h4a3.001 3.001 0 0 0 2.895-2.21 3.001 3.001 0 1 1 2.032.064A5.001 5.001 0 0 1 14 13h-4a3.001 3.001 0 0 0-2.895 2.21zM6 17a1 1 0 1 0 0 2 1 1 0 0 0 0-2zM6 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm12 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\" />\n    </svg>\n  );\n}\n\nexport default GitBranchIcon;\n", "function GitRepoIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className || 'w-6 h-6'}\n      fill=\"currentColor\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M13 21v2.5l-3-2-3 2V21h-.5A3.5 3.5 0 0 1 3 17.5V5a3 3 0 0 1 3-3h14a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1h-7zm0-2h6v-3H6.5a1.5 1.5 0 0 0 0 3H7v-2h6v2zm6-5V4H6v10.035A3.53 3.53 0 0 1 6.5 14H19zM7 5h2v2H7V5zm0 3h2v2H7V8zm0 3h2v2H7v-2z\" />\n    </svg>\n  );\n}\n\nexport default GitRepoIcon;\n", "function TwitterIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className={className || 'w-6 h-6'}\n      fill=\"currentColor\"\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M22.162 5.656a8.384 8.384 0 0 1-2.402.658A4.196 4.196 0 0 0 21.6 4c-.82.488-1.719.83-2.656 1.015a4.182 4.182 0 0 0-7.126 3.814 11.874 11.874 0 0 1-8.62-4.37 4.168 4.168 0 0 0-.566 2.103c0 1.45.738 2.731 1.86 3.481a4.168 4.168 0 0 1-1.894-.523v.052a4.185 4.185 0 0 0 3.355 4.101 4.21 4.21 0 0 1-1.89.072A4.185 4.185 0 0 0 7.97 16.65a8.394 8.394 0 0 1-6.191 1.732 11.83 11.83 0 0 0 6.41 1.88c7.693 0 11.9-6.373 11.9-11.9 0-.18-.005-.362-.013-.54a8.496 8.496 0 0 0 2.087-2.165z\" />\n    </svg>\n  );\n}\n\nexport default TwitterIcon;\n", "function MergedPullRequestIcon({ className }: { className?: string }) {\n  return (\n    <svg viewBox=\"0 0 20 20\" className={className || 'w-6 h-6'}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default MergedPullRequestIcon;\n", "function ClosedPullRequestIcon({ className }: { className?: string }) {\n  return (\n    <svg viewBox=\"0 0 20 20\" className={className || 'w-6 h-6'}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M10.72 1.227a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.061l-.97.97.97.97a.75.75 0 01-1.06 1.06l-.97-.97-.97.97a.75.75 0 11-1.06-1.06l.97-.97-.97-.97a.75.75 0 010-1.06zM12.75 6.5a.75.75 0 00-.75.75v3.378a2.251 2.251 0 101.5 0V7.25a.75.75 0 00-.75-.75zm0 5.5a.75.75 0 100 1.5.75.75 0 000-1.5zM2.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.25 1a2.25 2.25 0 00-.75 4.372v5.256a2.251 2.251 0 101.5 0V5.372A2.25 2.25 0 003.25 1zm0 11a.75.75 0 100 1.5.75.75 0 000-1.5z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default ClosedPullRequestIcon;\n", "function TOCIcon({ className }: { className?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 16 16\"\n      width=\"16\"\n      height=\"16\"\n      className={className}\n      fill=\"currentColor\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M2 4a1 1 0 100-2 1 1 0 000 2zm3.75-1.5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zm0 5a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5zM3 8a1 1 0 11-2 0 1 1 0 012 0zm-1 6a1 1 0 100-2 1 1 0 000 2z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default TOCIcon;\n", "export const heading = 'space-x-2.5 flex items-center text-xl';\n\nexport const navContainer = 'space-x-1.5 mb-0.5';\n\nexport const ownerLink = 'text-blue-600 hover:underline';\n\nexport const nameLink = 'text-blue-600 font-semibold hover:underline';\n\nexport const separator = 'text-gray-600';\n\nexport const privacyIcon = 'w-6 h-6 text-gray-600';\n\nexport const iconPlaceholder = 'w-6 h-6 bg-gray-200 opacity-25 rounded-lg';\n\nexport const badgePlaceholder = 'w-8 h-6 bg-gray-200 opacity-25 rounded-xl';\n", "import cn from 'classnames';\nimport * as styles from './PrivacyBadge.classNames';\n\ninterface PrivacyBadgeProps {\n  isPrivate: boolean;\n  className?: string;\n}\n\nfunction PrivacyBadge({ isPrivate, className }: PrivacyBadgeProps) {\n  return (\n    <span className={cn(styles.badge, className)}>\n      {isPrivate ? 'Private' : 'Public'}\n    </span>\n  );\n}\n\nexport default PrivacyBadge;\n", "export const badge =\n  'py-0.5 px-2 text-xs rounded-xl text-gray-600 border border-gray-300 font-medium';\n", "import { EyeIcon, GitBranchIcon } from '../Icons';\nimport { StarIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport CountButtonGroup from './CountButtonGroup';\nimport * as styles from './RepoActionButtons.classNames';\n\nfunction RepoActionButtons() {\n  const { data } = useRepo();\n  return (\n    <div className={styles.container}>\n      <CountButtonGroup count={data?.watcherCount}>\n        <EyeIcon className={styles.btnIcon} />\n        Watch\n      </CountButtonGroup>\n      <CountButtonGroup count={data?.stargazerCount}>\n        <StarIcon className={styles.btnIcon} />\n        Star\n      </CountButtonGroup>\n      <CountButtonGroup count={data?.forkCount}>\n        <GitBranchIcon className={styles.btnIcon} />\n        Fork\n      </CountButtonGroup>\n    </div>\n  );\n}\n\nexport default RepoActionButtons;\n", "import type { ReactNode } from 'react';\nimport * as styles from './RepoActionButtons.classNames';\n\ninterface CountButtonGroupProps {\n  children: ReactNode;\n  count?: number;\n}\n\nconst formatCountString = (count: number) => {\n  let countText = `${count}`;\n  if (count && count > 1000) {\n    let digits = countText.split('');\n    digits.splice(digits.length - 3, 3);\n    countText = `${digits.join('')}k`;\n  }\n  return countText;\n};\n\nfunction CountButtonGroup({ children, count = 0 }: CountButtonGroupProps) {\n  let countText = formatCountString(count);\n  return (\n    <span className={styles.btnGroup}>\n      <button type=\"button\" className={styles.btnMain}>\n        {children}\n      </button>\n      <button type=\"button\" className={styles.btnSide}>\n        {countText}\n      </button>\n    </span>\n  );\n}\n\nexport default CountButtonGroup;\n", "export const container = 'flex flex-wrap items-center justify-start';\n\nexport const btnGroup = 'relative z-0 inline-flex shadow-sm rounded-md mx-2 my-1';\n\nexport const btnMain = 'relative inline-flex items-center px-4 py-1.5 rounded-l-md border border-gray-300 bg-transparent text-xs font-medium text-gray-700 hover:bg-gray-200 hover:bg-opacity-25';\n\nexport const btnSide = '-ml-px relative inline-flex items-center px-3 py-1.5 rounded-r-md border border-gray-300 bg-white text-xs font-semibold text-gray-700 hover:text-blue-600';\n\nexport const btnIcon = '-ml-1 mr-1 h-4 w-4 text-gray-600';\n", "import type { TabItem } from \"./types\";\nimport cn from \"classnames\";\nimport { Link } from \"@remix-run/react\";\nimport * as styles from \"./TabNavigation.classNames\";\n\ninterface TabNavigationProps {\n  tabs: TabItem[];\n  basePath?: string;\n  className?: string;\n  isOrg?: boolean;\n  pathname: string;\n}\n\nfunction TabNavigation({\n  tabs,\n  className,\n  basePath = \"\",\n  pathname,\n}: TabNavigationProps) {\n  const isCurrentTab = (pathName?: string) => {\n    const otherPaths = tabs\n      .filter(({ path }) => path !== pathName)\n      .map(({ path }) => path);\n    return pathName !== \"\"\n      ? pathname.includes(pathName!)\n      : otherPaths.every((path) => !pathname.includes(path!));\n  };\n\n  return (\n    <div className={cn(styles.container, className)}>\n      <nav className={styles.nav} aria-label=\"Tabs\">\n        {tabs.map(({ title, path, Icon, count }, index) => {\n          let href = path === \"\" ? `/${basePath}` : `/${basePath}/${path}`;\n          return (\n            <Link\n              to={href}\n              key={index}\n              className={cn(\n                isCurrentTab(path) ? styles.tabActive : styles.tabInactive,\n                styles.tab\n              )}\n            >\n              <Icon\n                className={cn(\n                  isCurrentTab(path) ? styles.iconActive : styles.iconInactive,\n                  styles.icon\n                )}\n              />\n              <span>{title}</span>\n              {typeof count === \"number\" && (\n                <span className=\"ml-2 rounded-xl bg-gray-200 py-0.5 px-2 text-xs font-medium text-gray-800\">\n                  {count}\n                </span>\n              )}\n            </Link>\n          );\n        })}\n      </nav>\n    </div>\n  );\n}\n\nexport default TabNavigation;\n", "export const container = 'border-b border-gray-200';\n\nexport const nav = '-mb-px flex';\n\nexport const tab = 'inline-flex items-center p-4 border-b-2 font-medium text-sm';\n\nexport const tabInactive = 'border-transparent text-gray-600 hover:border-gray-300';\n\nexport const tabActive = 'border-yellow-500 text-gray-900 font-semibold';\n\nexport const icon = '-ml-0.5 mr-2 h-5 w-5 border-none';\n\nexport const iconInactive = 'text-gray-500';\n\nexport const iconActive = 'text-gray-700';\n", "export const wrapper = 'pt-6 px-12 bg-gray-100 border-b border-gray-300';\n\nexport const topRow = 'flex flex-col space-y-8 lg:space-y-0 lg:flex-row lg:items-center justify-between';\n\nexport const bottomRow = 'mt-6';\n", "import type { TabItem }  from '../TabNavigation/types';\nimport { CodeIcon, InformationCircleIcon } from '@heroicons/react/outline';\nimport { PullRequestIcon } from '../Icons';\n\nexport function createTabList({\n  issueCount = 0,\n  pullRequestCount = 0,\n}: {\n  issueCount?: number;\n  pullRequestCount?: number;\n}): TabItem[] {\n  return [\n    {\n      title: 'Code',\n      path: '',\n      Icon: CodeIcon,\n    },\n    {\n      title: 'Issues',\n      path: 'issues',\n      Icon: InformationCircleIcon,\n      count: issueCount,\n    },\n    {\n      title: 'Pull Requests',\n      path: 'pulls',\n      Icon: PullRequestIcon,\n      count: pullRequestCount,\n    },\n  ];\n}\n", "import { GitBranchIcon } from \"../Icons\";\nimport { Link } from \"@remix-run/react\";\nimport { useRepo } from \"../../context/RepoContext\";\nimport * as styles from \"./FileExplorerNav.classNames\";\nimport { removePathPart } from \"../../lib/pathUtils\";\n\nfunction RepoNavigation() {\n  const { name, owner, path, branch } = useRepo();\n  const crumbs = path.split(\"/\").filter(Boolean);\n  return (\n    <nav className={styles.container}>\n      <button className={styles.btn}>\n        <GitBranchIcon className={styles.btnIcon} /> {branch}{\" \"}\n        <span className={styles.btnCaret}>{\"\\u25BC\"}</span>\n      </button>\n      {crumbs.length > 0 && (\n        <div className={styles.crumbs}>\n          <Link to={`/${owner}/${name}`} className={styles.rootLink}>\n            {name}\n          </Link>\n          <span className={styles.separator}>/</span>\n          {crumbs.map((crumb, i) => {\n            const isLast = i === crumbs.length - 1;\n            const crumbPath = removePathPart(crumbs, i);\n            const href = `${owner}/${name}/tree/${branch}/${crumbPath}`;\n            return (\n              <>\n                {isLast ? (\n                  <span className={styles.crumbEnd}>{crumb}</span>\n                ) : (\n                  <>\n                    <Link\n                      to={`/${href}`}\n                      prefetch=\"intent\"\n                      className={styles.crumbLink}\n                    >\n                      {crumb}\n                    </Link>\n                    <span className={styles.separator}>/</span>\n                  </>\n                )}\n              </>\n            );\n          })}\n        </div>\n      )}\n    </nav>\n  );\n}\n\nexport default RepoNavigation;\n", "export const container = 'my-6 flex items-center';\nexport const btn = 'relative inline-flex items-center px-4 py-1 rounded-md bg-gray-50 border border-gray-300 font-medium text-gray-700 hover:bg-gray-200 hover:bg-opacity-50';\nexport const btnIcon = 'w-5 h-5 text-gray-600 mr-1';\nexport const btnCaret = 'text-[10px] text-gray-600 ml-1.5 mt-0.5';\nexport const separator = 'text-lg text-gray-800 leading-snug mx-1.5';\nexport const rootLink = 'font-semibold text-blue-600 hover:underline';\nexport const crumbs = 'flex px-3';\nexport const crumbLink = 'text-blue-600 hover:underline';\nexport const crumbEnd = 'font-semibold';\n", "export function removeLastPathPart(path: string) {\n  const pathParts = path.split('/');\n  return pathParts.slice(0, pathParts.length - 1).join('/');\n}\n\nexport function removePathPart(path: string[], index: number) {\n  return path.slice(0, index + 1).join('/');\n}\n", "import { json, LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData, useOutletContext } from \"@remix-run/react\";\nimport { parseQueryData } from \"~/components/FileExplorer/parseQueryData\";\nimport FileExplorerNav from \"~/components/FileExplorerNav/FileExplorerNav\";\nimport RepoHeader from \"~/components/RepoHeader/RepoHeader\";\nimport FileExplorer from \"~/components/FileExplorer/FileExplorer.view\";\nimport { parseTopics } from \"~/components/RepoPage/parseTopics\";\nimport { parseQuery } from \"~/components/RepoReadMe/parseQuery\";\nimport RepoReadMe from \"~/components/RepoReadMe/RepoReadMe.view\";\nimport { RepoContext, RepoProvider } from \"~/context/RepoContext\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { auth } from \"~/services/auth.server\";\nimport { REPO_PAGE_QUERY } from \"~/lib/queries/RepoPage\";\nimport { REPO_TREE_QUERY } from \"~/lib/queries/FileExplorer\";\nimport { REPO_README_QUERY } from \"~/lib/queries/RepoReadMe\";\ntype LoaderData = {\n  context: any;\n  items: any;\n  readme: any;\n};\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  const pathname = url.pathname;\n  const basePath = pathname.split(\"/\");\n  const index = basePath.indexOf(`${params.branch}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join(\"/\") : path;\n  const defaultBranch = \"HEAD\";\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          // @ts-ignore - generated types be like that\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === \"string\",\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_TREE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: `${context.branch}:${context.path}`,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const items = parseQueryData(data);\n\n  if (items.length < 1)\n    throw new Response(\"Not Found\", {\n      status: 404,\n    });\n\n  const readmeData = await gqlClient.request(\n    REPO_README_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: context.path\n        ? `HEAD:${context.path}/README.md`\n        : \"HEAD:README.md\",\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const readme = parseQuery(readmeData);\n\n  return json<LoaderData>({ context, items, readme });\n};\n\nexport default function Screen() {\n  const { context, items, readme } = useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-2xl py-8 px-4\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"col-span-12\">\n            <FileExplorerNav />\n            <FileExplorer\n              items={items}\n              branch={context.branch}\n              basePath={`/${context.owner}/${context.name}`}\n              repoPath={context.path}\n            />\n            {readme && <RepoReadMe readme={readme} />}\n          </div>\n        </div>\n      </div>\n    </RepoProvider>\n  );\n}\n", "import type { RepoTreeQuery, TreeEntry, Tree } from '@lib/github';\nimport type { ExplorerItem } from './types';\n\nexport function parseQueryData(data?: RepoTreeQuery) {\n  const fileTree = data?.repository?.tree as Tree | undefined;\n  const items: ExplorerItem[] =\n    fileTree?.entries?.map(({ name, path, type }: TreeEntry) => {\n      return {\n        name,\n        path: path ?? '',\n        type,\n      };\n    }) ?? [];\n  return items.sort((a, b) => {\n    if (a.type === 'tree' && b.type !== 'tree') {\n      return -1;\n    }\n    if (a.type !== 'tree' && b.type === 'tree') {\n      return 1;\n    }\n    return a.name.localeCompare(b.name);\n  });\n}\n", "import type { ExplorerItem } from \"./types\";\nimport { Link } from \"@remix-run/react\";\nimport { removeLastPathPart } from \"../../lib/pathUtils\";\nimport { FolderIcon } from \"@heroicons/react/solid\";\nimport { DocumentIcon } from \"@heroicons/react/outline\";\nimport * as styles from \"./FileExplorer.classNames\";\n\ninterface FileExplorerViewProps {\n  items: ExplorerItem[];\n  branch: string;\n  basePath: string;\n  repoPath: string;\n}\n\nfunction FileExplorerView({\n  items,\n  branch,\n  basePath,\n  repoPath,\n}: FileExplorerViewProps) {\n  const backPath = removeLastPathPart(repoPath);\n  const backLink = `${basePath}/tree/${branch}/${backPath}`;\n  return (\n    <div className={styles.container}>\n      {repoPath && (\n        <Link to={backLink} className={styles.cellBack}>\n          <div className=\"text-blue-600\">..</div>\n        </Link>\n      )}\n      {items.map((item) => (\n        <div key={item.path} className={styles.cell}>\n          <div className=\"flex items-center\">\n            <div className=\"mr-2.5\">\n              {item.type === \"tree\" ? (\n                <FolderIcon className={styles.iconDir} />\n              ) : (\n                <DocumentIcon className={styles.iconFile} />\n              )}\n            </div>\n            <Link\n              to={`${basePath}/${item.type}/${branch}/${item.path}`}\n              className={styles.link}\n            >\n              {item.name}\n            </Link>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FileExplorerView;\n", "export const container = 'border rounded border-gray-300 text-sm';\n\nexport const cellBack = 'block py-2 px-4 border-b border-gray-200 hover:bg-gray-50 cursor-pointer';\n\nexport const cell = 'py-2 px-4 border-b border-gray-300 last-of-type:border-none hover:bg-gray-50';\n\nexport const iconFile = 'w-5 h-5 text-gray-500';\n\nexport const iconDir = 'w-5 h-5 text-blue-400';\n\nexport const link = 'hover:text-blue-600 hover:underline';\n", "import type { Blob, RepoReadMeQuery } from '@lib/github';\n\nexport function parseQuery(data: RepoReadMeQuery) {\n  const readme = data.repository?.readme as Blob;\n  return readme?.text ?? undefined;\n}\n", "import ReactMarkdown from 'react-markdown';\nimport { TOCIcon } from '../Icons';\nimport Empty from './Empty';\nimport * as styles from './RepoReadMe.classNames';\n\ninterface RepoReadMeViewProps {\n  readme: string;\n}\n\nfunction RepoReadMeView({ readme }: RepoReadMeViewProps) {\n  return (\n    <>\n      {readme ? (\n        <div className={styles.container} data-testid=\"readme\">\n          <header className={styles.header}>\n            <span className={styles.tocIconContainer}>\n              <TOCIcon className={styles.tocIcon} />\n            </span>\n            <span className={styles.filename}>README.md</span>\n          </header>\n          <article className=\"prose py-6 px-10 max-w-none prose-headings:font-medium prose-p:my-3 prose-p:leading-6 prose-headings:border-b prose-headings:my-1 prose-headings:pb-2 prose-h1:my-4 prose-h2:my-4 prose-h3:border-none prose-h4:border-none prose-h5:border-none prose-img:inline prose-img:m-0 prose-a:text-blue-600 prose-a:no-underline prose-a:font-normal hover:prose-a:underline prose-li:my-0.5 prose-pre:bg-gray-100  prose-code:text-gray-800 text-gray-800\">\n            <ReactMarkdown>{readme}</ReactMarkdown>\n          </article>\n        </div>\n      ) : (\n        <Empty />\n      )}\n    </>\n  );\n}\n\nexport default RepoReadMeView;\n", "import * as styles from './RepoReadMe.classNames';\n\nfunction Empty() {\n  return (\n    <div className={styles.emptyContainer}>\n      <div className={styles.emptyText}>\n        Help people interested in this repository understand your project by\n        adding a README.\n      </div>\n      <button className={styles.addReadmeBtn}>Add a README</button>\n    </div>\n  );\n}\n\nexport default Empty;\n", "export const container = 'rounded-md border border-gray-300 my-4';\n\nexport const header = 'p-2.5 border-b border-gray-300 sticky top-0 bg-white z-30';\n\nexport const tocIconContainer = 'hover:bg-gray-100 mr-2 p-1.5 rounded';\n\nexport const tocIcon = 'inline-block -mt-0.5';\n\nexport const filename = 'text-sm font-semibold';\n\nexport const emptyContainer = 'bg-sky-100 p-4 rounded-md border border-sky-200 flex items-center justify-between my-4';\n\nexport const emptyText = 'text-gray-800 text-sm';\n\nexport const addReadmeBtn = 'bg-green-600 hover:bg-green-700 inline-flex text-white font-semibold rounded-lg border border-gray-200 py-1.5 px-4 text-xs';\n", "import { gql } from 'graphql-request';\n\nexport const REPO_TREE_QUERY = gql`\n  query RepoTree($owner: String!, $name: String!, $expression: String!) {\n    repository(owner: $owner, name: $name) {\n      branches: refs(refPrefix: \"refs/heads/\", last: 5) {\n        nodes {\n          name\n        }\n      }\n      tree: object(expression: $expression) {\n        ... on Tree {\n          entries {\n            name\n            type\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n", "import { gql } from 'graphql-request';\n\nexport const REPO_README_QUERY = gql`\n  query RepoReadMe($owner: String!, $name: String!, $expression: String!) {\n    repository(owner: $owner, name: $name) {\n      readme: object(expression: $expression) {\n        ... on Blob {\n          text\n        }\n      }\n    }\n  }\n`;\n", "import { json, LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport RepoHeader from \"~/components/RepoHeader/RepoHeader\";\nimport { parseQuery } from \"~/components/RepoIssues/parseQuery\";\nimport RepoIssues from \"~/components/RepoIssues/RepoIssues\";\nimport { parseTopics } from \"~/components/RepoPage/parseTopics\";\nimport { RepoContext, RepoProvider } from \"~/context/RepoContext\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { REPO_ISSUES_QUERY } from \"~/lib/queries/RepoIssues\";\nimport { REPO_PAGE_QUERY } from \"~/lib/queries/RepoPage\";\nimport { auth } from \"~/services/auth.server\";\ntype LoaderData = {\n  context: RepoContext;\n  openIssues: any;\n  closedIssues: any;\n  milestones: any;\n  labels: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  const searchParams = url.searchParams;\n\n  const label = searchParams.get(\"Label\");\n  const milestone = searchParams.get(\"Milestones\");\n  const after = searchParams.get(\"after\");\n  const before = searchParams.get(\"before\");\n  const orderBy = searchParams.get(\"Sort\");\n  const orderByArr = orderBy?.split(\"^\");\n\n  const pathname = url.pathname;\n  const basePath = pathname.split(\"/\");\n  const index = basePath.lastIndexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join(\"/\") : path;\n  const defaultBranch = \"HEAD\";\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === \"string\",\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_ISSUES_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      orderBy: {\n        field: orderByArr ? orderByArr[0] : \"CREATED_AT\",\n        direction: orderByArr ? orderByArr[1] : \"DESC\",\n      },\n      filterBy:\n        label || milestone\n          ? {\n              labels: label ? [label] : undefined,\n              milestone: milestone || undefined,\n            }\n          : undefined,\n      last: before ? 25 : null,\n      first: !before || after ? 25 : null,\n      after,\n      before,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const { openIssues, closedIssues, milestones, labels } = parseQuery(data);\n\n  return json<LoaderData>({\n    context,\n    openIssues,\n    closedIssues,\n    milestones,\n    labels,\n  });\n};\n\nexport default function Issues() {\n  const { context, openIssues, closedIssues, milestones, labels } =\n    useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-xl md:py-12\">\n        <RepoIssues\n          openIssues={openIssues}\n          closedIssues={closedIssues}\n          milestones={milestones}\n          labels={labels}\n        />\n      </div>\n    </RepoProvider>\n  );\n}\n", "import type { Issue, Label, Milestone } from './types';\n\nexport type RepoIssuesQuery = { __typename?: 'Query', repository?: { __typename?: 'Repository', milestones?: { __typename?: 'MilestoneConnection', totalCount: number, nodes?: Array<{ __typename?: 'Milestone', id: string, closed: boolean, description?: string | null | undefined, number: number, title: string } | null | undefined> | null | undefined, pageInfo: { __typename?: 'PageInfo', startCursor?: string | null | undefined, endCursor?: string | null | undefined, hasNextPage: boolean, hasPreviousPage: boolean } } | null | undefined, closedIssues: { __typename?: 'IssueConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, endCursor?: string | null | undefined, hasPreviousPage: boolean, startCursor?: string | null | undefined }, nodes?: Array<{ __typename?: 'Issue', id: string, closed: boolean, closedAt?: any | null | undefined, title: string, number: number, createdAt: any, author?: { __typename?: 'Bot', login: string } | { __typename?: 'EnterpriseUserAccount', login: string } | { __typename?: 'Mannequin', login: string } | { __typename?: 'Organization', login: string } | { __typename?: 'User', login: string } | null | undefined, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', totalCount: number, nodes?: Array<{ __typename?: 'Label', color: string, name: string } | null | undefined> | null | undefined } | null | undefined } | null | undefined> | null | undefined }, openIssues: { __typename?: 'IssueConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasNextPage: boolean, endCursor?: string | null | undefined, hasPreviousPage: boolean, startCursor?: string | null | undefined }, nodes?: Array<{ __typename?: 'Issue', id: string, closed: boolean, title: string, number: number, createdAt: any, author?: { __typename?: 'Bot', login: string } | { __typename?: 'EnterpriseUserAccount', login: string } | { __typename?: 'Mannequin', login: string } | { __typename?: 'Organization', login: string } | { __typename?: 'User', login: string } | null | undefined, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', nodes?: Array<{ __typename?: 'Label', color: string, name: string } | null | undefined> | null | undefined } | null | undefined } | null | undefined> | null | undefined } } | null | undefined };\n\n\n// sorry, couldn't get a type for issueConnection that made ts happy :(\nfunction parseIssues(issueConnection?: any) {\n  if (!issueConnection) {\n    return {\n      issues: [],\n      totalCount: 0,\n      pageInfo: { hasNextPage: false, hasPreviousPage: false },\n    };\n  }\n\n  const pageInfo = issueConnection.pageInfo;\n  const nodes = issueConnection.nodes || [];\n  const totalCount = issueConnection.totalCount;\n\n  const issues = nodes.reduce((issues: Issue[], issue: any) => {\n    if (!issue) {\n      return issues;\n    }\n\n    const labelNodes = issue.labels?.nodes || [];\n    const labels = labelNodes.reduce(\n      (labels: Label[], label: any) =>\n        label\n          ? [\n              ...labels,\n              {\n                color: label.color,\n                name: label.name,\n              },\n            ]\n          : labels,\n      []\n    );\n\n    return [\n      ...issues,\n      {\n        id: issue.id,\n        login: issue.author?.login,\n        commentCount: issue.comments.totalCount,\n        labelCount: issue.labels.totalCount,\n        labels,\n        closed: issue.closed,\n        title: issue.title,\n        number: issue.number,\n        createdAt: issue.createdAt,\n        closedAt: issue.closedAt,\n      },\n    ];\n  }, []);\n\n  return { issues, totalCount, pageInfo };\n}\n\nfunction parseMilestones(milestones?: any) {\n  const nodes = milestones.nodes || [];\n  return nodes.reduce((milestones: Milestone[], milestone: any) => {\n    if (!milestone) {\n      return milestones;\n    }\n\n    return [\n      ...milestones,\n      {\n        id: milestone.id,\n        closed: milestone.closed,\n        title: milestone.title,\n        number: milestone.number,\n        description: milestone.description,\n      },\n    ];\n  }, []);\n}\n\nexport function parseQuery(data: RepoIssuesQuery) {\n  const openIssues = parseIssues(data.repository?.openIssues);\n  const closedIssues = parseIssues(data.repository?.closedIssues);\n  const milestones = parseMilestones(data.repository?.milestones);\n\n  const labelMap = [...closedIssues.issues, ...openIssues.issues].reduce(\n    (acc: { [key: string]: Label }, issue: Issue) => {\n      const map: { [key: string]: Label } = {};\n      issue.labels.forEach((label) => {\n        map[label.name] = label;\n      });\n      return {\n        ...acc,\n        ...map,\n      };\n    },\n    {}\n  );\n\n  return {\n    openIssues,\n    closedIssues,\n    milestones,\n    labels: Object.values(labelMap) as Label[],\n  };\n}\n", "import { MinusCircleIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport IssuesContainer from '../IssuesContainer/IssuesContainer';\nimport IssuesEmpty from '../IssuesEmpty/IssuesEmpty';\nimport RepoIssuesView from './RepoIssues.view';\nimport { Label } from './types';\nimport { IssueState, IssueType, useIssueFilters } from '../IssueFilters/useIssueFilters';\nimport IssueFilters from '../IssueFilters/IssueFilters';\nimport Pagination from '../IssueFilters/Pagination';\n\ninterface RepoIssuesProps {\n  openIssues: {\n    issues: any;\n    totalCount: any;\n    pageInfo: any;\n  };\n  closedIssues: {\n    issues: any;\n    totalCount: any;\n    pageInfo: any;\n};\nmilestones: any;\nlabels: Label[]\n}\n\nexport const stateFilter = () => {\n  const filters = useIssueFilters();\n  return filters\n}\n\n\nfunction RepoIssues({ openIssues, closedIssues, milestones, labels }: RepoIssuesProps ) {\n  const { pathname } = useRepo();\n\n  const filters = useIssueFilters();\n\n  const activeIssues = filters.state.state === IssueState.Open ? openIssues : closedIssues;\n\n  const filtersElement = (\n    <IssueFilters\n      openCount={openIssues.totalCount}\n      closedCount={closedIssues.totalCount}\n      milestones={milestones}\n      labels={labels}\n      type={IssueType.Issue}\n      {...filters}\n    />\n  );\n\n  return (\n    <>\n      <IssuesContainer\n        filtersEl={filtersElement}\n        clearFilters={filters.clearFilters}\n        hasActiveFilters={filters.hasActiveFilters}\n      >\n        {activeIssues.issues.length > 0 ? (\n          <RepoIssuesView pathname={pathname} issues={activeIssues.issues} />\n        ) : (\n          <IssuesEmpty Icon={MinusCircleIcon} />\n        )}\n      </IssuesContainer>\n      {(activeIssues.pageInfo.hasNextPage || activeIssues.pageInfo?.hasPreviousPage) && (\n        <Pagination\n          pageInfo={activeIssues.pageInfo}\n          changePage={filters.changePage}\n        />\n      )}\n    </>\n  );\n}\n\nexport default RepoIssues;\n", "import type { ReactNode } from \"react\";\nimport cn from \"classnames\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport * as styles from \"./IssuesContainer.classNames\";\nimport { useSearchParams } from \"@remix-run/react\";\n\ninterface IssuesContainerProps {\n  filtersEl: JSX.Element;\n  children: ReactNode;\n  clearFilters?: () => void;\n  hasActiveFilters?: boolean;\n}\n\nfunction IssuesContainer({\n  filtersEl,\n  children,\n  hasActiveFilters = false,\n  clearFilters,\n}: IssuesContainerProps) {\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  return (\n    <>\n      {hasActiveFilters && (\n        <button\n          className={cn(styles.clearButton, \"group\")}\n          onClick={() => {\n            clearFilters ? (clearFilters(), setSearchParams(\"\")) : \"\";\n          }}\n        >\n          <span\n            className={cn(\n              styles.clearButtonIconContainer,\n              \"group-hover:bg-blue-500\"\n            )}\n          >\n            <XIcon className={styles.clearButtonIcon} />\n          </span>\n          <span\n            className={cn(styles.clearButtonText, \"group-hover:text-blue-500\")}\n          >\n            Clear current search query, filters, and sorts\n          </span>\n        </button>\n      )}\n      <div className={styles.container}>\n        {filtersEl}\n        {children}\n      </div>\n    </>\n  );\n}\n\nexport default IssuesContainer;\n", "export const clearButton = 'mb-6 inline-flex items-center space-x-1.5';\n\nexport const clearButtonIconContainer = 'bg-gray-500 rounded-md p-0.5 inline-flex items-center justify-center';\n\nexport const clearButtonIcon = 'h-3.5 w-3.5 text-white';\n\nexport const clearButtonText = 'text-sm font-semibold text-gray-500';\n\nexport const container = 'border rounded-lg overflow-hidden';\n", "import type { ComponentType } from 'react';\nimport * as styles from './IssuesEmpty.classNames';\n\ninterface IssuesEmptyProps {\n  Icon?: ComponentType<{ className: string }>;\n}\n\nfunction IssuesEmpty({ Icon }: IssuesEmptyProps) {\n  return (\n    <div className={styles.container} data-testid=\"issues-empty\">\n      {Icon && <Icon className={styles.icon} />}\n      <h3 className={styles.heading}>No results matched your search.</h3>\n    </div>\n  );\n}\n\nexport default IssuesEmpty;\n", "export const container = 'w-full py-16 flex flex-col items-center';\n\nexport const icon = 'w-6 h-6 text-gray-600';\n\nexport const heading = 'text-2xl font-semibold text-gray-900 text-center my-4';\n", "import type { Issue } from './types';\nimport cn from 'classnames';\nimport {\n  MinusCircleIcon,\n  CheckCircleIcon,\n  ChatAltIcon,\n} from '@heroicons/react/outline';\nimport { formatDistance } from 'date-fns';\nimport * as styles from './RepoIssues.classNames';\n\ninterface RepoIssuesViewProps {\n  issues: Issue[];\n  pathname: string;\n}\n\nfunction RepoIssuesView({ issues, pathname }: RepoIssuesViewProps) {\n  return (\n    <>\n      {issues.map((issue) => (\n        <div key={issue.id} className={styles.issue} data-testid=\"issue\">\n          <div className={styles.container}>\n            <div className=\"flex\">\n              <div>\n                {issue.closed ? (\n                  <CheckCircleIcon\n                    className={cn(styles.stateIcon, 'text-purple-600')}\n                  />\n                ) : (\n                  <MinusCircleIcon\n                    className={cn(styles.stateIcon, 'text-green-600')}\n                  />\n                )}\n              </div>\n              <div>\n                <div className={styles.content}>\n                  <span className={styles.title}>\n                    <a\n                      href={`https://github.com${pathname}/${issue.number}`}\n                      target=\"_blank\"\n                    >\n                      {issue.title}\n                    </a>\n                  </span>\n                  <span className=\"inline\">\n                    {issue.labels.map(({ color, name }) => (\n                      <span\n                        key={color}\n                        style={{\n                          backgroundColor: `#${color}`,\n                        }}\n                        className={styles.label}\n                      >\n                        {name}\n                      </span>\n                    ))}\n                  </span>\n                </div>\n                <div className={styles.meta}>\n                  #{issue.number}{' '}\n                  {issue.closed === false && (\n                    <span>\n                      opened{' '}\n                      {formatDistance(new Date(), new Date(issue.createdAt))}{' '}\n                      ago{' '}\n                    </span>\n                  )}\n                  by <span className={styles.link}>{issue.login}</span>\n                  {issue.closedAt && (\n                    <span>\n                      {' '}\n                      was closed{' '}\n                      {formatDistance(new Date(), new Date(issue.closedAt))} ago\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-1\">\n              <span className={styles.comments}>\n                <ChatAltIcon className={styles.commentsIcon} />\n                {issue.commentCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default RepoIssuesView;\n", "export const issue = 'p-4 hover:bg-gray-100 border-b';\n\nexport const container = 'flex flex-wrap justify-between items-start';\n\nexport const stateIcon = 'w-5 h-5 mr-2 mt-0.5';\n\nexport const content = 'max-w-3xl leading-tight';\n\nexport const title = 'font-semibold text-gray-800 hover:text-blue-500 hover:cursor-pointer mr-1';\n\nexport const label = 'inline-block py-0.5 px-2 mx-0.5 rounded-xl text-xs font-medium whitespace-nowrap cursor-pointer';\n\nexport const meta = 'mt-1.5 text-xs text-gray-600';\n\nexport const link = 'hover:text-blue-500 cursor-pointer';\n\nexport const comments = 'text-sm text-gray-700';\n\nexport const commentsIcon = 'inline h-5 w-5 mr-1';\n", "import { useReducer } from 'react';\nimport { OrderDirection } from '../RepoFilters/useRepoFilters';\n\nexport enum IssueOrderField {\n  Comments = 'COMMENTS',\n  CreatedAt = 'CREATED_AT',\n  UpdatedAt = 'UPDATED_AT',\n}\n\nexport enum IssueState {\n  Closed = 'CLOSED',\n  Open = 'OPEN',\n}\n\nexport type IssueFilterAPI = ReturnType<typeof useIssueFilters>;\n\nexport enum IssueType {\n  Issue = 'issue',\n  PullRequest = 'pull',\n}\n\nenum ActionType {\n  SET_MILESTONE,\n  SET_LABEL,\n  REMOVE_LABEL,\n  CHANGE_STATE,\n  SET_SORT,\n  CHANGE_PAGE,\n  RESET_STATE,\n}\n\nexport interface FilterState {\n  label: string | null;\n  milestone: string | null;\n  state: IssueState;\n  type: IssueType;\n  sort: {\n    field: IssueOrderField;\n    direction: OrderDirection;\n  };\n  afterCursor?: string | null;\n  beforeCursor?: string | null;\n}\n\ntype FilterAction =\n  | { type: ActionType.SET_MILESTONE; payload: { milestone: string } }\n  | { type: ActionType.SET_LABEL; payload: { label: string } }\n  | { type: ActionType.CHANGE_STATE; payload: { state: IssueState } }\n  | {\n      type: ActionType.SET_SORT;\n      payload: { field: IssueOrderField; direction: OrderDirection };\n    }\n  | {\n      type: ActionType.CHANGE_PAGE;\n      payload: { afterCursor?: string | null; beforeCursor?: string | null };\n    }\n  | { type: ActionType.RESET_STATE };\n\nconst initialState: FilterState = {\n  label: null,\n  milestone: null,\n  state: IssueState.Open,\n  type: IssueType.Issue,\n  sort: {\n    field: IssueOrderField.CreatedAt,\n    direction: OrderDirection.Desc,\n  },\n};\n\nfunction reducer(state: FilterState, action: FilterAction): FilterState {\n  switch (action.type) {\n    case ActionType.SET_MILESTONE:\n      return {\n        ...state,\n        milestone: action.payload.milestone,\n        afterCursor: undefined,\n        beforeCursor: undefined,\n      };\n    case ActionType.SET_LABEL:\n      return {\n        ...state,\n        label: action.payload.label,\n        afterCursor: undefined,\n        beforeCursor: undefined,\n      };\n    case ActionType.CHANGE_STATE:\n      return {\n        ...state,\n        state: action.payload.state,\n        afterCursor: undefined,\n        beforeCursor: undefined,\n      };\n    case ActionType.SET_SORT:\n      return {\n        ...state,\n        sort: {\n          field: action.payload.field,\n          direction: action.payload.direction,\n        },\n        afterCursor: undefined,\n        beforeCursor: undefined,\n      };\n    case ActionType.CHANGE_PAGE:\n      return {\n        ...state,\n        afterCursor: action.payload.afterCursor,\n        beforeCursor: action.payload.beforeCursor,\n      };\n    case ActionType.RESET_STATE:\n      return {\n        ...initialState,\n        type: state.type,\n      };\n  }\n}\n\nexport function useIssueFilters(type: IssueType = IssueType.Issue) {\n  const [state, dispatch] = useReducer(reducer, {\n    ...initialState,\n    type: type,\n  });\n\n  function setMilestone(milestone: string) {\n    dispatch({ type: ActionType.SET_MILESTONE, payload: { milestone } });\n  }\n\n  function setLabel(label: string) {\n    dispatch({ type: ActionType.SET_LABEL, payload: { label } });\n  }\n\n  function setSort(sort: string) {\n    const [field, direction] = sort.split('^');\n    dispatch({\n      type: ActionType.SET_SORT,\n      payload: {\n        field: field as IssueOrderField,\n        direction: direction as OrderDirection,\n      },\n    });\n  }\n\n  function changeState(state: IssueState) {\n    dispatch({ type: ActionType.CHANGE_STATE, payload: { state } });\n  }\n\n  function changePage({\n    after,\n    before,\n  }: {\n    after?: string | null;\n    before?: string | null;\n  }) {\n    dispatch({\n      type: ActionType.CHANGE_PAGE,\n      payload: { afterCursor: after, beforeCursor: before },\n    });\n  }\n\n  function clearFilters() {\n    dispatch({ type: ActionType.RESET_STATE });\n  }\n\n  const hasActiveFilters =\n    typeof state.label === 'string' ||\n    typeof state.milestone === 'string' ||\n    state.sort.direction !== OrderDirection.Desc ||\n    state.sort.field !== IssueOrderField.CreatedAt;\n\n  return {\n    state,\n    hasActiveFilters,\n    setMilestone,\n    setLabel,\n    setSort,\n    clearFilters,\n    changeState,\n    changePage,\n  };\n}\n", "import { useReducer } from 'react';\n\n\nexport enum RepositoryOrderField {\n  CreatedAt = 'CREATED_AT',\n  Name = 'NAME',\n  PushedAt = 'PUSHED_AT',\n  Stargazers = 'STARGAZERS',\n  UpdatedAt = 'UPDATED_AT'\n}\n\nexport enum OrderDirection {\n  Asc = 'ASC',\n  Desc = 'DESC'\n}\n\nexport type FiltersAPI = ReturnType<typeof useRepoFilters>;\n\nexport enum TypeFilter {\n  ALL = 'all',\n  FORKS = 'forked',\n  ARCHIVED = 'archived',\n}\n\nexport interface LanguageFilter {\n  label: string;\n  value: string;\n}\n\nexport enum ActionType {\n  CHANGE_SORT,\n  CHANGE_LANGUAGE,\n  CHANGE_TYPE,\n  SET_QUERY,\n  SET_LANGUAGES,\n  RESET_FILTERS,\n}\n\nexport interface FilterState {\n  sort: RepositoryOrderField;\n  query: string;\n  language: string;\n  type: TypeFilter;\n  languages?: LanguageFilter[];\n}\n\ntype FilterAction =\n  | {\n      type: ActionType.CHANGE_SORT;\n      payload: { sort: RepositoryOrderField };\n    }\n  | {\n      type: ActionType.CHANGE_LANGUAGE;\n      payload: { language: string };\n    }\n  | {\n      type: ActionType.CHANGE_TYPE;\n      payload: { type: TypeFilter };\n    }\n  | {\n      type: ActionType.SET_QUERY;\n      payload: { query: string };\n    }\n  | {\n      type: ActionType.SET_LANGUAGES;\n      payload: { languages: LanguageFilter[] };\n    }\n  | {\n      type: ActionType.RESET_FILTERS;\n    };\n\nconst initialState: FilterState = {\n  sort: RepositoryOrderField.UpdatedAt,\n  type: TypeFilter.ALL,\n  language: 'all',\n  query: '',\n  languages: undefined,\n};\n\nconst reducer = (state: FilterState, action: FilterAction) => {\n  switch (action.type) {\n    case ActionType.CHANGE_SORT:\n      return {\n        ...state,\n        sort: action.payload.sort,\n      };\n    case ActionType.CHANGE_LANGUAGE:\n      return {\n        ...state,\n        language: action.payload.language,\n      };\n    case ActionType.CHANGE_TYPE:\n      return {\n        ...state,\n        type: action.payload.type,\n      };\n    case ActionType.SET_QUERY:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n    case ActionType.RESET_FILTERS:\n      return {\n        ...state,\n        sort: RepositoryOrderField.UpdatedAt,\n        type: TypeFilter.ALL,\n        language: 'all',\n        query: '',\n      };\n    default:\n      return state;\n  }\n};\n\nexport function useRepoFilters() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const changeSort = (sort: RepositoryOrderField) => {\n    dispatch({\n      type: ActionType.CHANGE_SORT,\n      payload: { sort },\n    });\n  };\n\n  const changeLanguage = (language: string) => {\n    dispatch({\n      type: ActionType.CHANGE_LANGUAGE,\n      payload: { language },\n    });\n  };\n\n  const changeType = (type: TypeFilter) => {\n    dispatch({\n      type: ActionType.CHANGE_TYPE,\n      payload: { type },\n    });\n  };\n\n  const setQuery = (query: string) => {\n    dispatch({\n      type: ActionType.SET_QUERY,\n      payload: { query },\n    });\n  };\n\n  const setLanguages = (languages: LanguageFilter[]) => {\n    dispatch({\n      type: ActionType.SET_LANGUAGES,\n      payload: { languages },\n    });\n  };\n\n  const resetFilters = () => {\n    dispatch({\n      type: ActionType.RESET_FILTERS,\n    });\n  };\n\n  const isQueryActive = state.query !== '';\n  const isTypeActive = state.type !== TypeFilter.ALL;\n  const isLanguageActive = state.language !== 'all';\n  const isFiltersActive = isQueryActive || isTypeActive || isLanguageActive;\n\n  return {\n    state,\n    changeSort,\n    changeLanguage,\n    changeType,\n    setQuery,\n    setLanguages,\n    resetFilters,\n    isQueryActive,\n    isTypeActive,\n    isLanguageActive,\n    isFiltersActive,\n  };\n}\n", "import { IssueFilterAPI, IssueOrderField, IssueState } from './useIssueFilters';\nimport type { Label } from '../RepoIssues/types';\nimport type { Milestone } from './types';\nimport cn from 'classnames';\nimport { CheckIcon, MinusCircleIcon } from '@heroicons/react/outline';\nimport { PullRequestIcon } from '../Icons';\nimport FilterDropdown from '../FilterDropdown/FilterDropdown';\nimport { IssueType } from './useIssueFilters';\nimport * as styles from './IssueFilters.classNames';\nimport { OrderDirection } from '../RepoFilters/useRepoFilters';\n\ntype IssueFiltersProps = {\n  type?: IssueType;\n  openCount?: number;\n  closedCount?: number;\n  className?: string;\n  milestones?: Milestone[];\n  labels?: Label[];\n} & IssueFilterAPI;\n\nfunction IssueFilters({\n  openCount = 0,\n  closedCount = 0,\n  className,\n  type = IssueType.Issue,\n  milestones,\n  labels = [],\n  state,\n  changeState,\n  setLabel,\n  setMilestone,\n  setSort,\n}: IssueFiltersProps) {\n  return (\n    <div className={cn(className, styles.container)}>\n      <div className=\"space-x-4\">\n        <button\n          data-testid=\"openIssuesButton\"\n          className={cn(\n            'text-sm',\n            state.state === IssueState.Open\n              ? 'font-semibold text-gray-900'\n              : 'text-gray-600'\n          )}\n          onClick={() => changeState(IssueState.Open)}\n        >\n          {type === IssueType.Issue ? (\n            <MinusCircleIcon className={styles.typeIcon} />\n          ) : (\n            <PullRequestIcon className={styles.typeIcon} />\n          )}\n          {openCount} Open\n        </button>\n        <button\n          data-testid=\"closedIssuesButton\"\n          className={cn(\n            'text-sm',\n            state.state === IssueState.Closed\n              ? 'font-semibold text-gray-900'\n              : 'text-gray-600'\n          )}\n          onClick={() => changeState(IssueState.Closed)}\n        >\n          <CheckIcon className={styles.typeIcon} />\n          {closedCount} Closed\n        </button>\n      </div>\n      <div className=\"space-x-8\">\n        <FilterDropdown\n          name=\"Label\"\n          description=\"Filter by label\"\n          current={state.label}\n          items={[\n            ...labels.map((label) => ({\n              label: label.name,\n              value: label.name,\n            })),\n          ]}\n          onChange={(label) => setLabel(label)}\n          buttonClassName={styles.filterButton}\n        />\n        {milestones && (\n          <FilterDropdown\n            name=\"Milestones\"\n            description=\"Filter by milestone\"\n            current={state.milestone}\n            items={[\n              { label: 'Issue with no milestone', value: null },\n              ...milestones.map((milestone) => ({\n                label: milestone.title,\n                value: milestone.id,\n              })),\n            ]}\n            onChange={(milestone) => setMilestone(milestone)}\n            buttonClassName={styles.filterButton}\n          />\n        )}\n        <FilterDropdown\n          name=\"Sort\"\n          description=\"Sort by\"\n          current={`${state.sort.field}^${state.sort.direction}`}\n          items={[\n            {\n              label: 'Newest',\n              value: `${IssueOrderField.CreatedAt}^${OrderDirection.Desc}`,\n            },\n            {\n              label: 'Oldest',\n              value: `${IssueOrderField.CreatedAt}^${OrderDirection.Asc}`,\n            },\n            {\n              label: 'Most commented',\n              value: `${IssueOrderField.Comments}^${OrderDirection.Desc}`,\n            },\n            {\n              label: 'Least commented',\n              value: `${IssueOrderField.Comments}^${OrderDirection.Asc}`,\n            },\n            {\n              label: 'Recently updated',\n              value: `${IssueOrderField.UpdatedAt}^${OrderDirection.Desc}`,\n            },\n            {\n              label: 'Least recently updated',\n              value: `${IssueOrderField.UpdatedAt}^${OrderDirection.Asc}`,\n            },\n          ]}\n          onChange={(sort) => setSort(sort)}\n          buttonClassName={styles.filterButton}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default IssueFilters;\n", "import { Fragment, useEffect, useState } from \"react\";\nimport { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon, XIcon, CheckIcon } from \"@heroicons/react/solid\";\nimport * as styles from \"./FilterDropdown.classNames\";\nimport { useSearchParams } from \"@remix-run/react\";\n\ninterface Option {\n  label: string;\n  value: number | string | null;\n}\n\ninterface FilterDropdownProps {\n  name: string;\n  description?: string;\n  current: number | string | null;\n  items: Option[];\n  onChange: (value: any) => void;\n  buttonClassName?: string;\n}\n\nfunction FilterDropdown({\n  name,\n  description,\n  current,\n  items,\n  onChange,\n  buttonClassName,\n}: FilterDropdownProps) {\n  const [width, setWidth] = useState(\"0\");\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const handleAppendQuery = (name: string, value: string | number | null) => {\n    let str = \"\";\n    const key = searchParams.get(name);\n\n    if (key !== null) {\n      if (value !== null && value !== key) {\n        searchParams.set(name, value as string);\n        str = searchParams.toString();\n      } else {\n        searchParams.delete(name);\n        str = searchParams.toString();\n      }\n    } else {\n      str = searchParams.toString();\n      if (value && value !== null) {\n        if (str !== \"\") {\n          str = str + `&${name}=${value}`;\n        } else {\n          str = str + `${name}=${value}`;\n        }\n      }\n    }\n    setSearchParams(str);\n  };\n\n  useEffect(() => {\n    if (window.screen.width > 768) {\n      setWidth(\"inherit\");\n    } else {\n      setWidth(\"0\");\n    }\n  }, [width]);\n  return (\n    <Menu as=\"div\" className={styles.container}>\n      <div>\n        <Menu.Button className={buttonClassName || styles.menuButton}>\n          {name}\n          <ChevronDownIcon\n            className={styles.menuButtonIcon}\n            aria-hidden=\"true\"\n          />\n        </Menu.Button>\n      </div>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items\n          className={styles.menu}\n          data-testid=\"filterDropdown\"\n          style={{\n            left: width,\n          }}\n        >\n          <div>\n            {description && (\n              <div className={styles.menuHeader}>\n                <div className={styles.description}>{description}</div>\n                <Menu.Button>\n                  <XIcon\n                    className={styles.closeButtonIcon}\n                    aria-hidden=\"true\"\n                  />\n                </Menu.Button>\n              </div>\n            )}\n            {items.map(({ label, value }) => (\n              <Menu.Item key={value}>\n                <button\n                  type=\"button\"\n                  name={name}\n                  className={styles.itemButton}\n                  onClick={(e) => {\n                    onChange(value);\n                    handleAppendQuery(name, value);\n                  }}\n                >\n                  {value === current && (\n                    <CheckIcon className={styles.itemActiveIcon} />\n                  )}{\" \"}\n                  {label}\n                </button>\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n}\n\nexport default FilterDropdown;\n", "export const container = 'relative inline-block text-left z-30';\n\nexport const menuButton = 'relative inline-flex items-center px-4 py-1.5 rounded-md bg-gray-100 bg-opacity-75 border border-gray-300 text-sm font-medium text-gray-800 hover:bg-gray-200 hover:bg-opacity-50';\n\nexport const menuButtonIcon = '-mr-1 ml-1 mt-0.5 h-4 w-4';\n\nexport const menu = 'border border-gray-300 origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-sm bg-white ring-1 ring-black ring-opacity-5 focus:outline-none';\n\nexport const menuHeader = 'flex justify-between items-center';\n\nexport const description = 'px-4 py-2.5 text-xs text-gray-800 font-semibold';\n\nexport const closeButtonIcon = 'mr-2 h-4 w-4 text-gray-600';\n\nexport const itemButton = 'relative w-full text-left text-xs py-2 px-10 border-t border-gray-300 hover:bg-gray-100 capitalize';\n\nexport const itemActiveIcon = 'inline w-4 h-4 absolute left-4';\n", "export const container = 'flex flex-wrap space-x-1 space-y-2 md:space-x-0 md:space-y-0 items-center justify-between p-4 bg-gray-100 border-b';\n\nexport const typeIcon = 'w-5 h-5 inline mr-1.5 mb-0.5';\n\nexport const filterButton = 'text-gray-600 hover:text-gray-900 inline-flex items-center text-sm';\n", "import type { IssueFilterAPI } from \"./useIssueFilters\";\nimport type { PageInfo } from \"./types\";\nimport { ChevronRightIcon, ChevronLeftIcon } from \"@heroicons/react/outline\";\nimport * as styles from \"./Pagination.classNames\";\nimport { useRepo } from \"~/context/RepoContext\";\nimport { Link } from \"@remix-run/react\";\n\ninterface PaginationProps {\n  pageInfo?: PageInfo;\n  changePage: IssueFilterAPI[\"changePage\"];\n}\n\nconst Previous = () => {\n  return (\n    <>\n      <ChevronLeftIcon className=\"mr-1.5 inline h-4 w-4\" />\n      Previous\n    </>\n  );\n};\n\nconst Next = () => {\n  return (\n    <>\n      Next\n      <ChevronRightIcon className=\"ml-1.5 inline h-4 w-4\" />\n    </>\n  );\n};\n\nfunction Pagination({ pageInfo }: PaginationProps) {\n  const { owner, name, path } = useRepo();\n  const prevUrl = `/${owner}/${name}/${path}?before=${pageInfo?.startCursor}`;\n  const nextUrl = `/${owner}/${name}/${path}?after=${pageInfo?.endCursor}`;\n\n  return (\n    <div className={styles.container}>\n      <span className={styles.group}>\n        {pageInfo?.hasPreviousPage ? (\n          <Link to={prevUrl} className={styles.link}>\n            <Previous />\n          </Link>\n        ) : (\n          <div className={styles.linkDisabled}>\n            <Previous />\n          </div>\n        )}\n        {pageInfo?.hasNextPage ? (\n          <Link to={nextUrl} className={styles.link}>\n            <Next />\n          </Link>\n        ) : (\n          <div className={styles.linkDisabled}>\n            <Next />\n          </div>\n        )}\n      </span>\n    </div>\n  );\n}\n\nexport default Pagination;\n", "export const container = 'flex items-center justify-center my-8';\n\nexport const group = 'relative z-0 inline-flex space-x-2';\n\nconst linkBase =\n  'relative inline-flex items-center px-2 py-1 rounded border border-white text-sm font-medium';\n\nexport const link = `${linkBase} text-blue-500 transition-colors duration-150 ease-in-out`;\n\nexport const linkDisabled = `${linkBase} pointer-events-none cursor-default text-gray-500`;\n", "import { gql } from 'graphql-request';\n\nexport const REPO_ISSUES_QUERY = gql`\n  query RepoIssues(\n    $owner: String!\n    $name: String!\n    $before: String\n    $after: String\n    $filterBy: IssueFilters\n    $orderBy: IssueOrder\n    $last: Int\n    $first: Int\n  ) {\n    repository(owner: $owner, name: $name) {\n      milestones(first: 100, states: [OPEN]) {\n        nodes {\n          id\n          closed\n          description\n          number\n          title\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n        totalCount\n      }\n      closedIssues: issues(\n        first: $first\n        last: $last\n        states: [CLOSED]\n        filterBy: $filterBy\n        orderBy: $orderBy\n        after: $after\n        before: $before\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n          hasPreviousPage\n          startCursor\n        }\n        totalCount\n        nodes {\n          id\n          author {\n            login\n          }\n          comments(first: 1) {\n            totalCount\n          }\n          labels(first: 100) {\n            nodes {\n              color\n              name\n            }\n            totalCount\n          }\n          closed\n          closedAt\n          title\n          number\n          createdAt\n        }\n      }\n      openIssues: issues(\n        first: $first\n        last: $last\n        states: [OPEN]\n        filterBy: $filterBy\n        orderBy: $orderBy\n        after: $after\n        before: $before\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n          hasPreviousPage\n          startCursor\n        }\n        totalCount\n        nodes {\n          id\n          author {\n            login\n          }\n          comments(first: 1) {\n            totalCount\n          }\n          labels(first: 5) {\n            nodes {\n              color\n              name\n            }\n          }\n          closed\n          title\n          number\n          createdAt\n        }\n      }\n    }\n  }\n`;\n", "import { useLoaderData, useOutletContext } from \"@remix-run/react\";\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport { auth } from \"~/services/auth.server\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { RepoContext, RepoProvider } from \"~/context/RepoContext\";\nimport RepoHeader from \"../../../components/RepoHeader/RepoHeader\";\nimport FileExplorerNav from \"../../../components/FileExplorerNav/FileExplorerNav\";\nimport FileExplorer from \"../../../components/FileExplorer/FileExplorer.view\";\nimport RepoReadMe from \"../../../components/RepoReadMe/RepoReadMe.view\";\nimport RepoAboutWidget from \"~/components/RepoAboutWidget/RepoAboutWidget\";\nimport { parseTopics } from \"~/components/RepoPage/parseTopics\";\nimport { parseQueryData } from \"~/components/FileExplorer/parseQueryData\";\nimport { parseQuery } from \"~/components/RepoReadMe/parseQuery\";\nimport { REPO_PAGE_QUERY } from \"~/lib/queries/RepoPage\";\nimport { REPO_TREE_QUERY } from \"~/lib/queries/FileExplorer\";\nimport { REPO_README_QUERY } from \"~/lib/queries/RepoReadMe\";\n\ntype LoaderData = {\n  context: RepoContext;\n  items: any;\n  readme: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  const pathname = url.pathname;\n  const basePath = pathname.split(\"/\");\n  const index = basePath.indexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join(\"/\") : path;\n  const defaultBranch = \"HEAD\";\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === \"string\",\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_TREE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: `${context.branch}:${formattedPath}`,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const items = parseQueryData(data);\n\n  const readmeData = await gqlClient.request(\n    REPO_README_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: context.path\n        ? `HEAD:${context.path}/README.md`\n        : \"HEAD:README.md\",\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n  const readme = parseQuery(readmeData);\n\n  return json<LoaderData>({ context, items, readme });\n};\n\nexport default function Repository() {\n  const { context, items, readme } = useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-2xl px-4 md:py-8\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"col-span-12 md:col-span-7 xl:col-span-9\">\n            <FileExplorerNav />\n            <FileExplorer\n              items={items}\n              branch={context.branch}\n              basePath={`/${context.owner}/${context.name}`}\n              repoPath={context.path}\n            />\n            <RepoReadMe readme={readme} />\n          </div>\n          <div className=\"col-span-12 md:col-span-5 xl:col-span-3\">\n            <RepoAboutWidget />\n          </div>\n        </div>\n      </div>\n    </RepoProvider>\n  );\n}\n", "import { BookOpenIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport Description from './Description';\nimport HomepageUrl from './HomepageUrl';\nimport Topics from './Topics';\n// import { LoadingTextLine } from '@components/Loading';\nimport * as styles from './RepoAboutWidget.classNames';\n\nfunction RepoAboutWidget() {\n  const { data, isRepoLoading } = useRepo();\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.heading}>About</h3>\n      <div className={styles.description}>\n          <div className=\"space-y-4\">\n            <Description text={data?.description} />\n            <HomepageUrl homepageUrl={data?.homepageUrl} />\n            <Topics topics={data?.topics} />\n          </div>\n      </div>\n      <div>\n        <a className={styles.readmeLink}>\n          <BookOpenIcon className={styles.readmeIcon} /> Readme\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default RepoAboutWidget;\n", "interface DescriptionProps {\n  text?: string | null;\n}\n\nfunction Description({ text }: DescriptionProps) {\n  return text ? (\n    <span>{text}</span>\n  ) : (\n    <span className=\"italic\">No description, website, or topics provided.</span>\n  );\n}\n\nexport default Description;\n", "import { Link } from \"@remix-run/react\";\nimport { LinkIcon } from \"@heroicons/react/outline\";\nimport * as styles from \"./RepoAboutWidget.classNames\";\n\ninterface HomepageUrlProps {\n  homepageUrl?: string | null;\n}\n\nfunction HomepageUrl({ homepageUrl }: HomepageUrlProps) {\n  if (!homepageUrl) {\n    return null;\n  }\n\n  return (\n    <div className={styles.linkContainer}>\n      <LinkIcon className={styles.linkIcon} />\n      <Link to={homepageUrl} className={styles.link} target=\"_blank\">\n        {homepageUrl}\n      </Link>\n    </div>\n  );\n}\n\nexport default HomepageUrl;\n", "export const container = 'pb-8 space-y-5 border-b-2 border-gray-300';\n\nexport const heading = 'text-gray-700 font-semibold';\n\nexport const description = 'text-gray-600';\n\nexport const readmeLink = 'flex items-center text-gray-500 hover:text-blue-500 text-sm cursor-pointer leading-snug';\n\nexport const readmeIcon = 'h-5 w-5 mt-0.5 mr-2';\n\nexport const linkContainer = 'max-w-full overflow-hidden overflow-ellipsis whitespace-nowrap';\n\nexport const linkIcon = 'w-4 h-4 inline text-gray-700 mr-2 -mt-0.5';\n\nexport const link = 'font-semibold text-blue-600 hover:underline text-sm';\n\nexport const topic = 'inline-block bg-blue-100 text-blue-600 text-xs font-medium py-1 px-2 rounded-xl mr-1.5 hover:text-white hover:bg-blue-600 transition-colors cursor-pointer';\n", "import * as styles from './RepoAboutWidget.classNames';\n\ninterface TopicsProps {\n  topics?: string[];\n}\n\nfunction Topics({ topics }: TopicsProps) {\n  if (!topics) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-1\">\n      {topics.map((topic) => (\n        <span key={topic} className={styles.topic}>\n          {topic}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nexport default Topics;\n", "import { json, LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport RepoHeader from \"~/components/RepoHeader/RepoHeader\";\nimport { parseTopics } from \"~/components/RepoPage/parseTopics\";\nimport { parseQuery } from \"~/components/RepoPulls/parseQuery\";\nimport RepoPulls from \"~/components/RepoPulls/RepoPulls\";\nimport { RepoContext, RepoProvider } from \"~/context/RepoContext\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { REPO_PAGE_QUERY } from \"~/lib/queries/RepoPage\";\nimport { REPO_PULLS_QUERY } from \"~/lib/queries/RepoPulls\";\nimport { auth } from \"~/services/auth.server\";\ntype LoaderData = {\n  context: RepoContext;\n  openPullRequests: any;\n  closedPullRequests: any;\n  labels: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  const searchParams = url.searchParams;\n\n  const label = searchParams.get(\"Label\");\n  const after = searchParams.get(\"after\");\n  const before = searchParams.get(\"before\");\n  const orderBy = searchParams.get(\"Sort\");\n  const orderByArr = orderBy?.split(\"^\");\n\n  const pathname = url.pathname;\n  const basePath = pathname.split(\"/\");\n  const index = basePath.lastIndexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join(\"/\") : path;\n  const defaultBranch = \"HEAD\";\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === \"string\",\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_PULLS_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      orderBy: {\n        field: orderByArr ? orderByArr[0] : \"CREATED_AT\",\n        direction: orderByArr ? orderByArr[1] : \"DESC\",\n      },\n      labels: label ? [label] : undefined,\n      last: before ? 25 : undefined,\n      first: !before || after ? 25 : undefined,\n      after,\n      before,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const { openPullRequests, closedPullRequests, labels } = parseQuery(data);\n\n  return json<LoaderData>({\n    context,\n    openPullRequests,\n    closedPullRequests,\n    labels,\n  });\n};\n\nexport default function Pulls() {\n  const { context, openPullRequests, closedPullRequests, labels } =\n    useLoaderData<LoaderData>();\n\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-xl md:py-12\">\n        <RepoPulls\n          openPullRequests={openPullRequests}\n          closedPullRequests={closedPullRequests}\n          labels={labels}\n        />\n      </div>\n    </RepoProvider>\n  );\n}\n", "import { IssueOrderField } from '../IssueFilters/useIssueFilters';\nimport { OrderDirection } from '../RepoFilters/useRepoFilters';\nimport { Label } from '../RepoIssues/types';\nimport type { PullRequest } from './types';\n\nexport type RepoPullRequestsQueryVariables = {\n  owner: string;\n  name: string;\n  before?: string;\n  after?: string;\n  labels?: string[] | string;\n  orderBy?: IssueOrder;\n}\n\nexport type IssueOrder = {\n  direction: OrderDirection;\n  field: IssueOrderField;\n};\n\nexport type RepoPullRequestsQuery = { __typename?: 'Query', repository?: { __typename?: 'Repository', openPullRequests: { __typename?: 'PullRequestConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null | undefined, endCursor?: string | null | undefined }, nodes?: Array<{ __typename?: 'PullRequest', id: string, closed: boolean, closedAt?: any | null | undefined, merged: boolean, mergedAt?: any | null | undefined, title: string, number: number, createdAt: any, author?: { __typename?: 'Bot', login: string } | { __typename?: 'EnterpriseUserAccount', login: string } | { __typename?: 'Mannequin', login: string } | { __typename?: 'Organization', login: string } | { __typename?: 'User', login: string } | null | undefined, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', totalCount: number, nodes?: Array<{ __typename?: 'Label', color: string, name: string } | null | undefined> | null | undefined } | null | undefined } | null | undefined> | null | undefined }, closedPullRequests: { __typename?: 'PullRequestConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: string | null | undefined, endCursor?: string | null | undefined }, nodes?: Array<{ __typename?: 'PullRequest', id: string, closed: boolean, closedAt?: any | null | undefined, merged: boolean, mergedAt?: any | null | undefined, title: string, number: number, createdAt: any, author?: { __typename?: 'Bot', login: string } | { __typename?: 'EnterpriseUserAccount', login: string } | { __typename?: 'Mannequin', login: string } | { __typename?: 'Organization', login: string } | { __typename?: 'User', login: string } | null | undefined, comments: { __typename?: 'IssueCommentConnection', totalCount: number }, labels?: { __typename?: 'LabelConnection', totalCount: number, nodes?: Array<{ __typename?: 'Label', color: string, name: string } | null | undefined> | null | undefined } | null | undefined } | null | undefined> | null | undefined } } | null | undefined };\n\n\n\nfunction parsePullRequests(connection?: any) {\n  if (!connection) {\n    return {\n      pullRequests: [],\n      totalCount: 0,\n      pageInfo: { hasNextPage: false, hasPreviousPage: false },\n    };\n  }\n\n  const pageInfo = connection.pageInfo;\n  const nodes = connection.nodes || [];\n  const totalCount = connection.totalCount;\n\n  const pullRequests = nodes.reduce(\n    (pullRequests: PullRequest[], pullRequest: any) => {\n      if (!pullRequest) {\n        return pullRequests;\n      }\n\n      const labelNodes = pullRequest.labels?.nodes || [];\n      const labels = labelNodes.reduce(\n        (labels: Label[], label: any) =>\n          label\n            ? [\n                ...labels,\n                {\n                  color: label.color,\n                  name: label.name,\n                },\n              ]\n            : labels,\n        []\n      );\n\n      return [\n        ...pullRequests,\n        {\n          id: pullRequest.id,\n          login: pullRequest.author?.login,\n          commentCount: pullRequest.comments.totalCount,\n          labelCount: pullRequest.labels.totalCount,\n          labels,\n          closed: pullRequest.closed,\n          merged: pullRequest.merged,\n          title: pullRequest.title,\n          number: pullRequest.number,\n          createdAt: pullRequest.createdAt,\n          closedAt: pullRequest.closedAt,\n          mergedAt: pullRequest.mergedAt,\n        },\n      ];\n    },\n    []\n  );\n\n  return { pullRequests, totalCount, pageInfo };\n}\n\nexport function parseQuery(data: RepoPullRequestsQuery) {\n  const openPullRequests = parsePullRequests(data.repository?.openPullRequests);\n  const closedPullRequests = parsePullRequests(\n    data.repository?.closedPullRequests\n  );\n\n  const labelMap = [\n    ...closedPullRequests.pullRequests,\n    ...openPullRequests.pullRequests,\n  ].reduce((acc: { [key: string]: Label }, issue: PullRequest) => {\n    const map: { [key: string]: Label } = {};\n    issue.labels.forEach((label) => {\n      map[label.name] = label;\n    });\n    return {\n      ...acc,\n      ...map,\n    };\n  }, {});\n\n  return {\n    openPullRequests,\n    closedPullRequests,\n    labels: Object.values(labelMap) as Label[],\n  };\n}\n", "\nimport { useRepo } from '~/context/RepoContext';\nimport { PullRequestIcon } from '../Icons';\nimport IssueFilters from '../IssueFilters/IssueFilters';\nimport Pagination from '../IssueFilters/Pagination';\nimport { IssueState, IssueType, useIssueFilters } from '../IssueFilters/useIssueFilters';\nimport IssuesContainer from '../IssuesContainer/IssuesContainer';\nimport IssuesEmpty from '../IssuesEmpty/IssuesEmpty';\nimport RepoPullsView from './RepoPulls.view';\n\nexport type RepoPullProps = {\n  openPullRequests: any;\n  closedPullRequests: any;\n  labels: any;\n}\n\nfunction RepoPulls({ openPullRequests, closedPullRequests, labels }: RepoPullProps) {\n  const { name, owner } = useRepo();\n  const filters = useIssueFilters();\n\n  const activePullRequests =\n    filters.state.state === IssueState.Open\n      ? openPullRequests\n      : closedPullRequests;\n\n  const filtersElement = (\n    <IssueFilters\n      openCount={openPullRequests.totalCount}\n      closedCount={closedPullRequests.totalCount}\n      labels={labels}\n      type={IssueType.PullRequest}\n      {...filters}\n    />\n  );\n\n  return (\n    <>\n      <IssuesContainer\n        filtersEl={filtersElement}\n        clearFilters={filters.clearFilters}\n        hasActiveFilters={filters.hasActiveFilters}\n      >\n        {activePullRequests.pullRequests.length > 0 ? (\n          <RepoPullsView pullRequests={activePullRequests.pullRequests} name={name} owner={owner} />\n        ) : (\n          <IssuesEmpty Icon={PullRequestIcon} />\n        )}\n      </IssuesContainer>\n      {(activePullRequests.pageInfo.hasNextPage || activePullRequests.pageInfo?.hasPreviousPage) && (\n        <Pagination\n          pageInfo={activePullRequests.pageInfo}\n          changePage={filters.changePage}\n        />\n      )}\n    </>\n  );\n}\n\nexport default RepoPulls;\n", "import type { PullRequest } from './types';\nimport cn from 'classnames';\nimport { ChatAltIcon } from '@heroicons/react/outline';\nimport { formatDistance } from 'date-fns';\nimport {\n  PullRequestIcon,\n  MergedPullRequestIcon,\n  ClosedPullRequestIcon,\n} from '../Icons';\nimport * as styles from '../RepoIssues/RepoIssues.classNames';\n\ninterface RepoPullsViewProps {\n  pullRequests: PullRequest[];\n  name: string;\n  owner: string;\n}\n\nfunction RepoPullsView({ pullRequests, name, owner }: RepoPullsViewProps) {\n  return (\n    <>\n      {pullRequests.map((pullRequest) => {\n        let icon = (\n          <PullRequestIcon className={cn(styles.stateIcon, 'text-green-600')} />\n        );\n        if (pullRequest.merged) {\n          icon = (\n            <MergedPullRequestIcon\n              className={cn(styles.stateIcon, 'text-purple-600')}\n            />\n          );\n        } else if (pullRequest.closed) {\n          icon = (\n            <ClosedPullRequestIcon\n              className={cn(styles.stateIcon, 'text-red-600')}\n            />\n          );\n        }\n        return (\n          <div key={pullRequest.id} className={styles.issue} data-testid=\"pr\">\n            <div className={styles.container}>\n              <div className=\"flex\">\n                <div>{icon}</div>\n                <div>\n                  <div className={styles.content}>\n                    <span className={styles.title}>\n                      <a\n                        href={`https://github.com/${owner}/${name}/pull/${pullRequest.number}`}\n                        target=\"_blank\"\n                      >\n                        {pullRequest.title}\n                      </a>\n                    </span>\n                    <span className=\"inline\">\n                      {pullRequest.labels.map(({ color, name }) => (\n                        <span\n                          key={color}\n                          style={{\n                            backgroundColor: `#${color}`,\n                          }}\n                          className={styles.label}\n                        >\n                          {name}\n                        </span>\n                      ))}\n                    </span>\n                  </div>\n                  <div className={styles.meta}>\n                    #{pullRequest.number}{' '}\n                    {pullRequest.closed === false && (\n                      <span>\n                        opened{' '}\n                        {formatDistance(\n                          new Date(),\n                          new Date(pullRequest.createdAt)\n                        )}{' '}\n                        ago{' '}\n                      </span>\n                    )}\n                    by <span className={styles.link}>{pullRequest.login}</span>\n                    {pullRequest.closedAt && (\n                      <span>\n                        {' '}\n                        was {pullRequest.merged ? 'merged' : 'closed'}{' '}\n                        {formatDistance(\n                          new Date(),\n                          new Date(pullRequest.closedAt)\n                        )}{' '}\n                        ago\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-1\">\n                <span className={styles.comments}>\n                  <ChatAltIcon className={styles.commentsIcon} />\n                  {pullRequest.commentCount}\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default RepoPullsView;\n", "import { gql } from 'graphql-request';\n\nexport const REPO_PULLS_QUERY = gql`\n  query RepoPullRequests(\n    $owner: String!\n    $name: String!\n    $before: String\n    $after: String\n    $labels: [String!]\n    $orderBy: IssueOrder\n    $first: Int\n    $last: Int\n  ) {\n    repository(owner: $owner, name: $name) {\n      openPullRequests: pullRequests(\n        first: $first\n        last: $last\n        states: [OPEN]\n        labels: $labels\n        orderBy: $orderBy\n        after: $after\n        before: $before\n      ) {\n        totalCount\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        nodes {\n          id\n          author {\n            login\n          }\n          comments(first: 1) {\n            totalCount\n          }\n          labels(first: 100) {\n            totalCount\n            nodes {\n              color\n              name\n            }\n          }\n          closed\n          closedAt\n          merged\n          mergedAt\n          title\n          number\n          createdAt\n        }\n      }\n      closedPullRequests: pullRequests(\n        first: $first\n        last: $last\n        states: [CLOSED, MERGED]\n        labels: $labels\n        orderBy: $orderBy\n        after: $after\n        before: $before\n      ) {\n        totalCount\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          startCursor\n          endCursor\n        }\n        nodes {\n          id\n          author {\n            login\n          }\n          comments(first: 1) {\n            totalCount\n          }\n          labels(first: 100) {\n            totalCount\n            nodes {\n              color\n              name\n            }\n          }\n          closed\n          closedAt\n          merged\n          mergedAt\n          title\n          number\n          createdAt\n        }\n      }\n    }\n  }\n`;\n", "import type { LoaderFunction } from 'remix';\nimport { auth } from '~/services/auth.server';\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  return auth.authenticate('github', request, {\n    successRedirect: '/',\n    failureRedirect: '/login'\n  });\n};\n", "import { useLoaderData, useLocation } from \"@remix-run/react\";\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { FULL_USER_PROFILE_QUERY } from \"~/lib/queries/UserProfile\";\nimport { auth } from \"~/services/auth.server\";\nimport { parseQuery } from \"~/components/UserRepos/parseQuery\";\nimport ProfilePage from \"~/components/ProfilePage/ProfilePage.view\";\nimport {\n  OrderDirection,\n  RepositoryOrderField,\n} from \"~/components/RepoFilters/useRepoFilters\";\n\ntype LoaderData = {\n  userProfileData: any;\n  owner?: string;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n\n  let url = new URL(request.url);\n  let after = url.searchParams.get(\"after\");\n  let before = url.searchParams.get(\"before\");\n\n  const afterCursor = typeof after === \"string\" ? after : undefined;\n  const beforeCursor = typeof before === \"string\" ? before : undefined;\n\n  const data = await gqlClient.request(\n    FULL_USER_PROFILE_QUERY,\n    {\n      username: params.user,\n      orderBy: {\n        field: RepositoryOrderField.UpdatedAt,\n        direction: OrderDirection.Desc,\n      },\n      afterCursor,\n      beforeCursor,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n  const repositories = parseQuery(data);\n  data.user.repositories = repositories;\n  const userProfileData = { ...data.user };\n\n  return json<LoaderData>({ owner: params.user, userProfileData });\n};\n\nexport default function User() {\n  const location = useLocation();\n  const { userProfileData, owner } = useLoaderData();\n\n  return (\n    <ProfilePage\n      userProfileData={userProfileData}\n      owner={owner}\n      pathname={location.pathname}\n    />\n  );\n}\n", "import { gql } from 'graphql-request';\nimport { USER_REPOS_FRAGMENT } from './UserRepos';\n\n// might be unnecessary due to Profile return from GitHubStrategy\n\nconst USER_PROFILE_FRAGMENT = gql`\n  fragment userProfile on User {\n    avatarUrl\n    bio\n    company\n    followers(first: 0) {\n      totalCount\n    }\n    following(first: 0) {\n      totalCount\n    }\n    location\n    login\n    name\n    organizations(first: 6) {\n      nodes {\n        avatarUrl\n        login\n      }\n    }\n    starredRepositories(first: 0) {\n      totalCount\n    }\n    twitterUsername\n    websiteUrl\n  }\n`;\n\n\nexport const USER_PROFILE_QUERY = gql`\n  ${USER_PROFILE_FRAGMENT}\n\n  query UserProfileQuery($username: String!) {\n    user(login: $username) {\n      ...userProfile\n    }\n  }\n`;\n\n\nexport const FULL_USER_PROFILE_QUERY = gql`\n  ${USER_PROFILE_FRAGMENT}\n  ${USER_REPOS_FRAGMENT}\n\n  query FullUserProfile(\n    $username: String!\n    $afterCursor: String\n    $beforeCursor: String\n    $orderBy: RepositoryOrder\n  ) {\n    user(login: $username) {\n      ...userProfile\n      ...userRepos\n    }\n  }\n`;\n", "import { gql } from 'graphql-request';\n\nexport const USER_REPOS_FRAGMENT = gql`\n  fragment userRepos on User {\n    repositories(\n      first: 100\n      after: $afterCursor\n      before: $beforeCursor\n      orderBy: $orderBy\n      affiliations: [OWNER]\n      ownerAffiliations: [OWNER]\n    ) {\n      nodes {\n        id\n        name\n        description\n        stargazerCount\n        forkCount\n        isArchived\n        isFork\n        primaryLanguage {\n          id\n          color\n          name\n        }\n        isPrivate\n        updatedAt\n      }\n      pageInfo {\n        endCursor\n        startCursor\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n`\n\nexport const USER_REPOS_QUERY = gql`\n  ${USER_REPOS_FRAGMENT}\n\n  query UserReposQuery(\n    $username: String!\n    $afterCursor: String\n    $beforeCursor: String\n    $orderBy: RepositoryOrder\n  ) {\n    user(login: $username) {\n      ...userRepos\n    }\n  }\n`;\n", "import type { Repo } from './types';\n\nexport type UserReposQuery = { __typename?: 'Query', user?: { __typename?: 'User', repositories: { __typename?: 'RepositoryConnection', nodes?: Array<{ __typename?: 'Repository', id: string, name: string, description?: string | null | undefined, stargazerCount: number, forkCount: number, isArchived: boolean, isFork: boolean, isPrivate: boolean, updatedAt: any, primaryLanguage?: { __typename?: 'Language', id: string, color?: string | null | undefined, name: string } | null | undefined } | null | undefined> | null | undefined, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null | undefined, startCursor?: string | null | undefined, hasNextPage: boolean, hasPreviousPage: boolean } } } | null | undefined };\nexport type OrgReposQuery = { __typename?: 'Query', user?: { __typename?: 'Organization', repositories: { __typename?: 'RepositoryConnection', nodes?: Array<{ __typename?: 'Repository', id: string, name: string, description?: string | null | undefined, stargazerCount: number, forkCount: number, isArchived: boolean, isFork: boolean, isPrivate: boolean, updatedAt: any, primaryLanguage?: { __typename?: 'Language', id: string, color?: string | null | undefined, name: string } | null | undefined } | null | undefined> | null | undefined, pageInfo: { __typename?: 'PageInfo', endCursor?: string | null | undefined, startCursor?: string | null | undefined, hasNextPage: boolean, hasPreviousPage: boolean } } } | null | undefined };\n\n\nexport function parseQuery(data?: UserReposQuery | OrgReposQuery) {\n  const nodes = data?.user?.repositories.nodes;\n  const pageInfo = data?.user?.repositories.pageInfo;\n\n  if (!nodes) {\n    return undefined;\n  }\n\n  const repos = nodes.reduce((acc: Repo[], repo) => {\n    return repo\n      ? [\n        ...acc,\n        {\n          id: repo.id,\n          name: repo.name,\n          description: repo.description,\n          stargazerCount: repo.stargazerCount,\n          forkCount: repo.forkCount,\n          languageColor: repo.primaryLanguage?.color,\n          language: repo.primaryLanguage?.name,\n          isPrivate: repo.isPrivate,\n          isArchived: repo.isArchived,\n          isFork: repo.isFork,\n          updatedAt: repo.updatedAt,\n        },\n      ]\n      : acc;\n  }, []);\n\n  return {\n    repos,\n    pageInfo,\n  };\n}\n", "import ProfileNav from '../ProfileNav/ProfileNav';\nimport UserProfileView, {\n  UserProfileViewProps,\n} from '../UserProfile/UserProfile.view';\nimport UserReposView, { Repositories } from '../UserRepos/UserRepos.view';\nimport * as styles from './ProfilePage.classNames';\n\ninterface ProfilePageProps {\n  userProfileData: any;\n  owner: string;\n  pathname: string;\n}\n\nfunction ProfilePage({ userProfileData, owner, pathname }: ProfilePageProps) {\n  return (\n    <div className={styles.container}>\n      <div className={styles.stickyNav}>\n        <div className={styles.gridNav}>\n          <div className=\"col-span-12 md:col-span-4 xl:col-span-3\" />\n          <div className={styles.profileNav}>\n            <ProfileNav className=\"border-none\" pathname={pathname} />\n          </div>\n        </div>\n      </div>\n      <div className=\"max-w-screen-2xl mx-auto py-8 px-4\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"col-span-12 md:col-span-4 xl:col-span-3 relative md:-top-20 z-20\">\n            <UserProfileView {...userProfileData} />\n          </div>\n          <div className=\"col-span-12 md:col-span-8 xl:col-span-9\">\n            <ProfileNav className=\"border-none md:hidden\" pathname={pathname} />\n            <UserReposView repos={userProfileData.repositories} owner={owner} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n", "import TabNavigation from '../TabNavigation/TabNavigation';\nimport { tabList } from './tabList';\n\ninterface ProfileNavProps {\n  className?: string;\n  basePath?: string;\n  isOrg?: boolean;\n  pathname: string;\n}\n\nfunction ProfileNav({ className, pathname }: ProfileNavProps) {\n  return <TabNavigation tabs={tabList} className={className} pathname={pathname} />;\n}\n\nexport default ProfileNav;\n", "import { GitRepoIcon } from '../Icons';\nimport { TabItem } from '../TabNavigation/types';\n\nexport const tabList: TabItem[] = [\n  {\n    title: 'Repositories',\n    path: '',\n    Icon: GitRepoIcon\n  },\n];\n", "import { Follow, Nodes } from './types';\nimport {\n  UsersIcon,\n  StarIcon,\n  OfficeBuildingIcon,\n  LocationMarkerIcon,\n  LinkIcon,\n} from '@heroicons/react/outline';\nimport { TwitterIcon } from '../Icons';\nimport OrgList from './OrgList';\nimport * as styles from './UserProfile.classNames';\n\nexport interface UserProfileViewProps {\n  avatarUrl: any;\n  bio?: string | null;\n  company?: string | null;\n  location?: string | null;\n  login: string;\n  name?: string | null;\n  twitterUsername?: string | null;\n  websiteUrl?: string | null;\n  followers: Follow;\n  following: Follow;\n  starredRepositories: Follow;\n  organizations: Nodes;\n}\n\nfunction UserProfileView({\n  avatarUrl,\n  bio,\n  company,\n  location,\n  login,\n  name,\n  twitterUsername,\n  websiteUrl,\n  followers,\n  following,\n  starredRepositories,\n  organizations,\n}: UserProfileViewProps) {\n  return (\n    <div>\n      <img\n        src={avatarUrl}\n        alt=\"Avatar\"\n        width={260}\n        height={260}\n        className={styles.avatar}\n      />\n      <h1 className=\"mt-2\">\n        <div className={styles.name}>{name}</div>\n        <div className={styles.username}>{login}</div>\n      </h1>\n      {bio && (\n        <div className={styles.bio} dangerouslySetInnerHTML={{ __html: bio }} />\n      )}\n      <div className={styles.socials}>\n        <UsersIcon className={styles.icon} />\n        <span className=\"inline-block\">\n          <span className={styles.count}>{followers.totalCount}</span> followers\n        </span>\n        <span className=\"mx-1\">\u00B7</span>\n        <span className=\"inline-block\">\n          <span className={styles.count}>{following.totalCount}</span> following\n        </span>\n        <span className=\"mx-1\">\u00B7</span>\n        <StarIcon className={styles.icon} />\n        <span className=\"inline-block\">\n          <span className={styles.count}>{starredRepositories.totalCount}</span>{' '}\n        </span>\n      </div>\n      <div className={styles.fields}>\n        {company && (\n          <div>\n            <OfficeBuildingIcon className={styles.icon} />\n            {company}\n          </div>\n        )}\n        {location && (\n          <div>\n            <LocationMarkerIcon className={styles.icon} />\n            {location}\n          </div>\n        )}\n        {websiteUrl && (\n          <div>\n            <LinkIcon className={styles.icon} />\n            <a\n              className={styles.link}\n              href={websiteUrl}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {websiteUrl}\n            </a>\n          </div>\n        )}\n        {twitterUsername && (\n          <div>\n            <TwitterIcon className={styles.icon} />\n            <a\n              className={styles.link}\n              href={`https:/twitter.com/${twitterUsername}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              @{twitterUsername}\n            </a>\n          </div>\n        )}\n      </div>\n      {organizations.nodes.length > 0 && (\n        <OrgList organizations={organizations.nodes} />\n      )}\n    </div>\n  );\n}\n\nexport default UserProfileView;\n", "import type { OrganizationNodes } from './types';\nimport * as styles from './OrgList.classNames';\n\ninterface OrgListProps {\n  organizations: OrganizationNodes[];\n}\n\nfunction OrgList({ organizations }: OrgListProps) {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.heading}>Organizations</h2>\n      <div className={styles.list}>\n        {organizations.map(({ avatarUrl, login }) => (\n          <div key={login} className={styles.listItem}>\n            <img\n              src={avatarUrl}\n              alt=\"Organization\"\n              style={{ objectFit: 'fill' }}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default OrgList;\n", "export const container = 'mt-5 border-t border-gray-200';\nexport const heading = 'my-2 pt-2 text-gray-800 font-bold';\nexport const list = 'flex flex-wrap space-x-2';\nexport const listItem =\n  'relative w-9 h-9 rounded border border-gray-300 overflow-hidden';\n", "export const avatar = 'rounded-full shadow z-30';\nexport const name = 'text-2xl text-gray-800 font-bold leading-tight';\nexport const username = 'text-xl text-gray-500 font-light';\nexport const bio = 'text-gray-800 mt-4 mb-3';\nexport const icon = 'w-4 h-4 mb-0.5 mr-1 inline';\nexport const count = 'font-medium text-gray-900';\nexport const socials = 'text-sm text-gray-600 my-4';\nexport const fields = 'text-sm text-gray-800 space-y-1';\nexport const link = 'hover:text-blue-600 hover:underline';\nexport const buttonContainer = 'flex flex-col w-4/5 bg-gray-100 mb-3 items-center text-grey-600 rounded-md border-solid border-slate-500 border hover:bg-gray-200';\nexport const button = 'border-none text-black py-0.5'\n", "import type { Repo } from \"./types\";\nimport { Link } from \"@remix-run/react\";\nimport { StarIcon } from \"@heroicons/react/outline\";\nimport PrivacyBadge from \"../PrivacyBadge/PrivacyBadge\";\nimport RepoMeta from \"../RepoMeta/RepoMeta\";\nimport * as styles from \"./UserRepos.classNames\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { filterRepos } from \"./filterRepos\";\nimport { getLanguages } from \"./getLanguages\";\nimport { useRepoFilters } from \"../RepoFilters/useRepoFilters\";\nimport RepoFilters from \"../RepoFilters/RepoFilters\";\n\nexport interface UserReposViewProps {\n  repos: Repositories;\n  owner: string;\n}\n\nexport interface Repositories {\n  repos: Repo[];\n  pageInfo:\n    | {\n        __typename?: \"PageInfo\" | undefined;\n        endCursor?: string | null | undefined;\n        startCursor?: string | null | undefined;\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n      }\n    | undefined;\n}\n\nfunction UserReposView({ repos, owner }: UserReposViewProps) {\n  const repoFilters = useRepoFilters();\n  const filteredRepos = filterRepos(repos.repos, repoFilters.state);\n  const languages = getLanguages(repos.repos);\n\n  return (\n    <>\n      <RepoFilters\n        {...repoFilters}\n        languages={languages}\n        resultCount={filteredRepos.length}\n      />\n      {filteredRepos.map(\n        ({\n          id,\n          name,\n          description,\n          stargazerCount,\n          forkCount,\n          language,\n          languageColor,\n          updatedAt,\n          isPrivate,\n        }) => (\n          <div key={id} className={styles.container}>\n            <div className={styles.content}>\n              <h3 className=\"mb-2\">\n                <Link to={`/${owner}/${name}`} className={styles.headingLink}>\n                  {name}\n                </Link>\n                <PrivacyBadge\n                  isPrivate={isPrivate}\n                  className=\"relative bottom-0.5\"\n                />\n              </h3>\n              <div className={styles.description}>{description}</div>\n              <RepoMeta\n                language={language}\n                languageColor={languageColor}\n                forkCount={forkCount}\n                stargazerCount={stargazerCount}\n                updatedAt={updatedAt}\n              />\n            </div>\n            <div className={styles.aside}>\n              <button className={styles.starBtn}>\n                <StarIcon className={styles.starIcon} />\n                Star\n              </button>\n            </div>\n          </div>\n        )\n      )}\n      {(repos.pageInfo?.hasNextPage || repos.pageInfo?.hasPreviousPage) && (\n        <Pagination pageInfo={repos.pageInfo} owner={owner} />\n      )}\n    </>\n  );\n}\n\nexport default UserReposView;\n", "import { formatDistance } from 'date-fns';\nimport { StarIcon } from '@heroicons/react/outline';\nimport * as styles from './RepoMeta.classNames';\nimport { GitBranchIcon } from '../Icons';\n\ninterface RepoMetaProps {\n  language?: string | null;\n  languageColor?: string | null;\n  stargazerCount: number;\n  forkCount: number;\n  updatedAt: Date;\n}\n\nfunction RepoMeta({\n  language,\n  languageColor,\n  stargazerCount,\n  forkCount,\n  updatedAt,\n}: RepoMetaProps) {\n  return (\n    <div className={styles.metadata}>\n      {language && (\n        <div>\n          <span\n            style={{\n              backgroundColor: languageColor || '#ccc',\n            }}\n            className={styles.languageColor}\n          />\n          {language}\n        </div>\n      )}\n      {(stargazerCount > 0 || forkCount > 0) && (\n        <div className=\"space-x-4\">\n          {stargazerCount > 0 && (\n            <span className={styles.socialCount}>\n              <StarIcon className={styles.socialIcon} /> {stargazerCount}\n            </span>\n          )}\n          {forkCount > 0 && (\n            <span className={styles.socialCount}>\n              <GitBranchIcon className={styles.socialIcon} /> {forkCount}\n            </span>\n          )}\n        </div>\n      )}\n      <div>\n        Updated{' '}\n        {formatDistance(new Date(updatedAt), Date.now(), {\n          addSuffix: true,\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RepoMeta;\n", "export const metadata = 'flex  mt-4 text-xs text-gray-600 space-x-4';\nexport const languageColor = 'w-3 h-3 inline-block rounded-full mr-1 relative top-0.5';\nexport const socialCount = 'hover:cursor-pointer hover:text-blue-600';\nexport const socialIcon = 'w-4 h-4 inline mb-0.5';\n", "export const container = 'py-8 border-b border-gray-200 first-of-type:border-t grid grid-cols-12 gap-x-4';\nexport const content = 'col-span-12 md:col-span-7';\nexport const headingLink = 'text-xl text-blue-600 font-semibold hover:underline mr-3';\nexport const description = 'text-gray-600 text-sm max-w-prose';\nexport const aside = 'col-span-12 md:col-span-5 flex items-start justify-end';\nexport const starBtn = 'relative inline-flex items-center px-3 py-1 rounded-md bg-gray-100 bg-opacity-75 border border-gray-300 text-sm font-medium text-gray-800 hover:bg-gray-200 hover:bg-opacity-50';\nexport const starIcon= 'w-4 h-4 text-gray-600 mr-1';\n\n\n", "import cn from 'classnames';\nimport * as styles from './Pagination.classNames';\n\ninterface PaginationProps {\n  pageInfo?: any;\n  owner: string;\n}\n\nfunction Pagination({ pageInfo, owner }: PaginationProps) {\n  if (!pageInfo) {\n    return null;\n  }\n\n  const prevUrl = `/${owner}?before=${pageInfo.startCursor}`;\n  const nextUrl = `/${owner}?after=${pageInfo.endCursor}`;\n\n  const handlePreviousClick = () => {\n    window.location.assign(prevUrl);\n  };\n\n  const handleNextClick = () => {\n    window.location.assign(nextUrl);\n  };\n\n  return (\n    <div className={styles.container}>\n      <span className={styles.group}>\n        <button\n          type=\"button\"\n          disabled={!pageInfo.hasPreviousPage || !pageInfo.startCursor}\n          onClick={handlePreviousClick}\n          className={\n            !pageInfo.hasPreviousPage || !pageInfo.startCursor\n              ? cn(styles.button, styles.buttonPrev)\n              : cn(styles.button, styles.buttonPrev)\n          }\n        >\n          Previous\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleNextClick}\n          disabled={!pageInfo.hasNextPage || !pageInfo.endCursor}\n          className={\n            !pageInfo.hasNextPage || !pageInfo.endCursor\n              ? cn(styles.button, styles.buttonNext)\n              : cn(styles.button, styles.buttonNext)\n          }\n        >\n          Next\n        </button>\n      </span>\n    </div>\n  );\n}\n\nexport default Pagination;\n", "export const container = 'flex items-center justify-center mt-4';\n\nexport const group = 'relative z-0 inline-flex shadow-sm rounded-md';\n\nexport const button = 'relative inline-flex items-center px-4 py-2 border border-gray-300 bg-gray-100 text-sm font-semibold text-blue-500 hover:bg-blue-500 hover:border-blue-500  hover:text-white focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 disabled:opacity-50 disabled:cursor-default disabled:hover:bg-gray-100 disabled:hover:text-blue-500 disabled:hover:border-gray-200 transition-colors duration-150 ease-in-out';\n\nexport const buttonPrev = 'rounded-l-lg';\n\nexport const buttonNext = 'rounded-r-lg';\n", "import type { Repo } from './types';\nimport type { FilterState } from '../RepoFilters/useRepoFilters';\nimport { TypeFilter } from '../RepoFilters/useRepoFilters';\n\nexport function filterRepos(repos: Repo[], state: FilterState) {\n  return repos.reduce((acc: Repo[], repo: Repo) => {\n    switch (state.type) {\n      case TypeFilter.FORKS:\n        if (!repo.isFork) {\n          return acc;\n        }\n        break;\n      case TypeFilter.ARCHIVED:\n        if (!repo.isArchived) {\n          return acc;\n        }\n    }\n\n    if (\n      state.language !== 'all' &&\n      repo.language?.toLocaleLowerCase() !== state.language\n    ) {\n      return acc;\n    }\n\n    if (\n      state.query !== '' &&\n      !repo.name.toLocaleLowerCase().includes(state.query.toLocaleLowerCase())\n    ) {\n      return acc;\n    }\n\n    return [...acc, repo];\n  }, []);\n}\n", "import type { Repo } from './types';\n\ntype LanguageMap = { [key: string]: string };\n\nexport function getLanguages(repos: Repo[]) {\n  const initialValue: LanguageMap = { all: 'All' };\n\n  const languageMap = repos.reduce(\n    (acc: LanguageMap, repo: Repo) =>\n      repo.language\n        ? { ...acc, [repo.language.toLowerCase()]: repo.language }\n        : acc,\n    initialValue\n  );\n\n  return Object.entries(languageMap).map(([key, value]) => ({\n    value: key,\n    label: value,\n  }));\n}\n", "import {\n  FiltersAPI,\n  LanguageFilter,\n  RepositoryOrderField,\n} from './useRepoFilters';\nimport cn from 'classnames';\nimport { useEffect } from 'react';\nimport { XIcon } from '@heroicons/react/solid';\nimport FilterDropdown from './FilterDropdown';\nimport { TypeFilter } from './useRepoFilters';\nimport * as styles from './RepoFilters.classNames';\n\ntype RepoFiltersProps = {\n  languages: LanguageFilter[];\n  resultCount: number;\n} & FiltersAPI;\n\nfunction RepoFilters({\n  state,\n  changeSort,\n  changeLanguage,\n  changeType,\n  setLanguages,\n  setQuery,\n  resetFilters,\n  isQueryActive,\n  isTypeActive,\n  isLanguageActive,\n  isFiltersActive,\n  languages,\n  resultCount,\n}: RepoFiltersProps) {\n  useEffect(() => {\n    setLanguages(languages);\n  }, [languages, setLanguages]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className=\"grow\">\n          <input\n            role=\"search\"\n            type=\"search\"\n            name=\"search\"\n            id=\"search\"\n            value={state.query}\n            className={styles.searchInput}\n            placeholder=\"Find a repository..\"\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        </div>\n        <div className={styles.filters}>\n          <div>\n            <FilterDropdown\n              name=\"Type\"\n              description=\"Select type\"\n              current={state.type}\n              items={[\n                {\n                  label: 'All',\n                  value: TypeFilter.ALL,\n                },\n                {\n                  label: 'Forks',\n                  value: TypeFilter.FORKS,\n                },\n                {\n                  label: 'Archived',\n                  value: TypeFilter.ARCHIVED,\n                },\n              ]}\n              onChange={changeType}\n            />\n          </div>\n          <div>\n            <FilterDropdown\n              name=\"Language\"\n              description=\"Select language\"\n              current={state.language}\n              items={languages}\n              onChange={changeLanguage}\n            />\n          </div>\n          <div>\n            <FilterDropdown\n              name=\"Sort\"\n              description=\"Select order\"\n              current={state.sort}\n              items={[\n                {\n                  value: RepositoryOrderField.UpdatedAt,\n                  label: 'Last updated',\n                },\n                { value: RepositoryOrderField.Name, label: 'Name' },\n                { value: RepositoryOrderField.Stargazers, label: 'Stars' },\n              ]}\n              onChange={changeSort}\n            />\n          </div>\n        </div>\n      </div>\n      {isFiltersActive && (\n        <div className={styles.filtersDetail}>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\" data-testid=\"filterText\">\n              {resultCount}\n            </span>{' '}\n            results for{' '}\n            {isTypeActive && (\n              <span className=\"font-semibold\">{state.type}</span>\n            )}{' '}\n            repositories{' '}\n            {isQueryActive && (\n              <>\n                matching <span className=\"font-semibold\">{state.query}</span>\n              </>\n            )}{' '}\n            {isLanguageActive && (\n              <>\n                written in{' '}\n                <span className=\"font-semibold capitalize\">\n                  {state.language}\n                </span>\n              </>\n            )}{' '}\n            sorted by{' '}\n            <span className=\"font-semibold\">\n              {state.sort.split('_').join(' ').toLowerCase()}\n            </span>\n          </div>\n          <div>\n            <button\n              onClick={resetFilters}\n              className={cn(styles.clearBtn, 'group')}\n            >\n              <span\n                className={cn(\n                  styles.clearBtnIconContainer,\n                  'group-hover:bg-blue-500'\n                )}\n              >\n                <XIcon className={styles.clearBtnIcon} />\n              </span>\n              <span\n                className={cn(styles.clearBtnText, 'group-hover:text-blue-500')}\n              >\n                Clear filter\n              </span>\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default RepoFilters;\n", "import { Fragment } from 'react';\nimport { Menu, Transition } from '@headlessui/react';\nimport { ChevronDownIcon, XIcon, CheckIcon } from '@heroicons/react/solid';\nimport * as styles from './FilterDropdown.classNames';\n\ninterface Option {\n  label: string;\n  value: number | string;\n}\n\ninterface DropdownProps {\n  name: string;\n  description?: string;\n  current: number | string;\n  items: Option[];\n  onChange: (value: any) => void;\n}\n\nfunction Dropdown({\n  name,\n  description,\n  current,\n  items,\n  onChange,\n}: DropdownProps) {\n  return (\n    <Menu as=\"div\" className={styles.container}>\n      <div>\n        <Menu.Button className={styles.menuButton}>\n          {name}\n          <ChevronDownIcon\n            className={styles.menuButtonIcon}\n            aria-hidden=\"true\"\n          />\n        </Menu.Button>\n      </div>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className={styles.menu}>\n          <div>\n            {description && (\n              <div className={styles.menuHeader}>\n                <div className={styles.description}>{description}</div>\n                <Menu.Button>\n                  <XIcon\n                    className={styles.closeButtonIcon}\n                    aria-hidden=\"true\"\n                  />\n                </Menu.Button>\n              </div>\n            )}\n            {items.map(({ label, value }) => (\n              <Menu.Item key={value}>\n                <button\n                  type=\"button\"\n                  className={styles.itemButton}\n                  onClick={() => {\n                    onChange(value);\n                  }}\n                >\n                  {value === current && (\n                    <CheckIcon className={styles.itemActiveIcon} />\n                  )}{' '}\n                  {label}\n                </button>\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n}\n\nexport default Dropdown;\n", "export const container = 'relative inline-block text-left z-30';\nexport const menuButton =\n  'relative inline-flex items-center px-4 py-1.5 rounded-md bg-gray-100 bg-opacity-75 border border-gray-300 text-sm font-medium text-gray-800 hover:bg-gray-200 hover:bg-opacity-50';\nexport const menuButtonIcon = '-mr-1 ml-1 mt-0.5 h-4 w-4';\nexport const menu =\n  'border border-gray-300 origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-sm bg-white ring-1 ring-black ring-opacity-5 focus:outline-none';\nexport const menuHeader = 'flex justify-between items-center';\nexport const description = 'px-4 py-2.5 text-xs text-gray-800 font-semibold';\nexport const closeButtonIcon = 'mr-2 h-4 w-4 text-gray-600';\nexport const itemButton =\n  'relative w-full text-left text-xs py-2 px-10 border-t border-gray-300 hover:bg-gray-100 capitalize';\nexport const itemActiveIcon = 'inline w-4 h-4 absolute left-4';\n", "export const container = 'flex relative mb-4 space-x-4';\nexport const searchInput = 'border p-1.5 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md outline-none';\nexport const filters = 'flex items-center space-x-1.5';\nexport const filtersDetail = 'py-4 border-t flex items-center justify-between';\nexport const clearBtn = 'inline-flex items-center justify-center';\nexport const clearBtnIconContainer = 'p-0.5 rounded bg-gray-500 inline-flex items-center justify-center mr-2 group-hover:bg-blue-500';\nexport const clearBtnIcon = 'w-3.5 h-3.5 text-white';\nexport const clearBtnText = 'text-sm text-gray-500 group-hover:text-blue-500';\n", "export const container = \"relative pt-8\";\nexport const stickyNav = \"border-b border-gray-200 sticky top-0 bg-white z-20  hidden md:block\";\nexport const gridNav = \"grid grid-cols-12 gap-8 max-w-screen-2xl mx-auto\";\nexport const profileNav = \"col-span-12 md:col-span-8 xl:col-span-9\";\n\n", "import { ActionFunction, LoaderFunction, redirect } from 'remix';\nimport { auth } from '~/services/auth.server';\n\nexport const loader: LoaderFunction = () => redirect('/login');\n\nexport const action: ActionFunction = async ({ request }) => {\n  return await auth.authenticate('github', request, {\n    successRedirect: '/',\n    failureRedirect: '/login',\n  });\n};\n", "import { ActionFunction } from 'remix';\nimport { auth } from '~/services/auth.server';\n\nexport const action: ActionFunction = async ({ request }) => {\n  await auth.logout(request, { redirectTo: '/login' });\n};\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport type { GitHubProfile } from \"remix-auth-github\";\nimport { auth } from \"~/services/auth.server\";\nimport gqlClient from \"~/lib/graphql-client\";\nimport { parseQuery } from \"~/components/UserTopRepos/parseQuery\";\nimport { parseQueryUserGists } from \"~/components/UserGists/parseQuery\";\nimport { USER_TOP_REPOS_QUERY } from \"~/lib/queries/UserTopRepos\";\nimport { USER_GISTS_QUERY } from \"~/lib/queries/UserGists\";\nimport UserTopReposView from \"~/components/UserTopRepos/UserTopRepos.view\";\nimport UserGistsView from \"~/components/UserGists/UserGists.view\";\nimport { TopRepo } from \"~/components/UserTopRepos/types\";\nimport { GistItem } from \"~/components/UserGists/types\";\n\ntype LoaderData = {\n  profile: GitHubProfile;\n  userRepos: TopRepo[];\n  userGists: GistItem[];\n};\n\n// localized ErrorBoundary\nexport function ErrorBoundary({ error }: any) {\n  return <div className=\"text-sm\">Error: {error.message}</div>;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { profile, accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n  const repos = await gqlClient.request(USER_TOP_REPOS_QUERY, undefined, {\n    authorization: `Bearer ${accessToken}`,\n  });\n  const gists = await gqlClient.request(USER_GISTS_QUERY, undefined, {\n    authorization: `Bearer ${accessToken}`,\n  });\n\n  const userRepos = parseQuery(repos);\n  const userGists = parseQueryUserGists(gists);\n\n  return json<LoaderData>({ profile, userRepos, userGists });\n};\n\nexport default function Screen() {\n  const { profile, userRepos, userGists } = useLoaderData<LoaderData>();\n\n  return (\n    <div className=\"flex  min-h-[calc(100vh-70px)] w-full flex-col-reverse bg-gray-100 lg:flex-row\">\n      <aside className=\"w-full bg-white p-8 lg:w-96\">\n        <UserGistsView gists={userGists} />\n      </aside>\n      <main className=\"w-full max-w-screen-lg\">\n        <div className=\"p-12\">\n          <h2 className=\"mb-4 text-lg font-medium\">Top Repositories</h2>\n          <UserTopReposView repos={userRepos} login={profile._json.login} />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import type { TopRepo } from './types';\n\nexport function parseQuery(data: any) {\n  const repos = data.viewer.topRepositories.nodes ?? [];\n  return repos.reduce((acc: TopRepo[], repo: any) => {\n    if (!repo) {\n      return acc;\n    }\n    return [\n      ...acc,\n      {\n        id: repo.id,\n        name: repo.name,\n        description: repo.description,\n        owner: repo.owner.login,\n        language: repo.primaryLanguage?.name,\n        languageColor: repo.primaryLanguage?.color,\n        isPrivate: repo.isPrivate,\n        stargazerCount: repo.stargazerCount,\n        forkCount: repo.forkCount,\n        updatedAt: repo.updatedAt,\n      },\n    ];\n  }, []);\n}\n", "import type { GistItem } from './types';\n\ntype GistDataGQL = {\n  viewer: {\n    gists: {\n      nodes: GistNodeGQL[];\n    };\n  };\n};\ntype GistNodeGQL = {\n  id: string;\n  description?: string;\n  name: string;\n  url: string;\n  files?: {\n    name: string;\n  }[];\n};\ntype GistFileGQL = { name: string };\n\nexport function parseQueryUserGists(data: GistDataGQL): GistItem[] {\n  return (data.viewer.gists.nodes || [])\n    .filter((gist: GistNodeGQL) => !!gist)\n    .map((gist: GistNodeGQL) => {\n      return (gist.files || [])\n        .filter((file: GistFileGQL) => !!file)\n        .map(\n          (file: GistFileGQL): GistItem => ({\n            id: gist.id,\n            description: gist.description,\n            name: file.name || gist.name,\n            url: gist.url,\n          })\n        );\n    })\n    .flat();\n}\n", "import { gql } from 'graphql-request';\n\nexport const USER_TOP_REPOS_QUERY = gql`\n  query UserTopRepos {\n    viewer {\n      login\n      topRepositories(\n        first: 20\n        orderBy: { field: STARGAZERS, direction: DESC }\n      ) {\n        nodes {\n          id\n          name\n          description\n          owner {\n            login\n          }\n          primaryLanguage {\n            name\n            color\n          }\n          isPrivate\n          stargazerCount\n          forkCount\n          updatedAt\n        }\n      }\n    }\n  }\n`;\n", "import { gql } from 'graphql-request';\n\nexport const USER_GISTS_QUERY = gql`\n  query UserGists {\n    viewer {\n      gists(last: 20, orderBy: { field: CREATED_AT, direction: DESC }) {\n        nodes {\n          id\n          description\n          url\n          name\n          files {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n", "import type { TopRepo } from \"./types\";\nimport { Link } from \"@remix-run/react\";\nimport * as styles from \"./UserTopRepos.classNames\";\nimport RepoMeta from \"../RepoMeta/RepoMeta\";\nimport PrivacyBadge from \"../PrivacyBadge/PrivacyBadge\";\n\ninterface UserTopReposViewProps {\n  login: string;\n  repos: TopRepo[];\n}\n\nfunction UserTopReposView({ repos, login }: UserTopReposViewProps) {\n  return (\n    <div className={styles.container}>\n      {repos.map(\n        ({\n          id,\n          name,\n          owner,\n          description,\n          stargazerCount,\n          forkCount,\n          language,\n          languageColor,\n          updatedAt,\n          isPrivate,\n        }) => (\n          <div key={id} className={styles.item}>\n            <h3 className=\"mb-2\">\n              <Link to={`/${owner}/${name}`} className={styles.headingLink}>\n                {name}\n              </Link>\n              <PrivacyBadge\n                isPrivate={isPrivate}\n                className=\"relative bottom-0.5\"\n              />\n            </h3>\n            <div className={styles.description}>{description}</div>\n            <RepoMeta\n              language={language}\n              languageColor={languageColor}\n              forkCount={forkCount}\n              stargazerCount={stargazerCount}\n              updatedAt={updatedAt}\n            />\n          </div>\n        )\n      )}\n      <div className={styles.linkContainer}>\n        <Link to={`/${login}`} className={styles.allRepoLink}>\n          View all repositories\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default UserTopReposView;\n", "export const container = 'w-full border rounded-lg relative bg-white';\nexport const item = 'p-4 border-b';\nexport const headingLink =\n  'text-xl text-blue-600 font-semibold hover:underline mr-3';\nexport const description = 'text-gray-600 text-sm max-w-prose -mb-1 -mt-1';\nexport const linkContainer = 'bg-gray-50 p-5 w-full text-center';\nexport const allRepoLink = 'font-semibold text-gray-600 hover:text-blue-500';\n", "import type { GistItem } from './types';\nimport Container from './container';\n\nimport * as styles from './UserGists.classNames';\n\ninterface UserGistsProps {\n  gists?: GistItem[];\n}\n\nfunction UserGistsView({ gists = [] }: UserGistsProps) {\n  return (\n    <Container>\n      <div className=\"mt-3\">\n        {gists.map((gist) => (\n          <div key={gist.id} className=\"my-1\">\n            <a href={gist.url} className={styles.link} target=\"_blank\">\n              {gist.name}\n            </a>\n          </div>\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nexport default UserGistsView;\n", "import type { ReactNode } from 'react';\nimport * as styles from './container.classNames';\n\ninterface ContainerProps {\n  children: ReactNode;\n}\n\nfunction Container({ children }: ContainerProps) {\n  return (\n    <div className={styles.container}>\n      <h3 className=\"font-semibold\">Gists</h3>\n      {children}\n    </div>\n  );\n}\n\nexport default Container;\n", "export const container = 'py-8 border-t border-b';\n", "export const link = 'text-sm hover:text-blue-500 hover:underline';\n", "import { Form, useLoaderData } from \"@remix-run/react\";\n\nimport { json, LoaderFunction } from \"@remix-run/node\";\nimport { auth } from \"~/services/auth.server\";\nimport { sessionStorage } from \"~/services/session.server\";\ntype LoaderData = {\n  error: { message: string } | null;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await auth.isAuthenticated(request, { successRedirect: \"/private\" });\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n  const error = session.get(auth.sessionErrorKey) as LoaderData[\"error\"];\n  return json<LoaderData>({ error });\n};\n\nexport default function Screen() {\n  const { error } = useLoaderData<LoaderData>();\n\n  return (\n    <section className=\"flex h-screen w-full items-center justify-center bg-black\">\n      <Form method=\"post\" action=\"/auth/github\">\n        {error && <div>{error.message}</div>}\n        <button className=\"rounded-md border-2 border-zinc-700 px-20 py-2 text-zinc-100 transition-all hover:border-zinc-100 hover:bg-zinc-100 hover:text-zinc-900\">\n          Sign In with GitHub\n        </button>\n      </Form>\n    </section>\n  );\n}\n", "export default {'version':'b70805ae','entry':{'module':'/_static/build/entry.client-NFBXS53P.js','imports':['/_static/build/_shared/chunk-X5V4JMCX.js','/_static/build/_shared/chunk-6BO74FWO.js']},'routes':{'/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user':{'id':'/Users/williamhutt/Documents/work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/_.._/cypress/support/test-routes/create-user-ONRYC4R3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-5V7YMKXJ.js','imports':['/_static/build/_shared/chunk-EQQNMLYU.js','/_static/build/_shared/chunk-YOBJVC7J.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/$user/$repository/blob/$branch/$':{'id':'routes/$user/$repository/blob/$branch/$','parentId':'root','path':':user/:repository/blob/:branch/*','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/blob/$branch/$-4ZZADPJP.js','imports':['/_static/build/_shared/chunk-DFYHLDQS.js','/_static/build/_shared/chunk-O5VYUNOW.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/$repository/blob/$branch/index':{'id':'routes/$user/$repository/blob/$branch/index','parentId':'root','path':':user/:repository/blob/:branch','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/blob/$branch/index-CVDIGIPD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/$repository/index':{'id':'routes/$user/$repository/index','parentId':'root','path':':user/:repository','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/index-OLVGRB76.js','imports':['/_static/build/_shared/chunk-UEOWOEQ7.js','/_static/build/_shared/chunk-DFYHLDQS.js','/_static/build/_shared/chunk-O5VYUNOW.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/$repository/issues':{'id':'routes/$user/$repository/issues','parentId':'root','path':':user/:repository/issues','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/issues-VCFARSYA.js','imports':['/_static/build/_shared/chunk-LYCXCYOU.js','/_static/build/_shared/chunk-TXPPY6SS.js','/_static/build/_shared/chunk-TZ6KWIXP.js','/_static/build/_shared/chunk-O5VYUNOW.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/$repository/pulls':{'id':'routes/$user/$repository/pulls','parentId':'root','path':':user/:repository/pulls','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/pulls-3WY56GBJ.js','imports':['/_static/build/_shared/chunk-LYCXCYOU.js','/_static/build/_shared/chunk-TXPPY6SS.js','/_static/build/_shared/chunk-TZ6KWIXP.js','/_static/build/_shared/chunk-O5VYUNOW.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/$repository/tree/$branch/$':{'id':'routes/$user/$repository/tree/$branch/$','parentId':'root','path':':user/:repository/tree/:branch/*','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/$user/$repository/tree/$branch/$-FDFIYUSX.js','imports':['/_static/build/_shared/chunk-UEOWOEQ7.js','/_static/build/_shared/chunk-DFYHLDQS.js','/_static/build/_shared/chunk-O5VYUNOW.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$user/index':{'id':'routes/$user/index','parentId':'root','path':':user','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/$user/index-467EX3A6.js','imports':['/_static/build/_shared/chunk-6TUIVF3G.js','/_static/build/_shared/chunk-TXPPY6SS.js','/_static/build/_shared/chunk-TZ6KWIXP.js','/_static/build/_shared/chunk-DA4OIGQ7.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.github':{'id':'routes/auth.github','parentId':'root','path':'auth/github','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth.github-TKACMVMF.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.github.callback':{'id':'routes/auth.github.callback','parentId':'root','path':'auth/github/callback','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth.github.callback-ORDMHWZ5.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-ZL2L3G6X.js','imports':['/_static/build/_shared/chunk-6TUIVF3G.js','/_static/build/_shared/chunk-TZ6KWIXP.js','/_static/build/_shared/chunk-5LJKAPJA.js','/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-57N3PHQ3.js','imports':['/_static/build/_shared/chunk-V2UYFXEK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-AKIT54B5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-B70805AE.js'};"],
  "mappings": "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",
  "names": []
}
