{"version":3,"file":"web.023294f2.js","sources":["../../node_modules/solid-js/dist/solid.js","../../node_modules/solid-js/web/dist/web.js"],"sourcesContent":["let taskIdCounter = 1,\n  isCallbackScheduled = false,\n  isPerformingWork = false,\n  taskQueue = [],\n  currentTask = null,\n  shouldYieldToHost = null,\n  yieldInterval = 5,\n  deadline = 0,\n  maxYieldInterval = 300,\n  scheduleCallback = null,\n  scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n    port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n    timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return {\n    ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst NO_INIT = {};\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n    owner = Owner,\n    unowned = fn.length === 0,\n    root = unowned ? UNOWNED : {\n      owned: null,\n      cleanups: null,\n      context: null,\n      owner: detachedOwner || owner\n    },\n    updateFn = unowned ? fn : () => fn(() => untrack(() => cleanNode(root)));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.tValue);else value = value(s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n      fn ? fn() : untrack(onInvalidate);\n      fn = undefined;\n    }, undefined, false, 0),\n    s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(pSource, pFetcher, pOptions) {\n  let source;\n  let fetcher;\n  let options;\n  if (arguments.length === 2 && typeof pFetcher === \"object\" || arguments.length === 1) {\n    source = true;\n    fetcher = pSource;\n    options = pFetcher || {};\n  } else {\n    source = pSource;\n    fetcher = pFetcher;\n    options = pOptions || {};\n  }\n  let pr = null,\n    initP = NO_INIT,\n    id = null,\n    loadedUnderTransition = false,\n    scheduled = false,\n    resolved = (\"initialValue\" in options),\n    dynamic = typeof source === \"function\" && createMemo(source);\n  const contexts = new Set(),\n    [value, setValue] = (options.storage || createSignal)(options.initialValue),\n    [error, setError] = createSignal(undefined),\n    [track, trigger] = createSignal(undefined, {\n      equals: false\n    }),\n    [state, setState] = createSignal(resolved ? \"ready\" : \"unresolved\");\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    let v;\n    if (options.ssrLoadFrom === \"initial\") initP = options.initialValue;else if (sharedConfig.load && (v = sharedConfig.load(id))) initP = v[0];\n  }\n  function loadEnd(p, v, error, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if ((p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = NO_INIT;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          completeLoad(v, error);\n        }, false);\n      } else completeLoad(v, error);\n    }\n    return v;\n  }\n  function completeLoad(v, err) {\n    runUpdates(() => {\n      if (!err) setValue(() => v);\n      setState(err ? \"errored\" : \"ready\");\n      setError(err);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    }, false);\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n      v = value(),\n      err = error();\n    if (err && !pr) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition && loadedUnderTransition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching !== false && scheduled) return;\n    scheduled = false;\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP !== NO_INIT ? initP : untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(p && \"then\" in p)) {\n      loadEnd(pr, p, undefined, lookup);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    runUpdates(() => {\n      setState(resolved ? \"refreshing\" : \"pending\");\n      trigger();\n    }, false);\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, undefined, castError(e), lookup));\n  }\n  Object.defineProperties(read, {\n    state: {\n      get: () => state()\n    },\n    error: {\n      get: () => error()\n    },\n    loading: {\n      get() {\n        const s = state();\n        return s === \"pending\" || s === \"refreshing\";\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        const err = error();\n        if (err && !pr) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n    timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const [key, val] of subs.entries()) if (fn(key, v) !== fn(key, p)) {\n      for (const c of val.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    const listener = Listener;\n    if (listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  return runUpdates(fn, false);\n}\nfunction untrack(fn) {\n  const listener = Listener;\n  Listener = null;\n  try {\n    return fn();\n  } finally {\n    Listener = listener;\n  }\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  const prevListener = Listener;\n  Owner = o;\n  Listener = null;\n  try {\n    return runUpdates(fn, true);\n  } catch (err) {\n    handleError(err);\n  } finally {\n    Owner = prev;\n    Listener = prevListener;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    runUpdates(fn, false);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue, options) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  const memo = createMemo(() => resolveChildren(children()));\n  memo.toArray = () => {\n    const c = memo();\n    return Array.isArray(c) ? c : c != null ? [c] : [];\n  };\n  return memo;\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    if (!runningTransition && this.state === STALE || runningTransition && this.tState === STALE) updateComputation(this);else {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(this), false);\n      Updates = updates;\n    }\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  let current = Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value;\n  if (!node.comparator || !node.comparator(current, value)) {\n    if (Transition) {\n      const TransitionRunning = Transition.running;\n      if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n        Transition.sources.add(node);\n        node.tValue = value;\n      }\n      if (!TransitionRunning) node.value = value;\n    } else node.value = value;\n    if (node.observers && node.observers.length) {\n      runUpdates(() => {\n        for (let i = 0; i < node.observers.length; i += 1) {\n          const o = node.observers[i];\n          const TransitionRunning = Transition && Transition.running;\n          if (TransitionRunning && Transition.disposed.has(o)) continue;\n          if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n            if (o.pure) Updates.push(o);else Effects.push(o);\n            if (o.observers) markDownstream(o);\n          }\n          if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n        }\n        if (Updates.length > 10e5) {\n          Updates = [];\n          if (false) ;\n          throw new Error();\n        }\n      }, false);\n    }\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n    listener = Listener,\n    time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        Listener = Owner = node;\n        runComputation(node, node.tValue, time);\n        Listener = Owner = null;\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    if (node.pure) {\n      if (Transition && Transition.running) {\n        node.tState = STALE;\n        node.tOwned && node.tOwned.forEach(cleanNode);\n        node.tOwned = undefined;\n      } else {\n        node.state = STALE;\n        node.owned && node.owned.forEach(cleanNode);\n        node.owned = null;\n      }\n    }\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.updatedAt != null && \"observers\" in node) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n        prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      runUpdates(() => lookUpstream(node, ancestors[0]), false);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!Updates) Effects = null;\n    Updates = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition) {\n    if (!Transition.promises.size && !Transition.queue.size) {\n      const sources = Transition.sources;\n      const disposed = Transition.disposed;\n      Effects.push.apply(Effects, Transition.effects);\n      res = Transition.resolve;\n      for (const e of Effects) {\n        \"tState\" in e && (e.state = e.tState);\n        delete e.tState;\n      }\n      Transition = null;\n      runUpdates(() => {\n        for (const d of disposed) cleanNode(d);\n        for (const v of sources) {\n          v.value = v.tValue;\n          if (v.owned) {\n            for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n          }\n          if (v.tOwned) v.owned = v.tOwned;\n          delete v.tValue;\n          delete v.tOwned;\n          v.tState = 0;\n        }\n        setTransPending(false);\n      }, false);\n    } else if (Transition.running) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n  }\n  const e = Effects;\n  Effects = null;\n  if (e.length) runUpdates(() => runEffects(e), false);\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n    userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n        index = node.sourceSlots.pop(),\n        obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n          s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction castError(err) {\n  if (err instanceof Error || typeof err === \"string\") return err;\n  return new Error(\"Unknown error\");\n}\nfunction handleError(err) {\n  err = castError(err);\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  for (const f of fns) f(err);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id, options) {\n  return function provider(props) {\n    let res;\n    createRenderEffect(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }), undefined);\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === \"function\" ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createEffect(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    len = 0,\n    indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n      i,\n      j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n        newIndices,\n        newIndicesNext,\n        temp,\n        tempdisposers,\n        tempIndexes,\n        start,\n        end,\n        newEnd,\n        item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n    mapped = [],\n    disposers = [],\n    signals = [],\n    len = 0,\n    i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    if (property === $PROXY) return true;\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return !(s = typeof s === \"function\" ? s() : s) ? {} : s;\n}\nfunction mergeProps(...sources) {\n  let proxy = false;\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    proxy = proxy || !!s && $PROXY in s;\n    sources[i] = typeof s === \"function\" ? (proxy = true, createMemo(s)) : s;\n  }\n  if (proxy) {\n    return new Proxy({\n      get(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          const v = resolveSource(sources[i])[property];\n          if (v !== undefined) return v;\n        }\n      },\n      has(property) {\n        for (let i = sources.length - 1; i >= 0; i--) {\n          if (property in resolveSource(sources[i])) return true;\n        }\n        return false;\n      },\n      keys() {\n        const keys = [];\n        for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n        return [...new Set(keys)];\n      }\n    }, propTraps);\n  }\n  const target = {};\n  for (let i = sources.length - 1; i >= 0; i--) {\n    if (sources[i]) {\n      const descriptors = Object.getOwnPropertyDescriptors(sources[i]);\n      for (const key in descriptors) {\n        if (key in target) continue;\n        Object.defineProperty(target, key, {\n          enumerable: true,\n          get() {\n            for (let i = sources.length - 1; i >= 0; i--) {\n              const v = (sources[i] || {})[key];\n              if (v !== undefined) return v;\n            }\n          }\n        });\n      }\n    }\n  }\n  return target;\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  if ($PROXY in props) {\n    const res = keys.map(k => {\n      return new Proxy({\n        get(property) {\n          return k.includes(property) ? props[property] : undefined;\n        },\n        has(property) {\n          return k.includes(property) && property in props;\n        },\n        keys() {\n          return k.filter(property => property in props);\n        }\n      }, propTraps);\n    });\n    res.push(new Proxy({\n      get(property) {\n        return blocked.has(property) ? undefined : props[property];\n      },\n      has(property) {\n        return blocked.has(property) ? false : property in props;\n      },\n      keys() {\n        return Object.keys(props).filter(k => !blocked.has(k));\n      }\n    }, propTraps));\n    return res;\n  }\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  keys.push(Object.keys(descriptors).filter(k => !blocked.has(k)));\n  return keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (!(key in props)) continue;\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        },\n        enumerable: true\n      });\n    }\n    return clone;\n  });\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (false) ;\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback || undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const keyed = props.keyed;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      const fn = typeof child === \"function\" && child.length > 0;\n      strictEqual = keyed || fn;\n      return fn ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  }, undefined, undefined);\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  let keyed = false;\n  const equals = (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2];\n  const conditions = children(() => props.children),\n    evalConditions = createMemo(() => {\n      let conds = conditions();\n      if (!Array.isArray(conds)) conds = [conds];\n      for (let i = 0; i < conds.length; i++) {\n        const c = conds[i].when;\n        if (c) {\n          keyed = !!conds[i].keyed;\n          return [i, c, conds[i]];\n        }\n      }\n      return [-1];\n    }, undefined, {\n      equals\n    });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    const fn = typeof c === \"function\" && c.length > 0;\n    strictEqual = keyed || fn;\n    return fn ? untrack(() => c(when)) : c;\n  }, undefined, undefined);\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn());\n}\nfunction ErrorBoundary(props) {\n  let err;\n  let v;\n  if (sharedConfig.context && sharedConfig.load && (v = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count))) err = v[0];\n  const [errored, setErrored] = createSignal(err, undefined);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if (e = errored()) {\n      const f = props.fallback;\n      const res = typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored())) : f;\n      onError(setErrored);\n      return res;\n    }\n    onError(setErrored);\n    return props.children;\n  }, undefined, undefined);\n}\n\nconst suspenseListEquals = (a, b) => a.showContent === b.showContent && a.showFallback === b.showFallback;\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let [wrapper, setWrapper] = createSignal(() => ({\n      inFallback: false\n    })),\n    show;\n  const listContext = useContext(SuspenseListContext);\n  const [registry, setRegistry] = createSignal([]);\n  if (listContext) {\n    show = listContext.register(createMemo(() => wrapper()().inFallback));\n  }\n  const resolved = createMemo(prev => {\n    const reveal = props.revealOrder,\n      tail = props.tail,\n      {\n        showContent = true,\n        showFallback = true\n      } = show ? show() : {},\n      reg = registry(),\n      reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(inFallback => !inFallback());\n      const res = reg.map(() => ({\n        showContent: all && showContent,\n        showFallback\n      }));\n      res.inFallback = !all;\n      return res;\n    }\n    let stop = false;\n    let inFallback = prev.inFallback;\n    const res = [];\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n        s = reg[n]();\n      if (!stop && !s) {\n        res[n] = {\n          showContent,\n          showFallback\n        };\n      } else {\n        const next = !stop;\n        if (next) inFallback = true;\n        res[n] = {\n          showContent: next,\n          showFallback: !tail || next && tail === \"collapsed\" ? showFallback : false\n        };\n        stop = true;\n      }\n    }\n    if (!stop) inFallback = false;\n    res.inFallback = inFallback;\n    return res;\n  }, {\n    inFallback: false\n  });\n  setWrapper(() => resolved);\n  return createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        let index;\n        setRegistry(registry => {\n          index = registry.length;\n          return [...registry, inFallback];\n        });\n        return createMemo(() => resolved()[index], undefined, {\n          equals: suspenseListEquals\n        });\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nfunction Suspense(props) {\n  let counter = 0,\n    show,\n    ctx,\n    p,\n    flicker,\n    error;\n  const [inFallback, setFallback] = createSignal(false),\n    SuspenseContext = getSuspenseContext(),\n    store = {\n      increment: () => {\n        if (++counter === 1) setFallback(true);\n      },\n      decrement: () => {\n        if (--counter === 0) setFallback(false);\n      },\n      inFallback,\n      effects: [],\n      resolved: false\n    },\n    owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    let ref = sharedConfig.load(key);\n    if (ref && (p = ref[0]) && p !== \"$$f\") {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if (err || sharedConfig.done) {\n          err && (error = err);\n          return set();\n        }\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    }\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) show = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === \"$$f\") setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(prev => {\n          const inFallback = store.inFallback(),\n            {\n              showContent = true,\n              showFallback = true\n            } = show ? show() : {};\n          if ((!inFallback || p && p !== \"$$f\") && showContent) {\n            store.resolved = true;\n            dispose && dispose();\n            dispose = ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!showFallback) return;\n          if (dispose) return prev;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createRoot, createRenderEffect, sharedConfig, untrack, enableHydration, createSignal, onCleanup, splitProps, createMemo } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, createMemo as memo, mergeProps, untrack } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  className: \"class\",\n  htmlFor: \"for\"\n});\nconst PropAliases = /*#__PURE__*/Object.assign(Object.create(null), {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n});\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n    aEnd = a.length,\n    bEnd = bLength,\n    aStart = 0,\n    bStart = 0,\n    after = a[aEnd - 1].nextSibling,\n    map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n            sequence = 1,\n            t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init, options = {}) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  }, options.owner);\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n    prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n      classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev) {\n  if (!value) return prev ? setAttribute(node, \"style\") : value;\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (nodeStyle.cssText = prev = undefined);\n  prev || (prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, props = {}, isSVG, skipChildren) {\n  const prevProps = {};\n  if (!skipChildren) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => props.ref && props.ref(node));\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction use(fn, element, arg) {\n  return untrack(() => fn(element, arg));\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      prevProps[prop] = assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes], options);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n    count = 0,\n    current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) value(node);\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => {\n      while (elem && elem.nodeType !== 8 && elem.nodeValue !== \"pl-\" + e) {\n        let x = elem.nextSibling;\n        elem.remove();\n        elem = x;\n      }\n      elem && elem.remove();\n    });\n  }\n  while (node) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node._$host || node.parentNode || node.host;\n  }\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n    multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      if (!array.length) return current;\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n      prev = current && current[i];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if ((typeof item) === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], Array.isArray(prev) ? prev : [prev]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker = null) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\nfunction Hydration(props) {\n  return props.children;\n}\nfunction voidFn() {}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction ssrElement(name, props, children, needsId) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction resolveSSRNode(node) {}\nfunction escape(html) {}\nfunction ssrSpread(props, isSVG, skipChildren) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n      useShadow\n    } = props,\n    marker = document.createTextNode(\"\"),\n    mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n      renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n        mode: \"open\"\n      }) : container;\n    Object.defineProperty(container, \"_$host\", {\n      get() {\n        return marker.parentNode;\n      },\n      configurable: true\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, voidFn as Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Hydration, voidFn as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, voidFn as generateHydrationScript, voidFn as getAssets, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrAttribute, ssrClassList, ssrElement, ssrHydrationKey, ssrSpread, ssrStyle, style, template, use, voidFn as useAssets };\n"],"names":["sharedConfig","setHydrateContext","context","__name","nextHydrateContext","equalFn","a","b","$PROXY","$TRACK","signalOptions","runEffects","runQueue","STALE","PENDING","UNOWNED","Owner","Transition","Listener","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","root","updateFn","untrack","cleanNode","runUpdates","createSignal","value","options","s","setter","writeSignal","readSignal","createRenderEffect","c","createComputation","updateComputation","createMemo","on","deps","isArray","prevInput","defer","prevValue","input","i","result","onCleanup","getOwner","runWithOwner","o","prev","prevListener","err","handleError","startTransition","l","t","createContext","defaultValue","id","createProvider","useContext","ctx","lookup","children","memo","resolveChildren","runningTransition","updates","lookUpstream","sSlot","node","isComp","current","TransitionRunning","markDownstream","time","runComputation","nextValue","init","pure","state","runTop","ancestors","wait","res","completeUpdates","e","queue","ignore","source","index","obs","n","castError","key","results","props","FALLBACK","dispose","d","mapArray","list","mapFn","items","mapped","disposers","len","indexes","newItems","j","newLen","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","disposer","mapper","set","hydrationEnabled","createComponent","Comp","r","trueFn","propTraps","_","property","receiver","resolveSource","mergeProps","sources","proxy","v","keys","target","descriptors","splitProps","blocked","k","clone","For","fallback","resetErrorBoundaries","booleans","Properties","ChildProperties","Aliases","PropAliases","DelegatedEvents","SVGNamespace","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","$$EVENTS","render","code","element","insert","template","html","check","isSVG","delegateEvents","eventNames","document","name","eventHandler","setAttribute","setAttributeNS","namespace","className","addEventListener","handler","delegate","handlerFn","classList","classKeys","prevKeys","toggleClassKey","classValue","style","nodeStyle","spread","skipChildren","prevProps","insertExpression","assign","parent","accessor","marker","initial","skipRef","prop","assignProp","toPropertyName","w","classNames","nameLen","isCE","isProp","isChildProp","h","ns","elem","x","data","unwrapArray","multi","cleanChildren","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","replacement","inserted","el","isParent","isServer"],"mappings":"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"}