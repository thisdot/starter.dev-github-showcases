{
  "version": 3,
  "sources": ["browser-route-module:/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/index.tsx?browser", "../../../../app/routes/$user/index.tsx", "../../../../app/components/ProfilePage/ProfilePage.view.tsx", "../../../../app/components/ProfileNav/ProfileNav.tsx", "../../../../app/components/ProfileNav/tabList.tsx", "../../../../app/components/UserProfile/UserProfile.view.tsx", "../../../../app/components/UserProfile/OrgList.tsx", "../../../../app/components/UserProfile/OrgList.classNames.ts", "../../../../app/components/UserProfile/UserProfile.classNames.ts", "../../../../app/components/UserRepos/UserRepos.view.tsx", "../../../../app/components/UserRepos/UserRepos.classNames.ts", "../../../../app/components/Pagination/Pagination.tsx", "../../../../app/components/Pagination/Pagination.classNames.ts", "../../../../app/components/UserRepos/filterRepos.ts", "../../../../app/components/UserRepos/getLanguages.ts", "../../../../app/components/RepoFilters/RepoFilters.tsx", "../../../../app/components/RepoFilters/RepoFilters.classNames.ts", "../../../../app/components/RepoFilters/FilterDropdown.tsx", "../../../../app/components/RepoFilters/FilterDropdown.classNames.ts", "../../../../app/components/ProfilePage/ProfilePage.classNames.ts"],
  "sourcesContent": ["export { default } from \"/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/index.tsx\";", "import type { LoaderFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData, useLocation } from '@remix-run/react';\nimport gqlClient from '~/lib/graphql-client';\nimport { FULL_USER_PROFILE_QUERY } from '~/lib/queries/UserProfile';\nimport { auth } from '~/services/auth.server';\nimport { parseQuery } from '~/components/UserRepos/parseQuery';\nimport ProfilePage from '~/components/ProfilePage/ProfilePage.view';\nimport {\n  OrderDirection,\n  RepositoryOrderField,\n} from '~/components/RepoFilters/useRepoFilters';\n\ntype LoaderData = {\n  userProfileData: any;\n  owner?: string;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n\n  let url = new URL(request.url);\n  let after = url.searchParams.get('after');\n  let before = url.searchParams.get('before');\n\n  const afterCursor = typeof after === 'string' ? after : undefined;\n  const beforeCursor = typeof before === 'string' ? before : undefined;\n\n  const data = await gqlClient.request(\n    FULL_USER_PROFILE_QUERY,\n    {\n      username: params.user,\n      orderBy: {\n        field: RepositoryOrderField.UpdatedAt,\n        direction: OrderDirection.Desc,\n      },\n      afterCursor,\n      beforeCursor,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n  const repositories = parseQuery(data);\n  data.user.repositories = repositories;\n  const userProfileData = { ...data.user };\n\n  return json<LoaderData>({ owner: params.user, userProfileData });\n};\n\nexport default function User() {\n  const location = useLocation();\n  const { userProfileData, owner } = useLoaderData();\n\n  return (\n    <ProfilePage\n      userProfileData={userProfileData}\n      owner={owner}\n      pathname={location.pathname}\n    />\n  );\n}\n", "import ProfileNav from '../ProfileNav/ProfileNav';\nimport UserProfileView, {\n  UserProfileViewProps,\n} from '../UserProfile/UserProfile.view';\nimport UserReposView, { Repositories } from '../UserRepos/UserRepos.view';\nimport * as styles from './ProfilePage.classNames';\n\ninterface ProfilePageProps {\n  userProfileData: any;\n  owner: string;\n  pathname: string;\n}\n\nfunction ProfilePage({ userProfileData, owner, pathname }: ProfilePageProps) {\n  return (\n    <div className={styles.container}>\n      <div className={styles.stickyNav}>\n        <div className={styles.gridNav}>\n          <div className=\"col-span-12 md:col-span-4 xl:col-span-3\" />\n          <div className={styles.profileNav}>\n            <ProfileNav className=\"border-none\" pathname={pathname} />\n          </div>\n        </div>\n      </div>\n      <div className=\"mx-auto max-w-screen-2xl py-8 px-4\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"relative z-20 col-span-12 md:-top-20 md:col-span-4 xl:col-span-3\">\n            <UserProfileView {...userProfileData} />\n          </div>\n          <div className=\"col-span-12 md:col-span-8 xl:col-span-9\">\n            <ProfileNav className=\"border-none md:hidden\" pathname={pathname} />\n            <UserReposView repos={userProfileData.repositories} owner={owner} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n", "import TabNavigation from '../TabNavigation/TabNavigation';\nimport { tabList } from './tabList';\n\ninterface ProfileNavProps {\n  className?: string;\n  basePath?: string;\n  isOrg?: boolean;\n  pathname: string;\n}\n\nfunction ProfileNav({ className, pathname }: ProfileNavProps) {\n  return (\n    <TabNavigation tabs={tabList} className={className} pathname={pathname} />\n  );\n}\n\nexport default ProfileNav;\n", "import { GitRepoIcon } from '../Icons';\nimport { TabItem } from '../TabNavigation/types';\n\nexport const tabList: TabItem[] = [\n  {\n    title: 'Repositories',\n    path: '',\n    Icon: GitRepoIcon,\n  },\n];\n", "import { Follow, Nodes } from './types';\nimport {\n  UsersIcon,\n  StarIcon,\n  OfficeBuildingIcon,\n  LocationMarkerIcon,\n  LinkIcon,\n} from '@heroicons/react/outline';\nimport { TwitterIcon } from '../Icons';\nimport OrgList from './OrgList';\nimport * as styles from './UserProfile.classNames';\n\nexport interface UserProfileViewProps {\n  avatarUrl: any;\n  bio?: string | null;\n  company?: string | null;\n  location?: string | null;\n  login: string;\n  name?: string | null;\n  twitterUsername?: string | null;\n  websiteUrl?: string | null;\n  followers: Follow;\n  following: Follow;\n  starredRepositories: Follow;\n  organizations: Nodes;\n}\n\nfunction UserProfileView({\n  avatarUrl,\n  bio,\n  company,\n  location,\n  login,\n  name,\n  twitterUsername,\n  websiteUrl,\n  followers,\n  following,\n  starredRepositories,\n  organizations,\n}: UserProfileViewProps) {\n  return (\n    <div>\n      <img\n        src={avatarUrl}\n        alt=\"Avatar\"\n        width={260}\n        height={260}\n        className={styles.avatar}\n      />\n      <h1 className=\"mt-2\">\n        <div className={styles.name}>{name}</div>\n        <div className={styles.username}>{login}</div>\n      </h1>\n      {bio && (\n        <div className={styles.bio} dangerouslySetInnerHTML={{ __html: bio }} />\n      )}\n      <div className={styles.socials}>\n        <UsersIcon className={styles.icon} />\n        <span className=\"inline-block\">\n          <span className={styles.count}>{followers.totalCount}</span> followers\n        </span>\n        <span className=\"mx-1\">\u00B7</span>\n        <span className=\"inline-block\">\n          <span className={styles.count}>{following.totalCount}</span> following\n        </span>\n        <span className=\"mx-1\">\u00B7</span>\n        <StarIcon className={styles.icon} />\n        <span className=\"inline-block\">\n          <span className={styles.count}>{starredRepositories.totalCount}</span>{' '}\n        </span>\n      </div>\n      <div className={styles.fields}>\n        {company && (\n          <div>\n            <OfficeBuildingIcon className={styles.icon} />\n            {company}\n          </div>\n        )}\n        {location && (\n          <div>\n            <LocationMarkerIcon className={styles.icon} />\n            {location}\n          </div>\n        )}\n        {websiteUrl && (\n          <div>\n            <LinkIcon className={styles.icon} />\n            <a\n              className={styles.link}\n              href={websiteUrl}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {websiteUrl}\n            </a>\n          </div>\n        )}\n        {twitterUsername && (\n          <div>\n            <TwitterIcon className={styles.icon} />\n            <a\n              className={styles.link}\n              href={`https:/twitter.com/${twitterUsername}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              @{twitterUsername}\n            </a>\n          </div>\n        )}\n      </div>\n      {organizations.nodes.length > 0 && (\n        <OrgList organizations={organizations.nodes} />\n      )}\n    </div>\n  );\n}\n\nexport default UserProfileView;\n", "import type { OrganizationNodes } from './types';\nimport * as styles from './OrgList.classNames';\n\ninterface OrgListProps {\n  organizations: OrganizationNodes[];\n}\n\nfunction OrgList({ organizations }: OrgListProps) {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.heading}>Organizations</h2>\n      <div className={styles.list}>\n        {organizations.map(({ avatarUrl, login }) => (\n          <div key={login} className={styles.listItem}>\n            <img\n              src={avatarUrl}\n              alt=\"Organization\"\n              style={{ objectFit: 'fill' }}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default OrgList;\n", "export const container = 'mt-5 border-t border-gray-200';\nexport const heading = 'my-2 pt-2 text-gray-800 font-bold';\nexport const list = 'flex flex-wrap space-x-2';\nexport const listItem =\n  'relative w-9 h-9 rounded border border-gray-300 overflow-hidden';\n", "export const avatar = 'rounded-full shadow z-30';\nexport const name = 'text-2xl text-gray-800 font-bold leading-tight';\nexport const username = 'text-xl text-gray-500 font-light';\nexport const bio = 'text-gray-800 mt-4 mb-3';\nexport const icon = 'w-4 h-4 mb-0.5 mr-1 inline';\nexport const count = 'font-medium text-gray-900';\nexport const socials = 'text-sm text-gray-600 my-4';\nexport const fields = 'text-sm text-gray-800 space-y-1';\nexport const link = 'hover:text-blue-600 hover:underline';\nexport const buttonContainer =\n  'flex flex-col w-4/5 bg-gray-100 mb-3 items-center text-grey-600 rounded-md border-solid border-slate-500 border hover:bg-gray-200';\nexport const button = 'border-none text-black py-0.5';\n", "import type { Repo } from './types';\nimport { Link } from '@remix-run/react';\nimport { StarIcon } from '@heroicons/react/outline';\nimport PrivacyBadge from '../PrivacyBadge/PrivacyBadge';\nimport RepoMeta from '../RepoMeta/RepoMeta';\nimport * as styles from './UserRepos.classNames';\nimport Pagination from '../Pagination/Pagination';\nimport { filterRepos } from './filterRepos';\nimport { getLanguages } from './getLanguages';\nimport { useRepoFilters } from '../RepoFilters/useRepoFilters';\nimport RepoFilters from '../RepoFilters/RepoFilters';\n\nexport interface UserReposViewProps {\n  repos: Repositories;\n  owner: string;\n}\n\nexport interface Repositories {\n  repos: Repo[];\n  pageInfo:\n    | {\n        __typename?: 'PageInfo' | undefined;\n        endCursor?: string | null | undefined;\n        startCursor?: string | null | undefined;\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n      }\n    | undefined;\n}\n\nfunction UserReposView({ repos, owner }: UserReposViewProps) {\n  const repoFilters = useRepoFilters();\n  const filteredRepos = filterRepos(repos.repos, repoFilters.state);\n  const languages = getLanguages(repos.repos);\n\n  return (\n    <>\n      <RepoFilters\n        {...repoFilters}\n        languages={languages}\n        resultCount={filteredRepos.length}\n      />\n      {filteredRepos.map(\n        ({\n          id,\n          name,\n          description,\n          stargazerCount,\n          forkCount,\n          language,\n          languageColor,\n          updatedAt,\n          isPrivate,\n        }) => (\n          <div key={id} className={styles.container}>\n            <div className={styles.content}>\n              <h3 className=\"mb-2\">\n                <Link to={`/${owner}/${name}`} className={styles.headingLink}>\n                  {name}\n                </Link>\n                <PrivacyBadge\n                  isPrivate={isPrivate}\n                  className=\"relative bottom-0.5\"\n                />\n              </h3>\n              <div className={styles.description}>{description}</div>\n              <RepoMeta\n                language={language}\n                languageColor={languageColor}\n                forkCount={forkCount}\n                stargazerCount={stargazerCount}\n                updatedAt={updatedAt}\n              />\n            </div>\n            <div className={styles.aside}>\n              <button className={styles.starBtn}>\n                <StarIcon className={styles.starIcon} />\n                Star\n              </button>\n            </div>\n          </div>\n        )\n      )}\n      {(repos.pageInfo?.hasNextPage || repos.pageInfo?.hasPreviousPage) && (\n        <Pagination pageInfo={repos.pageInfo} owner={owner} />\n      )}\n    </>\n  );\n}\n\nexport default UserReposView;\n", "export const container =\n  'py-8 border-b border-gray-200 first-of-type:border-t grid grid-cols-12 gap-x-4';\nexport const content = 'col-span-12 md:col-span-7';\nexport const headingLink =\n  'text-xl text-blue-600 font-semibold hover:underline mr-3';\nexport const description = 'text-gray-600 text-sm max-w-prose';\nexport const aside = 'col-span-12 md:col-span-5 flex items-start justify-end';\nexport const starBtn =\n  'relative inline-flex items-center px-3 py-1 rounded-md bg-gray-100 bg-opacity-75 border border-gray-300 text-sm font-medium text-gray-800 hover:bg-gray-200 hover:bg-opacity-50';\nexport const starIcon = 'w-4 h-4 text-gray-600 mr-1';\n", "import cn from 'classnames';\nimport * as styles from './Pagination.classNames';\n\ninterface PaginationProps {\n  pageInfo?: any;\n  owner: string;\n}\n\nfunction Pagination({ pageInfo, owner }: PaginationProps) {\n  if (!pageInfo) {\n    return null;\n  }\n\n  const prevUrl = `/${owner}?before=${pageInfo.startCursor}`;\n  const nextUrl = `/${owner}?after=${pageInfo.endCursor}`;\n\n  const handlePreviousClick = () => {\n    window.location.assign(prevUrl);\n  };\n\n  const handleNextClick = () => {\n    window.location.assign(nextUrl);\n  };\n\n  return (\n    <div className={styles.container}>\n      <span className={styles.group}>\n        <button\n          type=\"button\"\n          disabled={!pageInfo.hasPreviousPage || !pageInfo.startCursor}\n          onClick={handlePreviousClick}\n          className={\n            !pageInfo.hasPreviousPage || !pageInfo.startCursor\n              ? cn(styles.button, styles.buttonPrev)\n              : cn(styles.button, styles.buttonPrev)\n          }\n        >\n          Previous\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleNextClick}\n          disabled={!pageInfo.hasNextPage || !pageInfo.endCursor}\n          className={\n            !pageInfo.hasNextPage || !pageInfo.endCursor\n              ? cn(styles.button, styles.buttonNext)\n              : cn(styles.button, styles.buttonNext)\n          }\n        >\n          Next\n        </button>\n      </span>\n    </div>\n  );\n}\n\nexport default Pagination;\n", "export const container = 'flex items-center justify-center mt-4';\n\nexport const group = 'relative z-0 inline-flex shadow-sm rounded-md';\n\nexport const button =\n  'relative inline-flex items-center px-4 py-2 border border-gray-300 bg-gray-100 text-sm font-semibold text-blue-500 hover:bg-blue-500 hover:border-blue-500  hover:text-white focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 disabled:opacity-50 disabled:cursor-default disabled:hover:bg-gray-100 disabled:hover:text-blue-500 disabled:hover:border-gray-200 transition-colors duration-150 ease-in-out';\n\nexport const buttonPrev = 'rounded-l-lg';\n\nexport const buttonNext = 'rounded-r-lg';\n", "import {\n  FilterState,\n  RepositoryOrderField,\n} from '../RepoFilters/useRepoFilters';\n\nimport type { Repo } from './types';\nimport { TypeFilter } from '../RepoFilters/useRepoFilters';\n\nexport function filterRepos(repos: Repo[], state: FilterState) {\n  return repos.reduce((acc: Repo[], repo: Repo) => {\n    switch (state.type) {\n      case TypeFilter.FORKS:\n        if (!repo.isFork) {\n          return acc;\n        }\n        break;\n      case TypeFilter.ARCHIVED:\n        if (!repo.isArchived) {\n          return acc;\n        }\n    }\n\n    if (\n      state.language !== 'all' &&\n      repo.language?.toLocaleLowerCase() !== state.language\n    ) {\n      return acc;\n    }\n\n    if (\n      state.query !== '' &&\n      !repo.name.toLocaleLowerCase().includes(state.query.toLocaleLowerCase())\n    ) {\n      return acc;\n    }\n\n    // add individual filters above this line that depend on a repo-property and not the array of repos\n    // this sorts the repos array\n    switch (state.sort) {\n      case RepositoryOrderField.Name: {\n        return [...acc, repo].sort((a, b) => {\n          if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n            return -1;\n          }\n          if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n      case RepositoryOrderField.Stargazers: {\n        return [...acc, repo].sort((a, b) => {\n          if (a.stargazerCount < b.stargazerCount) {\n            return 1;\n          }\n          if (a.stargazerCount > b.stargazerCount) {\n            return -1;\n          }\n          return 0;\n        });\n      }\n    }\n\n    return [...acc, repo];\n  }, []);\n}\n", "import type { Repo } from './types';\n\ntype LanguageMap = { [key: string]: string };\n\nexport function getLanguages(repos: Repo[]) {\n  const initialValue: LanguageMap = { all: 'All' };\n\n  const languageMap = repos.reduce(\n    (acc: LanguageMap, repo: Repo) =>\n      repo.language\n        ? { ...acc, [repo.language.toLowerCase()]: repo.language }\n        : acc,\n    initialValue\n  );\n\n  return Object.entries(languageMap).map(([key, value]) => ({\n    value: key,\n    label: value,\n  }));\n}\n", "import * as styles from './RepoFilters.classNames';\n\nimport {\n  FiltersAPI,\n  LanguageFilter,\n  RepositoryOrderField,\n} from './useRepoFilters';\n\nimport FilterDropdown from './FilterDropdown';\nimport { TypeFilter } from './useRepoFilters';\nimport { XIcon } from '@heroicons/react/solid';\nimport cn from 'classnames';\nimport { useEffect } from 'react';\n\ntype RepoFiltersProps = {\n  languages: LanguageFilter[];\n  resultCount: number;\n} & FiltersAPI;\n\nfunction RepoFilters({\n  state,\n  changeSort,\n  changeLanguage,\n  changeType,\n  setLanguages,\n  setQuery,\n  resetFilters,\n  isQueryActive,\n  isTypeActive,\n  isLanguageActive,\n  isFiltersActive,\n  languages,\n  resultCount,\n}: RepoFiltersProps) {\n  useEffect(() => {\n    setLanguages(languages);\n  }, [languages, setLanguages]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className=\"grow\">\n          <input\n            role=\"search\"\n            type=\"search\"\n            name=\"search\"\n            id=\"search\"\n            value={state.query}\n            className={styles.searchInput}\n            placeholder=\"Find a repository..\"\n            onChange={(e) => setQuery(e.target.value)}\n          />\n        </div>\n        <div className={styles.filters}>\n          <div>\n            <FilterDropdown\n              name=\"Type\"\n              description=\"Select type\"\n              current={state.type}\n              items={[\n                {\n                  label: 'All',\n                  value: TypeFilter.ALL,\n                },\n                {\n                  label: 'Forks',\n                  value: TypeFilter.FORKS,\n                },\n                {\n                  label: 'Archived',\n                  value: TypeFilter.ARCHIVED,\n                },\n              ]}\n              onChange={changeType}\n            />\n          </div>\n          <div>\n            <FilterDropdown\n              name=\"Language\"\n              description=\"Select language\"\n              current={state.language}\n              items={languages}\n              onChange={changeLanguage}\n            />\n          </div>\n          <div>\n            <FilterDropdown\n              name=\"Sort\"\n              description=\"Select order\"\n              current={state.sort}\n              items={[\n                {\n                  value: RepositoryOrderField.UpdatedAt,\n                  label: 'Last updated',\n                },\n                { value: RepositoryOrderField.Name, label: 'Name' },\n                { value: RepositoryOrderField.Stargazers, label: 'Stars' },\n              ]}\n              onChange={changeSort}\n            />\n          </div>\n        </div>\n      </div>\n      {isFiltersActive && (\n        <div className={styles.filtersDetail}>\n          <div className=\"text-sm\">\n            <span className=\"font-semibold\" data-testid=\"filterText\">\n              {resultCount}\n            </span>{' '}\n            results for{' '}\n            {isTypeActive && (\n              <span className=\"font-semibold\">{state.type}</span>\n            )}{' '}\n            repositories{' '}\n            {isQueryActive && (\n              <>\n                matching <span className=\"font-semibold\">{state.query}</span>\n              </>\n            )}{' '}\n            {isLanguageActive && (\n              <>\n                written in{' '}\n                <span className=\"font-semibold capitalize\">\n                  {state.language}\n                </span>\n              </>\n            )}{' '}\n            sorted by{' '}\n            <span className=\"font-semibold\">\n              {state.sort.split('_').join(' ').toLowerCase()}\n            </span>\n          </div>\n          <div>\n            <button\n              onClick={resetFilters}\n              className={cn(styles.clearBtn, 'group')}\n            >\n              <span\n                className={cn(\n                  styles.clearBtnIconContainer,\n                  'group-hover:bg-blue-500'\n                )}\n              >\n                <XIcon className={styles.clearBtnIcon} />\n              </span>\n              <span\n                className={cn(styles.clearBtnText, 'group-hover:text-blue-500')}\n              >\n                Clear filter\n              </span>\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default RepoFilters;\n", "export const container = 'flex relative mb-4 space-x-4';\nexport const searchInput =\n  'border p-1.5 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md outline-none';\nexport const filters = 'flex items-center space-x-1.5';\nexport const filtersDetail = 'py-4 border-t flex items-center justify-between';\nexport const clearBtn = 'inline-flex items-center justify-center';\nexport const clearBtnIconContainer =\n  'p-0.5 rounded bg-gray-500 inline-flex items-center justify-center mr-2 group-hover:bg-blue-500';\nexport const clearBtnIcon = 'w-3.5 h-3.5 text-white';\nexport const clearBtnText = 'text-sm text-gray-500 group-hover:text-blue-500';\n", "import { Fragment } from 'react';\nimport { Menu, Transition } from '@headlessui/react';\nimport { ChevronDownIcon, XIcon, CheckIcon } from '@heroicons/react/solid';\nimport * as styles from './FilterDropdown.classNames';\n\ninterface Option {\n  label: string;\n  value: number | string;\n}\n\ninterface DropdownProps {\n  name: string;\n  description?: string;\n  current: number | string;\n  items: Option[];\n  onChange: (value: any) => void;\n}\n\nfunction Dropdown({\n  name,\n  description,\n  current,\n  items,\n  onChange,\n}: DropdownProps) {\n  return (\n    <Menu as=\"div\" className={styles.container}>\n      <div>\n        <Menu.Button className={styles.menuButton}>\n          {name}\n          <ChevronDownIcon\n            className={styles.menuButtonIcon}\n            aria-hidden=\"true\"\n          />\n        </Menu.Button>\n      </div>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className={styles.menu}>\n          <div>\n            {description && (\n              <div className={styles.menuHeader}>\n                <div className={styles.description}>{description}</div>\n                <Menu.Button>\n                  <XIcon\n                    className={styles.closeButtonIcon}\n                    aria-hidden=\"true\"\n                  />\n                </Menu.Button>\n              </div>\n            )}\n            {items.map(({ label, value }) => (\n              <Menu.Item key={value}>\n                <button\n                  type=\"button\"\n                  className={styles.itemButton}\n                  onClick={() => {\n                    onChange(value);\n                  }}\n                >\n                  {value === current && (\n                    <CheckIcon className={styles.itemActiveIcon} />\n                  )}{' '}\n                  {label}\n                </button>\n              </Menu.Item>\n            ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n}\n\nexport default Dropdown;\n", "export const container = 'relative inline-block text-left z-30';\nexport const menuButton =\n  'relative inline-flex items-center px-4 py-1.5 rounded-md bg-gray-100 bg-opacity-75 border border-gray-300 text-sm font-medium text-gray-800 hover:bg-gray-200 hover:bg-opacity-50';\nexport const menuButtonIcon = '-mr-1 ml-1 mt-0.5 h-4 w-4';\nexport const menu =\n  'border border-gray-300 origin-top-right absolute right-0 mt-2 w-72 rounded-md shadow-sm bg-white ring-1 ring-black ring-opacity-5 focus:outline-none';\nexport const menuHeader = 'flex justify-between items-center';\nexport const description = 'px-4 py-2.5 text-xs text-gray-800 font-semibold';\nexport const closeButtonIcon = 'mr-2 h-4 w-4 text-gray-600';\nexport const itemButton =\n  'relative w-full text-left text-xs py-2 px-10 border-t border-gray-300 hover:bg-gray-100 capitalize';\nexport const itemActiveIcon = 'inline w-4 h-4 absolute left-4';\n", "export const container = 'relative pt-8';\nexport const stickyNav =\n  'border-b border-gray-200 sticky top-0 bg-white z-20  hidden md:block';\nexport const gridNav = 'grid grid-cols-12 gap-8 max-w-screen-2xl mx-auto';\nexport const profileNav = 'col-span-12 md:col-span-8 xl:col-span-9';\n"],
  "mappings": "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",
  "names": []
}
