{
  "version": 3,
  "sources": ["../../../app/components/FileExplorerNav/FileExplorerNav.tsx", "../../../app/components/FileExplorerNav/FileExplorerNav.classNames.ts", "../../../app/lib/pathUtils.ts"],
  "sourcesContent": ["import { GitBranchIcon } from '../Icons';\nimport { Link } from '@remix-run/react';\nimport { useRepo } from '../../context/RepoContext';\nimport * as styles from './FileExplorerNav.classNames';\nimport { removePathPart } from '../../lib/pathUtils';\n\nfunction RepoNavigation() {\n  const { name, owner, path, branch } = useRepo();\n  const crumbs = path.split('/').filter(Boolean);\n  return (\n    <nav className={styles.container}>\n      <button className={styles.btn}>\n        <GitBranchIcon className={styles.btnIcon} /> {branch}{' '}\n        <span className={styles.btnCaret}>{'\\u25BC'}</span>\n      </button>\n      {crumbs.length > 0 && (\n        <div className={styles.crumbs}>\n          <Link to={`/${owner}/${name}`} className={styles.rootLink}>\n            {name}\n          </Link>\n          <span className={styles.separator}>/</span>\n          {crumbs.map((crumb, i) => {\n            const isLast = i === crumbs.length - 1;\n            const crumbPath = removePathPart(crumbs, i);\n            const href = `${owner}/${name}/tree/${branch}/${crumbPath}`;\n            return (\n              <>\n                {isLast ? (\n                  <span className={styles.crumbEnd}>{crumb}</span>\n                ) : (\n                  <>\n                    <Link\n                      to={`/${href}`}\n                      prefetch=\"intent\"\n                      className={styles.crumbLink}\n                    >\n                      {crumb}\n                    </Link>\n                    <span className={styles.separator}>/</span>\n                  </>\n                )}\n              </>\n            );\n          })}\n        </div>\n      )}\n    </nav>\n  );\n}\n\nexport default RepoNavigation;\n", "export const container = 'my-6 flex items-center';\nexport const btn =\n  'relative inline-flex items-center px-4 py-1 rounded-md bg-gray-50 border border-gray-300 font-medium text-gray-700 hover:bg-gray-200 hover:bg-opacity-50';\nexport const btnIcon = 'w-5 h-5 text-gray-600 mr-1';\nexport const btnCaret = 'text-[10px] text-gray-600 ml-1.5 mt-0.5';\nexport const separator = 'text-lg text-gray-800 leading-snug mx-1.5';\nexport const rootLink = 'font-semibold text-blue-600 hover:underline';\nexport const crumbs = 'flex px-3';\nexport const crumbLink = 'text-blue-600 hover:underline';\nexport const crumbEnd = 'font-semibold';\n", "export function removeLastPathPart(path: string) {\n  const pathParts = path.split('/');\n  return pathParts.slice(0, pathParts.length - 1).join('/');\n}\n\nexport function removePathPart(path: string[], index: number) {\n  return path.slice(0, index + 1).join('/');\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA;;;ACAA;AAAO,IAAM,YAAY;AAClB,IAAM,MACX;AACK,IAAM,UAAU;AAChB,IAAM,WAAW;AACjB,IAAM,YAAY;AAClB,IAAM,WAAW;AACjB,IAAM,SAAS;AACf,IAAM,YAAY;AAClB,IAAM,WAAW;;;ACTxB;AAAO,4BAA4B,MAAc;AAC/C,QAAM,YAAY,KAAK,MAAM;AAC7B,SAAO,UAAU,MAAM,GAAG,UAAU,SAAS,GAAG,KAAK;AAAA;AAGhD,wBAAwB,MAAgB,OAAe;AAC5D,SAAO,KAAK,MAAM,GAAG,QAAQ,GAAG,KAAK;AAAA;;;AFAvC,0BAA0B;AACxB,QAAM,EAAE,MAAM,OAAO,MAAM,WAAW;AACtC,QAAM,UAAS,KAAK,MAAM,KAAK,OAAO;AACtC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,UAAD;AAAA,IAAQ,WAAkB;AAAA,KACxB,oCAAC,uBAAD;AAAA,IAAe,WAAkB;AAAA,MAAW,KAAE,QAAQ,KACtD,oCAAC,QAAD;AAAA,IAAM,WAAkB;AAAA,KAAW,YAEpC,QAAO,SAAS,KACf,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,MAAD;AAAA,IAAM,IAAI,IAAI,SAAS;AAAA,IAAQ,WAAkB;AAAA,KAC9C,OAEH,oCAAC,QAAD;AAAA,IAAM,WAAkB;AAAA,KAAW,MAClC,QAAO,IAAI,CAAC,OAAO,MAAM;AACxB,UAAM,SAAS,MAAM,QAAO,SAAS;AACrC,UAAM,YAAY,eAAe,SAAQ;AACzC,UAAM,OAAO,GAAG,SAAS,aAAa,UAAU;AAChD,WACE,0DACG,SACC,oCAAC,QAAD;AAAA,MAAM,WAAkB;AAAA,OAAW,SAEnC,0DACE,oCAAC,MAAD;AAAA,MACE,IAAI,IAAI;AAAA,MACR,UAAS;AAAA,MACT,WAAkB;AAAA,OAEjB,QAEH,oCAAC,QAAD;AAAA,MAAM,WAAkB;AAAA,OAAW;AAAA;AAAA;AAYvD,IAAO,0BAAQ;",
  "names": []
}
