service: starter-dev-backend
frameworkVersion: '3'
useDotenv: true

plugins:
  # - serverless-domain-manager
  - serverless-esbuild
  - serverless-offline

custom:
  # customDomain: # serverless-domain-manager
  #   domainName: api.${opt:stage}.starter.dev
  #   stage: ${opt:stage}
  #   endpointType: 'regional'
  #   apiType: http
  #   certificateName: '*.starter.dev'

  serverless-offline: # serverless-offline
    httpPort: 4000

provider:
  name: aws
  profile: starterdev
  runtime: nodejs14.x
  environment:
    COOKIE_SECRET: ${ssm:/COOKIE_SECRET, env:COOKIE_SECRET}
    CORS_REGEXP: ${ssm:/CORS_REGEXP, env:CORS_REGEXP}
    GITHUB_CLIENT_ID: ${ssm:/GITHUB_CLIENT_ID, env:X_GITHUB_CLIENT_ID}
    GITHUB_CLIENT_SECRET: ${ssm:/GITHUB_CLIENT_SECRET, env:X_GITHUB_CLIENT_SECRET}
    GITHUB_OAUTH_URL: ${ssm:/GITHUB_OAUTH_URL, env:X_GITHUB_OAUTH_URL}
    SERVER_BASE_URL: ${ssm:/SERVER_BASE_URL, env:SERVER_BASE_URL}
    PR_PREVIEW_REGEXP: ${ssm:/PR_PREVIEW_REGEXP, env:PR_PREVIEW_REGEXP}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'
  graphql:
    handler: handlers/graphql.server
    events:
      - http:
          path: graphql
          method: post
      - http:
          path: graphql
          method: get
