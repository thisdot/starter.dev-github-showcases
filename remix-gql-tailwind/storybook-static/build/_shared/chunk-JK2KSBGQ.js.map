{
  "version": 3,
  "sources": ["../../../app/context/RepoContext.tsx", "../../../app/components/RepoHeader/RepoHeader.tsx", "../../../app/components/RepoHeading/RepoHeading.tsx", "../../../app/components/RepoHeading/PrivacyIcon.tsx", "../../../app/components/RepoHeading/RepoHeading.classNames.ts", "../../../app/components/RepoActionButtons/RepoActionButtons.tsx", "../../../app/components/RepoActionButtons/CountButtonGroup.tsx", "../../../app/components/RepoActionButtons/RepoActionButtons.classNames.ts", "../../../app/components/RepoHeader/RepoHeader.classNames.ts", "../../../app/components/RepoHeader/tabList.tsx"],
  "sourcesContent": ["import type { ReactNode } from 'react';\nimport { createContext, useContext } from 'react';\n\nexport interface RepoContext {\n  name: string;\n  owner: string;\n  branch: string;\n  path: string;\n  pathname: string;\n  isRepoLoading?: boolean;\n  data?: {\n    isPrivate: boolean;\n    stargazerCount: number;\n    forkCount: number;\n    watcherCount: number;\n    openIssueCount: number;\n    openPullRequestCount: number;\n    description?: string | null;\n    homepageUrl?: string | null;\n    topics: string[];\n    isOrg: boolean;\n  };\n}\n\ninterface RepoProviderProps {\n  children: ReactNode;\n  value: RepoContext;\n}\n\nexport const RepoContext = createContext<RepoContext | undefined>(undefined);\n\nexport function RepoProvider({ children, value }: RepoProviderProps) {\n  return (\n    <RepoContext.Provider\n      value={{\n        isRepoLoading: false,\n        ...value,\n      }}\n    >\n      {children}\n    </RepoContext.Provider>\n  );\n}\n\nexport function useRepo() {\n  const context = useContext(RepoContext);\n  if (context === undefined) {\n    throw new Error('useRepo must be used within a RepoPage');\n  }\n  return context;\n}\n", "import RepoHeading from '../RepoHeading/RepoHeading';\nimport RepoActionButtons from '../RepoActionButtons/RepoActionButtons';\nimport TabNavigation from '../TabNavigation/TabNavigation';\nimport * as styles from './RepoHeader.classNames';\nimport { createTabList } from './tabList';\nimport { useRepo } from '../../context/RepoContext';\n\nfunction RepoHeader() {\n  const repo = useRepo();\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.topRow}>\n        <RepoHeading />\n        <RepoActionButtons />\n      </div>\n      <div className={styles.bottomRow}>\n        <TabNavigation\n          tabs={createTabList({\n            issueCount: repo.data?.openIssueCount,\n            pullRequestCount: repo.data?.openPullRequestCount,\n          })}\n          basePath={`${repo.owner}/${repo.name}`}\n          pathname={repo.pathname}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default RepoHeader;\n", "import { Link } from '@remix-run/react';\nimport { useRepo } from '../../context/RepoContext';\nimport PrivacyIcon from './PrivacyIcon';\nimport PrivacyBadge from '../PrivacyBadge/PrivacyBadge';\nimport * as styles from './RepoHeading.classNames';\n\nfunction RepoHeading() {\n  const { owner, name, data } = useRepo();\n  return (\n    <h1 className={styles.heading}>\n      <PrivacyIcon isPrivate={data?.isPrivate} />\n      <span className={styles.navContainer}>\n        <Link\n          to={data?.isOrg ? `/orgs/${owner}` : `/${owner}`}\n          className={styles.ownerLink}\n        >\n          {owner}\n        </Link>\n        <span className={styles.separator}>/</span>\n        <Link to={`/${owner}/${name}`} className={styles.nameLink}>\n          {name}\n        </Link>\n      </span>\n      {data ? (\n        <PrivacyBadge isPrivate={data.isPrivate} />\n      ) : (\n        <div className={styles.badgePlaceholder} />\n      )}\n    </h1>\n  );\n}\n\nexport default RepoHeading;\n", "import { LockClosedIcon } from '@heroicons/react/outline';\nimport { GitRepoIcon } from '../Icons';\nimport * as styles from './RepoHeading.classNames';\n\ninterface PrivacyIconProps {\n  isPrivate?: boolean;\n}\n\nfunction PrivacyIcon({ isPrivate }: PrivacyIconProps) {\n  if (isPrivate === undefined) {\n    return <div className={styles.iconPlaceholder} />;\n  }\n\n  return isPrivate ? (\n    <LockClosedIcon className={styles.privacyIcon} />\n  ) : (\n    <GitRepoIcon className={styles.privacyIcon} />\n  );\n}\n\nexport default PrivacyIcon;\n", "export const heading = 'space-x-2.5 flex items-center text-xl';\n\nexport const navContainer = 'space-x-1.5 mb-0.5';\n\nexport const ownerLink = 'text-blue-600 hover:underline';\n\nexport const nameLink = 'text-blue-600 font-semibold hover:underline';\n\nexport const separator = 'text-gray-600';\n\nexport const privacyIcon = 'w-6 h-6 text-gray-600';\n\nexport const iconPlaceholder = 'w-6 h-6 bg-gray-200 opacity-25 rounded-lg';\n\nexport const badgePlaceholder = 'w-8 h-6 bg-gray-200 opacity-25 rounded-xl';\n", "import { EyeIcon, GitBranchIcon } from '../Icons';\nimport { StarIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport CountButtonGroup from './CountButtonGroup';\nimport * as styles from './RepoActionButtons.classNames';\n\nfunction RepoActionButtons() {\n  const { data } = useRepo();\n  return (\n    <div className={styles.container}>\n      <CountButtonGroup count={data?.watcherCount}>\n        <EyeIcon className={styles.btnIcon} />\n        Watch\n      </CountButtonGroup>\n      <CountButtonGroup count={data?.stargazerCount}>\n        <StarIcon className={styles.btnIcon} />\n        Star\n      </CountButtonGroup>\n      <CountButtonGroup count={data?.forkCount}>\n        <GitBranchIcon className={styles.btnIcon} />\n        Fork\n      </CountButtonGroup>\n    </div>\n  );\n}\n\nexport default RepoActionButtons;\n", "import type { ReactNode } from 'react';\nimport * as styles from './RepoActionButtons.classNames';\n\ninterface CountButtonGroupProps {\n  children: ReactNode;\n  count?: number;\n}\n\nconst formatCountString = (count: number) => {\n  let countText = `${count}`;\n  if (count && count > 1000) {\n    let digits = countText.split('');\n    digits.splice(digits.length - 3, 3);\n    countText = `${digits.join('')}k`;\n  }\n  return countText;\n};\n\nfunction CountButtonGroup({ children, count = 0 }: CountButtonGroupProps) {\n  let countText = formatCountString(count);\n  return (\n    <span className={styles.btnGroup}>\n      <button type=\"button\" className={styles.btnMain}>\n        {children}\n      </button>\n      <button type=\"button\" className={styles.btnSide}>\n        {countText}\n      </button>\n    </span>\n  );\n}\n\nexport default CountButtonGroup;\n", "export const container = 'flex flex-wrap items-center justify-start';\n\nexport const btnGroup =\n  'relative z-0 inline-flex shadow-sm rounded-md mx-2 my-1';\n\nexport const btnMain =\n  'relative inline-flex items-center px-4 py-1.5 rounded-l-md border border-gray-300 bg-transparent text-xs font-medium text-gray-700 hover:bg-gray-200 hover:bg-opacity-25';\n\nexport const btnSide =\n  '-ml-px relative inline-flex items-center px-3 py-1.5 rounded-r-md border border-gray-300 bg-white text-xs font-semibold text-gray-700 hover:text-blue-600';\n\nexport const btnIcon = '-ml-1 mr-1 h-4 w-4 text-gray-600';\n", "export const wrapper = 'pt-6 px-12 bg-gray-100 border-b border-gray-300';\n\nexport const topRow =\n  'flex flex-col space-y-8 lg:space-y-0 lg:flex-row lg:items-center justify-between';\n\nexport const bottomRow = 'mt-6';\n", "import type { TabItem } from '../TabNavigation/types';\nimport { CodeIcon, InformationCircleIcon } from '@heroicons/react/outline';\nimport { PullRequestIcon } from '../Icons';\n\nexport function createTabList({\n  issueCount = 0,\n  pullRequestCount = 0,\n}: {\n  issueCount?: number;\n  pullRequestCount?: number;\n}): TabItem[] {\n  return [\n    {\n      title: 'Code',\n      path: '',\n      Icon: CodeIcon,\n    },\n    {\n      title: 'Issues',\n      path: 'issues',\n      Icon: InformationCircleIcon,\n      count: issueCount,\n    },\n    {\n      title: 'Pull Requests',\n      path: 'pulls',\n      Icon: PullRequestIcon,\n      count: pullRequestCount,\n    },\n  ];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,mBAA0C;AA4BnC,IAAM,cAAc,gCAAuC;AAE3D,sBAAsB,EAAE,UAAU,SAA4B;AACnE,SACE,oCAAC,YAAY,UAAb;AAAA,IACE,OAAO;AAAA,MACL,eAAe;AAAA,SACZ;AAAA;AAAA,KAGJ;AAAA;AAKA,mBAAmB;AACxB,QAAM,UAAU,6BAAW;AAC3B,MAAI,YAAY,QAAW;AACzB,UAAM,IAAI,MAAM;AAAA;AAElB,SAAO;AAAA;;;ACjDT;;;ACAA;;;ACAA;;;ACAA;AAAO,IAAM,UAAU;AAEhB,IAAM,eAAe;AAErB,IAAM,YAAY;AAElB,IAAM,WAAW;AAEjB,IAAM,YAAY;AAElB,IAAM,cAAc;AAEpB,IAAM,kBAAkB;AAExB,IAAM,mBAAmB;;;ADNhC,qBAAqB,EAAE,aAA+B;AACpD,MAAI,cAAc,QAAW;AAC3B,WAAO,oCAAC,OAAD;AAAA,MAAK,WAAkB;AAAA;AAAA;AAGhC,SAAO,YACL,oCAAC,wBAAD;AAAA,IAAgB,WAAkB;AAAA,OAElC,oCAAC,qBAAD;AAAA,IAAa,WAAkB;AAAA;AAAA;AAInC,IAAO,sBAAQ;;;ADdf,uBAAuB;AACrB,QAAM,EAAE,OAAO,MAAM,SAAS;AAC9B,SACE,oCAAC,MAAD;AAAA,IAAI,WAAkB;AAAA,KACpB,oCAAC,qBAAD;AAAA,IAAa,WAAW,6BAAM;AAAA,MAC9B,oCAAC,QAAD;AAAA,IAAM,WAAkB;AAAA,KACtB,oCAAC,MAAD;AAAA,IACE,IAAI,8BAAM,SAAQ,SAAS,UAAU,IAAI;AAAA,IACzC,WAAkB;AAAA,KAEjB,QAEH,oCAAC,QAAD;AAAA,IAAM,WAAkB;AAAA,KAAW,MACnC,oCAAC,MAAD;AAAA,IAAM,IAAI,IAAI,SAAS;AAAA,IAAQ,WAAkB;AAAA,KAC9C,QAGJ,OACC,oCAAC,sBAAD;AAAA,IAAc,WAAW,KAAK;AAAA,OAE9B,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA;AAAA;AAM/B,IAAO,sBAAQ;;;AGhCf;;;ACAA;;;ACAA;AAAO,IAAM,YAAY;AAElB,IAAM,WACX;AAEK,IAAM,UACX;AAEK,IAAM,UACX;AAEK,IAAM,UAAU;;;ADHvB,IAAM,oBAAoB,CAAC,UAAkB;AAC3C,MAAI,YAAY,GAAG;AACnB,MAAI,SAAS,QAAQ,KAAM;AACzB,QAAI,SAAS,UAAU,MAAM;AAC7B,WAAO,OAAO,OAAO,SAAS,GAAG;AACjC,gBAAY,GAAG,OAAO,KAAK;AAAA;AAE7B,SAAO;AAAA;AAGT,0BAA0B,EAAE,UAAU,QAAQ,KAA4B;AACxE,MAAI,YAAY,kBAAkB;AAClC,SACE,oCAAC,QAAD;AAAA,IAAM,WAAkB;AAAA,KACtB,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAkB;AAAA,KACrC,WAEH,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAkB;AAAA,KACrC;AAAA;AAMT,IAAO,2BAAQ;;;AD1Bf,6BAA6B;AAC3B,QAAM,EAAE,SAAS;AACjB,SACE,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,0BAAD;AAAA,IAAkB,OAAO,6BAAM;AAAA,KAC7B,oCAAC,iBAAD;AAAA,IAAS,WAAkB;AAAA,MAAW,UAGxC,oCAAC,0BAAD;AAAA,IAAkB,OAAO,6BAAM;AAAA,KAC7B,oCAAC,kBAAD;AAAA,IAAU,WAAkB;AAAA,MAAW,SAGzC,oCAAC,0BAAD;AAAA,IAAkB,OAAO,6BAAM;AAAA,KAC7B,oCAAC,uBAAD;AAAA,IAAe,WAAkB;AAAA,MAAW;AAAA;AAOpD,IAAO,4BAAQ;;;AG1Bf;AAAO,IAAM,UAAU;AAEhB,IAAM,SACX;AAEK,IAAM,YAAY;;;ACLzB;AAIO,uBAAuB;AAAA,EAC5B,aAAa;AAAA,EACb,mBAAmB;AAAA,GAIP;AACZ,SAAO;AAAA,IACL;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA;AAAA,IAET;AAAA,MACE,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA;AAAA;AAAA;;;ARpBb,sBAAsB;AAPtB;AAQE,QAAM,OAAO;AACb,SACE,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,qBAAD,OACA,oCAAC,2BAAD,QAEF,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,uBAAD;AAAA,IACE,MAAM,cAAc;AAAA,MAClB,YAAY,WAAK,SAAL,mBAAW;AAAA,MACvB,kBAAkB,WAAK,SAAL,mBAAW;AAAA;AAAA,IAE/B,UAAU,GAAG,KAAK,SAAS,KAAK;AAAA,IAChC,UAAU,KAAK;AAAA;AAAA;AAOzB,IAAO,qBAAQ;",
  "names": []
}
