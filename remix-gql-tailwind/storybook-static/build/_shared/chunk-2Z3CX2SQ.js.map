{
  "version": 3,
  "sources": ["../../../node_modules/@headlessui/react/dist/_virtual/_rollupPluginBabelHelpers.js", "../../../node_modules/@headlessui/react/src/utils/match.ts", "../../../node_modules/@headlessui/react/src/utils/render.ts", "../../../node_modules/@headlessui/react/src/hooks/use-sync-refs.ts", "../../../node_modules/@headlessui/react/src/components/keyboard.ts", "../../../node_modules/@headlessui/react/src/utils/bugs.ts", "../../../node_modules/@headlessui/react/src/hooks/use-iso-morphic-effect.ts", "../../../node_modules/@headlessui/react/src/hooks/use-server-handoff-complete.ts", "../../../node_modules/@headlessui/react/src/hooks/use-id.ts", "../../../node_modules/@headlessui/react/src/utils/focus-management.ts", "../../../node_modules/@headlessui/react/src/hooks/use-window-event.ts", "../../../node_modules/@headlessui/react/src/internal/open-closed.tsx", "../../../node_modules/@headlessui/react/src/hooks/use-resolve-button-type.ts", "../../../node_modules/@headlessui/react/src/utils/disposables.ts", "../../../node_modules/@headlessui/react/src/hooks/use-disposables.ts", "../../../node_modules/@headlessui/react/src/utils/calculate-active-index.ts", "../../../node_modules/@headlessui/react/src/hooks/use-tree-walker.ts", "../../../node_modules/@headlessui/react/src/components/menu/menu.tsx", "../../../node_modules/@headlessui/react/src/hooks/use-is-mounted.ts", "../../../node_modules/@headlessui/react/src/hooks/use-is-initial-render.ts", "../../../node_modules/@headlessui/react/src/utils/once.ts", "../../../node_modules/@headlessui/react/src/components/transitions/utils/transition.ts", "../../../node_modules/@headlessui/react/src/components/transitions/transition.tsx", "../../../node_modules/@headlessui/react/dist/index.esm.js"],
  "sourcesContent": ["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  it = o[Symbol.iterator]();\n  return it.next.bind(it);\n}\n\nexport { _arrayLikeToArray as arrayLikeToArray, _createForOfIteratorHelperLoose as createForOfIteratorHelperLoose, _extends as extends, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _unsupportedIterableToArray as unsupportedIterableToArray };\n//# sourceMappingURL=_rollupPluginBabelHelpers.js.map\n", "export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n", "import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n", "import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType | null> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n", "// TODO: This must already exist somewhere, right? \uD83E\uDD14\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n", "// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n", "import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n", "import { useState, useEffect } from 'react'\n\nlet state = { serverHandoffComplete: false }\n\nexport function useServerHandoffComplete() {\n  let [serverHandoffComplete, setServerHandoffComplete] = useState(state.serverHandoffComplete)\n\n  useEffect(() => {\n    if (serverHandoffComplete === true) return\n\n    setServerHandoffComplete(true)\n  }, [serverHandoffComplete])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return serverHandoffComplete\n}\n", "import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n", "import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  /** Something went wrong while trying to focus. */\n  Error,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n  Overflow,\n\n  /** Focus was successful. */\n  Success,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container)\n    ? container.slice().sort((a, b) => {\n        let position = a.compareDocumentPosition(b)\n\n        if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n        if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n        return 0\n      })\n    : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n", "import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n", "import { useState, MutableRefObject } from 'react'\n\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nfunction resolveType<TTag>(props: { type?: string; as?: TTag }) {\n  if (props.type) return props.type\n\n  let tag = props.as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType<TTag>(\n  props: { type?: string; as?: TTag },\n  ref: MutableRefObject<HTMLElement | null>\n) {\n  let [type, setType] = useState(() => resolveType(props))\n\n  useIsoMorphicEffect(() => {\n    setType(resolveType(props))\n  }, [props.type, props.as])\n\n  useIsoMorphicEffect(() => {\n    if (type) return\n    if (!ref.current) return\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button')\n    }\n  }, [type, ref])\n\n  return type\n}\n", "export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n", "import { useState, useEffect } from 'react'\n\nimport { disposables } from '../utils/disposables'\n\nexport function useDisposables() {\n  // Using useState instead of useRef so that we can use the initializer function.\n  let [d] = useState(disposables)\n  useEffect(() => () => d.dispose(), [d])\n  return d\n}\n", "function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n", "import { useRef, useEffect } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled = true,\n}: {\n  container: HTMLElement | null\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: boolean\n}) {\n  let acceptRef = useRef(accept)\n  let walkRef = useRef(walk)\n\n  useEffect(() => {\n    acceptRef.current = accept\n    walkRef.current = walk\n  }, [accept, walk])\n\n  useIsoMorphicEffect(() => {\n    if (!container) return\n    if (!enabled) return\n\n    let accept = acceptRef.current\n    let walk = walkRef.current\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  }, [container, enabled, acceptRef, walkRef])\n}\n", "// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton\nimport React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { disposables } from '../../utils/disposables'\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\ntype MenuItemDataRef = MutableRefObject<{ textValue?: string; disabled: boolean }>\n\ninterface StateDefinition {\n  menuState: MenuStates\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  itemsRef: MutableRefObject<HTMLDivElement | null>\n  items: { id: string; dataRef: MenuItemDataRef }[]\n  searchQuery: string\n  activeItemIndex: number | null\n}\n\nenum ActionTypes {\n  OpenMenu,\n  CloseMenu,\n\n  GoToItem,\n  Search,\n  ClearSearch,\n  RegisterItem,\n  UnregisterItem,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseMenu }\n  | { type: ActionTypes.OpenMenu }\n  | { type: ActionTypes.GoToItem; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToItem; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterItem; id: string; dataRef: MenuItemDataRef }\n  | { type: ActionTypes.UnregisterItem; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseMenu](state) {\n    if (state.menuState === MenuStates.Closed) return state\n    return { ...state, activeItemIndex: null, menuState: MenuStates.Closed }\n  },\n  [ActionTypes.OpenMenu](state) {\n    if (state.menuState === MenuStates.Open) return state\n    return { ...state, menuState: MenuStates.Open }\n  },\n  [ActionTypes.GoToItem]: (state, action) => {\n    let activeItemIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.items,\n      resolveActiveIndex: () => state.activeItemIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeItemIndex === activeItemIndex) return state\n    return { ...state, searchQuery: '', activeItemIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.items.findIndex(\n      item =>\n        item.dataRef.current.textValue?.startsWith(searchQuery) && !item.dataRef.current.disabled\n    )\n\n    if (match === -1 || match === state.activeItemIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeItemIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterItem]: (state, action) => ({\n    ...state,\n    items: [...state.items, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterItem]: (state, action) => {\n    let nextItems = state.items.slice()\n    let currentActiveItem = state.activeItemIndex !== null ? nextItems[state.activeItemIndex] : null\n\n    let idx = nextItems.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextItems.splice(idx, 1)\n\n    return {\n      ...state,\n      items: nextItems,\n      activeItemIndex: (() => {\n        if (idx === state.activeItemIndex) return null\n        if (currentActiveItem === null) return null\n\n        // If we removed the item before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextItems.indexOf(currentActiveItem)\n      })(),\n    }\n  },\n}\n\nlet MenuContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nMenuContext.displayName = 'MenuContext'\n\nfunction useMenuContext(component: string) {\n  let context = useContext(MenuContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Menu.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_MENU_TAG = Fragment\ninterface MenuRenderPropArg {\n  open: boolean\n}\n\nexport function Menu<TTag extends ElementType = typeof DEFAULT_MENU_TAG>(\n  props: Props<TTag, MenuRenderPropArg>\n) {\n  let reducerBag = useReducer(stateReducer, {\n    menuState: MenuStates.Closed,\n    buttonRef: createRef(),\n    itemsRef: createRef(),\n    items: [],\n    searchQuery: '',\n    activeItemIndex: null,\n  } as StateDefinition)\n  let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (menuState !== MenuStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (itemsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseMenu })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<MenuRenderPropArg>(() => ({ open: menuState === MenuStates.Open }), [\n    menuState,\n  ])\n\n  return (\n    <MenuContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(menuState, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })}\n      >\n        {render({ props, slot, defaultTag: DEFAULT_MENU_TAG, name: 'Menu' })}\n      </OpenClosedProvider>\n    </MenuContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-menu-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.First }))\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.OpenMenu })\n          d.nextFrame(() => dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last }))\n          break\n      }\n    },\n    [dispatch, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (props.disabled) return\n      if (state.menuState === MenuStates.Open) {\n        dispatch({ type: ActionTypes.CloseMenu })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        dispatch({ type: ActionTypes.OpenMenu })\n      }\n    },\n    [dispatch, d, state, props.disabled]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': state.itemsRef.current?.id,\n    'aria-expanded': props.disabled ? undefined : state.menuState === MenuStates.Open,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Menu.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEMS_TAG = 'div' as const\ninterface ItemsRenderPropArg {\n  open: boolean\n}\ntype ItemsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet ItemsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Items = forwardRefWithAs(function Items<TTag extends ElementType = typeof DEFAULT_ITEMS_TAG>(\n  props: Props<TTag, ItemsRenderPropArg, ItemsPropsWeControl> &\n    PropsForFeatures<typeof ItemsRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [state, dispatch] = useMenuContext([Menu.name, Items.name].join('.'))\n  let itemsRef = useSyncRefs(state.itemsRef, ref)\n\n  let id = `headlessui-menu-items-${useId()}`\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.menuState === MenuStates.Open\n  })()\n\n  useEffect(() => {\n    let container = state.itemsRef.current\n    if (!container) return\n    if (state.menuState !== MenuStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.menuState, state.itemsRef])\n\n  useTreeWalker({\n    container: state.itemsRef.current,\n    enabled: state.menuState === MenuStates.Open,\n    accept(node) {\n      if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n      if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n      return NodeFilter.FILTER_ACCEPT\n    },\n    walk(node) {\n      node.setAttribute('role', 'none')\n    },\n  })\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLDivElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          if (state.activeItemIndex !== null) {\n            let { id } = state.items[state.activeItemIndex]\n            document.getElementById(id)?.click()\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Next })\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseMenu })\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [dispatch, searchDisposables, state]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let slot = useMemo<ItemsRenderPropArg>(() => ({ open: state.menuState === MenuStates.Open }), [\n    state,\n  ])\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeItemIndex === null ? undefined : state.items[state.activeItemIndex]?.id,\n    'aria-labelledby': state.buttonRef.current?.id,\n    id,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    role: 'menu',\n    tabIndex: 0,\n    ref: itemsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEMS_TAG,\n    features: ItemsRenderFeatures,\n    visible,\n    name: 'Menu.Items',\n  })\n})\n\n// ---\n\nlet DEFAULT_ITEM_TAG = Fragment\ninterface ItemRenderPropArg {\n  active: boolean\n  disabled: boolean\n}\ntype MenuItemPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'onPointerLeave'\n  | 'onPointerMove'\n  | 'onMouseLeave'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Item<TTag extends ElementType = typeof DEFAULT_ITEM_TAG>(\n  props: Props<TTag, ItemRenderPropArg, MenuItemPropsWeControl> & {\n    disabled?: boolean\n    onClick?: (event: { preventDefault: Function }) => void\n  }\n) {\n  let { disabled = false, onClick, ...passthroughProps } = props\n  let [state, dispatch] = useMenuContext([Menu.name, Item.name].join('.'))\n  let id = `headlessui-menu-item-${useId()}`\n  let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false\n\n  useIsoMorphicEffect(() => {\n    if (state.menuState !== MenuStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.menuState])\n\n  let bag = useRef<MenuItemDataRef['current']>({ disabled })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterItem, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterItem, id })\n  }, [bag, id])\n\n  let handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (disabled) return event.preventDefault()\n      dispatch({ type: ActionTypes.CloseMenu })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      if (onClick) return onClick(event)\n    },\n    [dispatch, state.buttonRef, disabled, onClick]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToItem, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<ItemRenderPropArg>(() => ({ active, disabled }), [active, disabled])\n  let propsWeControl = {\n    id,\n    role: 'menuitem',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_ITEM_TAG,\n    name: 'Menu.Item',\n  })\n}\n\n// ---\n\nMenu.Button = Button\nMenu.Items = Items\nMenu.Item = Item\n", "import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(false)\n\n  useEffect(() => {\n    mounted.current = true\n\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n", "import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n", "export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n", "import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n", "import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n  initial: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  entered?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    entered,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear, initial } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let enteredClasses = useSplitClasses(entered)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  let ready = useServerHandoffComplete()\n\n  useEffect(() => {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state, ready])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      <OpenClosedProvider\n        value={match(state, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })}\n      >\n        {render({\n          props: { ...passthroughProps, ...propsWeControl },\n          defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition.Child',\n        })}\n      </OpenClosedProvider>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show?: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  let usesOpenClosedState = useOpenClosed()\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    show = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  if (![true, false].includes((show as unknown) as boolean)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show: show as boolean, appear: appear || !initial, initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = function Child<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let hasTransitionContext = useContext(TransitionContext) !== null\n  let hasOpenClosedContext = useOpenClosed() !== null\n\n  return !hasTransitionContext && hasOpenClosedContext ? (\n    <Transition {...props} />\n  ) : (\n    <TransitionChild {...props} />\n  )\n}\nTransition.Root = Transition\n", "export { Portal } from './components/portal/portal.esm.js';\nexport { Dialog } from './components/dialog/dialog.esm.js';\nexport { Disclosure } from './components/disclosure/disclosure.esm.js';\nexport { FocusTrap } from './components/focus-trap/focus-trap.esm.js';\nexport { Listbox } from './components/listbox/listbox.esm.js';\nexport { Menu } from './components/menu/menu.esm.js';\nexport { Popover } from './components/popover/popover.esm.js';\nexport { RadioGroup } from './components/radio-group/radio-group.esm.js';\nexport { Switch } from './components/switch/switch.esm.js';\nexport { Tab } from './components/tabs/tabs.esm.js';\nexport { Transition } from './components/transitions/transition.esm.js';\n//# sourceMappingURL=index.esm.js.map\n"],
  "mappings": "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",
  "names": []
}
