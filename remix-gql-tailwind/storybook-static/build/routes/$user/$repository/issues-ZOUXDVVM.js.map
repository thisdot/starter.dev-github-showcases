{
  "version": 3,
  "sources": ["browser-route-module:/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/issues.tsx?browser", "../../../../../app/routes/$user/$repository/issues.tsx", "../../../../../app/components/RepoIssues/RepoIssues.tsx", "../../../../../app/components/RepoIssues/RepoIssues.view.tsx"],
  "sourcesContent": ["export { default } from \"/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/issues.tsx\";", "import { json, LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport RepoHeader from '~/components/RepoHeader/RepoHeader';\nimport { parseQuery } from '~/components/RepoIssues/parseQuery';\nimport RepoIssues from '~/components/RepoIssues/RepoIssues';\nimport { parseTopics } from '~/components/RepoPage/parseTopics';\nimport { RepoContext, RepoProvider } from '~/context/RepoContext';\nimport gqlClient from '~/lib/graphql-client';\nimport { REPO_ISSUES_QUERY } from '~/lib/queries/RepoIssues';\nimport { REPO_PAGE_QUERY } from '~/lib/queries/RepoPage';\nimport { auth } from '~/services/auth.server';\ntype LoaderData = {\n  context: RepoContext;\n  openIssues: any;\n  closedIssues: any;\n  milestones: any;\n  labels: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n\n  let url = new URL(request.url);\n  const searchParams = url.searchParams;\n\n  const label = searchParams.get('Label');\n  const milestone = searchParams.get('Milestones');\n  const after = searchParams.get('after');\n  const before = searchParams.get('before');\n  const orderBy = searchParams.get('Sort');\n  const orderByArr = orderBy?.split('^');\n\n  const pathname = url.pathname;\n  const basePath = pathname.split('/');\n  const index = basePath.lastIndexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join('/') : path;\n  const defaultBranch = 'HEAD';\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === 'string',\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_ISSUES_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      orderBy: {\n        field: orderByArr ? orderByArr[0] : 'CREATED_AT',\n        direction: orderByArr ? orderByArr[1] : 'DESC',\n      },\n      filterBy:\n        label || milestone\n          ? {\n              labels: label ? [label] : undefined,\n              milestone: milestone || undefined,\n            }\n          : undefined,\n      last: before ? 25 : null,\n      first: !before || after ? 25 : null,\n      after,\n      before,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const { openIssues, closedIssues, milestones, labels } = parseQuery(data);\n\n  return json<LoaderData>({\n    context,\n    openIssues,\n    closedIssues,\n    milestones,\n    labels,\n  });\n};\n\nexport default function Issues() {\n  const { context, openIssues, closedIssues, milestones, labels } =\n    useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-xl md:py-12\">\n        <RepoIssues\n          openIssues={openIssues}\n          closedIssues={closedIssues}\n          milestones={milestones}\n          labels={labels}\n        />\n      </div>\n    </RepoProvider>\n  );\n}\n", "import { MinusCircleIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport IssuesContainer from '../IssuesContainer/IssuesContainer';\nimport IssuesEmpty from '../IssuesEmpty/IssuesEmpty';\nimport RepoIssuesView from './RepoIssues.view';\nimport { Label } from './types';\nimport {\n  IssueState,\n  IssueType,\n  useIssueFilters,\n} from '../IssueFilters/useIssueFilters';\nimport IssueFilters from '../IssueFilters/IssueFilters';\nimport Pagination from '../IssueFilters/Pagination';\n\ninterface RepoIssuesProps {\n  openIssues: {\n    issues: any;\n    totalCount: any;\n    pageInfo: any;\n  };\n  closedIssues: {\n    issues: any;\n    totalCount: any;\n    pageInfo: any;\n  };\n  milestones: any;\n  labels: Label[];\n}\n\nexport const stateFilter = () => {\n  const filters = useIssueFilters();\n  return filters;\n};\n\nfunction RepoIssues({\n  openIssues,\n  closedIssues,\n  milestones,\n  labels,\n}: RepoIssuesProps) {\n  const { pathname } = useRepo();\n\n  const filters = useIssueFilters();\n\n  const activeIssues =\n    filters.state.state === IssueState.Open ? openIssues : closedIssues;\n\n  const filtersElement = (\n    <IssueFilters\n      openCount={openIssues.totalCount}\n      closedCount={closedIssues.totalCount}\n      milestones={milestones}\n      labels={labels}\n      type={IssueType.Issue}\n      {...filters}\n    />\n  );\n\n  return (\n    <>\n      <IssuesContainer\n        filtersEl={filtersElement}\n        clearFilters={filters.clearFilters}\n        hasActiveFilters={filters.hasActiveFilters}\n      >\n        {activeIssues.issues.length > 0 ? (\n          <RepoIssuesView pathname={pathname} issues={activeIssues.issues} />\n        ) : (\n          <IssuesEmpty Icon={MinusCircleIcon} />\n        )}\n      </IssuesContainer>\n      {(activeIssues.pageInfo.hasNextPage ||\n        activeIssues.pageInfo?.hasPreviousPage) && (\n        <Pagination\n          pageInfo={activeIssues.pageInfo}\n          changePage={filters.changePage}\n        />\n      )}\n    </>\n  );\n}\n\nexport default RepoIssues;\n", "import type { Issue } from './types';\nimport cn from 'classnames';\nimport {\n  MinusCircleIcon,\n  CheckCircleIcon,\n  ChatAltIcon,\n} from '@heroicons/react/outline';\nimport { formatDistance } from 'date-fns';\nimport * as styles from './RepoIssues.classNames';\n\ninterface RepoIssuesViewProps {\n  issues: Issue[];\n  pathname: string;\n}\n\nfunction RepoIssuesView({ issues, pathname }: RepoIssuesViewProps) {\n  return (\n    <>\n      {issues.map((issue) => (\n        <div key={issue.id} className={styles.issue} data-testid=\"issue\">\n          <div className={styles.container}>\n            <div className=\"flex\">\n              <div>\n                {issue.closed ? (\n                  <CheckCircleIcon\n                    className={cn(styles.stateIcon, 'text-purple-600')}\n                  />\n                ) : (\n                  <MinusCircleIcon\n                    className={cn(styles.stateIcon, 'text-green-600')}\n                  />\n                )}\n              </div>\n              <div>\n                <div className={styles.content}>\n                  <span className={styles.title}>\n                    <a\n                      href={`https://github.com${pathname}/${issue.number}`}\n                      target=\"_blank\"\n                    >\n                      {issue.title}\n                    </a>\n                  </span>\n                  <span className=\"inline\">\n                    {issue.labels.map(({ color, name }) => (\n                      <span\n                        key={color}\n                        style={{\n                          backgroundColor: `#${color}`,\n                        }}\n                        className={styles.label}\n                      >\n                        {name}\n                      </span>\n                    ))}\n                  </span>\n                </div>\n                <div className={styles.meta}>\n                  #{issue.number}{' '}\n                  {issue.closed === false && (\n                    <span>\n                      opened{' '}\n                      {formatDistance(new Date(), new Date(issue.createdAt))}{' '}\n                      ago{' '}\n                    </span>\n                  )}\n                  by <span className={styles.link}>{issue.login}</span>\n                  {issue.closedAt && (\n                    <span>\n                      {' '}\n                      was closed{' '}\n                      {formatDistance(new Date(), new Date(issue.closedAt))} ago\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-1\">\n              <span className={styles.comments}>\n                <ChatAltIcon className={styles.commentsIcon} />\n                {issue.commentCount}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default RepoIssuesView;\n"],
  "mappings": "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",
  "names": []
}
