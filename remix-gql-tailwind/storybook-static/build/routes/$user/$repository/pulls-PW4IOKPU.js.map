{
  "version": 3,
  "sources": ["browser-route-module:/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/pulls.tsx?browser", "../../../../../app/routes/$user/$repository/pulls.tsx", "../../../../../app/components/RepoPulls/RepoPulls.tsx", "../../../../../app/components/RepoPulls/RepoPulls.view.tsx"],
  "sourcesContent": ["export { default } from \"/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/pulls.tsx\";", "import { json, LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport RepoHeader from '~/components/RepoHeader/RepoHeader';\nimport { parseTopics } from '~/components/RepoPage/parseTopics';\nimport { parseQuery } from '~/components/RepoPulls/parseQuery';\nimport RepoPulls from '~/components/RepoPulls/RepoPulls';\nimport { RepoContext, RepoProvider } from '~/context/RepoContext';\nimport gqlClient from '~/lib/graphql-client';\nimport { REPO_PAGE_QUERY } from '~/lib/queries/RepoPage';\nimport { REPO_PULLS_QUERY } from '~/lib/queries/RepoPulls';\nimport { auth } from '~/services/auth.server';\ntype LoaderData = {\n  context: RepoContext;\n  openPullRequests: any;\n  closedPullRequests: any;\n  labels: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n\n  let url = new URL(request.url);\n  const searchParams = url.searchParams;\n\n  const label = searchParams.get('Label');\n  const after = searchParams.get('after');\n  const before = searchParams.get('before');\n  const orderBy = searchParams.get('Sort');\n  const orderByArr = orderBy?.split('^');\n\n  const pathname = url.pathname;\n  const basePath = pathname.split('/');\n  const index = basePath.lastIndexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join('/') : path;\n  const defaultBranch = 'HEAD';\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === 'string',\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_PULLS_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      orderBy: {\n        field: orderByArr ? orderByArr[0] : 'CREATED_AT',\n        direction: orderByArr ? orderByArr[1] : 'DESC',\n      },\n      labels: label ? [label] : undefined,\n      last: before ? 25 : undefined,\n      first: !before || after ? 25 : undefined,\n      after,\n      before,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const { openPullRequests, closedPullRequests, labels } = parseQuery(data);\n\n  return json<LoaderData>({\n    context,\n    openPullRequests,\n    closedPullRequests,\n    labels,\n  });\n};\n\nexport default function Pulls() {\n  const { context, openPullRequests, closedPullRequests, labels } =\n    useLoaderData<LoaderData>();\n\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-xl md:py-12\">\n        <RepoPulls\n          openPullRequests={openPullRequests}\n          closedPullRequests={closedPullRequests}\n          labels={labels}\n        />\n      </div>\n    </RepoProvider>\n  );\n}\n", "import { useRepo } from '~/context/RepoContext';\nimport { PullRequestIcon } from '../Icons';\nimport IssueFilters from '../IssueFilters/IssueFilters';\nimport Pagination from '../IssueFilters/Pagination';\nimport {\n  IssueState,\n  IssueType,\n  useIssueFilters,\n} from '../IssueFilters/useIssueFilters';\nimport IssuesContainer from '../IssuesContainer/IssuesContainer';\nimport IssuesEmpty from '../IssuesEmpty/IssuesEmpty';\nimport RepoPullsView from './RepoPulls.view';\n\nexport type RepoPullProps = {\n  openPullRequests: any;\n  closedPullRequests: any;\n  labels: any;\n};\n\nfunction RepoPulls({\n  openPullRequests,\n  closedPullRequests,\n  labels,\n}: RepoPullProps) {\n  const { name, owner } = useRepo();\n  const filters = useIssueFilters();\n\n  const activePullRequests =\n    filters.state.state === IssueState.Open\n      ? openPullRequests\n      : closedPullRequests;\n\n  const filtersElement = (\n    <IssueFilters\n      openCount={openPullRequests.totalCount}\n      closedCount={closedPullRequests.totalCount}\n      labels={labels}\n      type={IssueType.PullRequest}\n      {...filters}\n    />\n  );\n\n  return (\n    <>\n      <IssuesContainer\n        filtersEl={filtersElement}\n        clearFilters={filters.clearFilters}\n        hasActiveFilters={filters.hasActiveFilters}\n      >\n        {activePullRequests.pullRequests.length > 0 ? (\n          <RepoPullsView\n            pullRequests={activePullRequests.pullRequests}\n            name={name}\n            owner={owner}\n          />\n        ) : (\n          <IssuesEmpty Icon={PullRequestIcon} />\n        )}\n      </IssuesContainer>\n      {(activePullRequests.pageInfo.hasNextPage ||\n        activePullRequests.pageInfo?.hasPreviousPage) && (\n        <Pagination\n          pageInfo={activePullRequests.pageInfo}\n          changePage={filters.changePage}\n        />\n      )}\n    </>\n  );\n}\n\nexport default RepoPulls;\n", "import type { PullRequest } from './types';\nimport cn from 'classnames';\nimport { ChatAltIcon } from '@heroicons/react/outline';\nimport { formatDistance } from 'date-fns';\nimport {\n  PullRequestIcon,\n  MergedPullRequestIcon,\n  ClosedPullRequestIcon,\n} from '../Icons';\nimport * as styles from '../RepoIssues/RepoIssues.classNames';\n\ninterface RepoPullsViewProps {\n  pullRequests: PullRequest[];\n  name: string;\n  owner: string;\n}\n\nfunction RepoPullsView({ pullRequests, name, owner }: RepoPullsViewProps) {\n  return (\n    <>\n      {pullRequests.map((pullRequest) => {\n        let icon = (\n          <PullRequestIcon className={cn(styles.stateIcon, 'text-green-600')} />\n        );\n        if (pullRequest.merged) {\n          icon = (\n            <MergedPullRequestIcon\n              className={cn(styles.stateIcon, 'text-purple-600')}\n            />\n          );\n        } else if (pullRequest.closed) {\n          icon = (\n            <ClosedPullRequestIcon\n              className={cn(styles.stateIcon, 'text-red-600')}\n            />\n          );\n        }\n        return (\n          <div key={pullRequest.id} className={styles.issue} data-testid=\"pr\">\n            <div className={styles.container}>\n              <div className=\"flex\">\n                <div>{icon}</div>\n                <div>\n                  <div className={styles.content}>\n                    <span className={styles.title}>\n                      <a\n                        href={`https://github.com/${owner}/${name}/pull/${pullRequest.number}`}\n                        target=\"_blank\"\n                      >\n                        {pullRequest.title}\n                      </a>\n                    </span>\n                    <span className=\"inline\">\n                      {pullRequest.labels.map(({ color, name }) => (\n                        <span\n                          key={color}\n                          style={{\n                            backgroundColor: `#${color}`,\n                          }}\n                          className={styles.label}\n                        >\n                          {name}\n                        </span>\n                      ))}\n                    </span>\n                  </div>\n                  <div className={styles.meta}>\n                    #{pullRequest.number}{' '}\n                    {pullRequest.closed === false && (\n                      <span>\n                        opened{' '}\n                        {formatDistance(\n                          new Date(),\n                          new Date(pullRequest.createdAt)\n                        )}{' '}\n                        ago{' '}\n                      </span>\n                    )}\n                    by <span className={styles.link}>{pullRequest.login}</span>\n                    {pullRequest.closedAt && (\n                      <span>\n                        {' '}\n                        was {pullRequest.merged ? 'merged' : 'closed'}{' '}\n                        {formatDistance(\n                          new Date(),\n                          new Date(pullRequest.closedAt)\n                        )}{' '}\n                        ago\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-1\">\n                <span className={styles.comments}>\n                  <ChatAltIcon className={styles.commentsIcon} />\n                  {pullRequest.commentCount}\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default RepoPullsView;\n"],
  "mappings": "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",
  "names": []
}
