{
  "version": 3,
  "sources": ["browser-route-module:/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/index.tsx?browser", "../../../../../app/routes/$user/$repository/index.tsx", "../../../../../app/components/RepoAboutWidget/RepoAboutWidget.tsx", "../../../../../app/components/RepoAboutWidget/Description.tsx", "../../../../../app/components/RepoAboutWidget/HomepageUrl.tsx", "../../../../../app/components/RepoAboutWidget/RepoAboutWidget.classNames.ts", "../../../../../app/components/RepoAboutWidget/Topics.tsx"],
  "sourcesContent": ["export { default } from \"/home/adrian/Work/thisdot/starter.dev-github-showcases/remix-gql-tailwind/app/routes/$user/$repository/index.tsx\";", "import type { LoaderFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData, useOutletContext } from '@remix-run/react';\nimport { auth } from '~/services/auth.server';\nimport gqlClient from '~/lib/graphql-client';\nimport { RepoContext, RepoProvider } from '~/context/RepoContext';\nimport RepoHeader from '../../../components/RepoHeader/RepoHeader';\nimport FileExplorerNav from '../../../components/FileExplorerNav/FileExplorerNav';\nimport FileExplorer from '../../../components/FileExplorer/FileExplorer.view';\nimport RepoReadMe from '../../../components/RepoReadMe/RepoReadMe.view';\nimport RepoAboutWidget from '~/components/RepoAboutWidget/RepoAboutWidget';\nimport { parseTopics } from '~/components/RepoPage/parseTopics';\nimport { parseQueryData } from '~/components/FileExplorer/parseQueryData';\nimport { parseQuery } from '~/components/RepoReadMe/parseQuery';\nimport { REPO_PAGE_QUERY } from '~/lib/queries/RepoPage';\nimport { REPO_TREE_QUERY } from '~/lib/queries/FileExplorer';\nimport { REPO_README_QUERY } from '~/lib/queries/RepoReadMe';\n\ntype LoaderData = {\n  context: RepoContext;\n  items: any;\n  readme: any;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const { accessToken } = await auth.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n\n  let url = new URL(request.url);\n  const pathname = url.pathname;\n  const basePath = pathname.split('/');\n  const index = basePath.indexOf(`${params.repository}`);\n  const path = basePath.splice(index + 1);\n\n  const { repository } = await gqlClient.request(\n    REPO_PAGE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const formattedPath = Array.isArray(path) ? path.join('/') : path;\n  const defaultBranch = 'HEAD';\n\n  const context: RepoContext = {\n    owner: params.user!,\n    name: params.repository!,\n    branch: repository?.defaultBranchRef?.name ?? defaultBranch,\n    path: formattedPath,\n    pathname: pathname,\n    data: repository\n      ? {\n          ...repository,\n          isOrg: typeof repository.owner?.orgName === 'string',\n          watcherCount: repository.watchers.totalCount,\n          openIssueCount: repository.issues.totalCount,\n          openPullRequestCount: repository.pullRequests.totalCount,\n          topics: parseTopics(repository.topics?.nodes),\n        }\n      : undefined,\n  };\n\n  const data = await gqlClient.request(\n    REPO_TREE_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: `${context.branch}:${formattedPath}`,\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n\n  const items = parseQueryData(data);\n\n  const readmeData = await gqlClient.request(\n    REPO_README_QUERY,\n    {\n      owner: params.user,\n      name: params.repository,\n      expression: context.path\n        ? `HEAD:${context.path}/README.md`\n        : 'HEAD:README.md',\n    },\n    {\n      authorization: `Bearer ${accessToken}`,\n    }\n  );\n  const readme = parseQuery(readmeData);\n\n  return json<LoaderData>({ context, items, readme });\n};\n\nexport default function Repository() {\n  const { context, items, readme } = useLoaderData<LoaderData>();\n  return (\n    <RepoProvider value={context}>\n      <RepoHeader />\n      <div className=\"mx-auto max-w-screen-2xl px-4 md:py-8\">\n        <div className=\"grid grid-cols-12 gap-8\">\n          <div className=\"col-span-12 md:col-span-7 xl:col-span-9\">\n            <FileExplorerNav />\n            <FileExplorer\n              items={items}\n              branch={context.branch}\n              basePath={`/${context.owner}/${context.name}`}\n              repoPath={context.path}\n            />\n            <RepoReadMe readme={readme} />\n          </div>\n          <div className=\"col-span-12 md:col-span-5 xl:col-span-3\">\n            <RepoAboutWidget />\n          </div>\n        </div>\n      </div>\n    </RepoProvider>\n  );\n}\n", "import { BookOpenIcon } from '@heroicons/react/outline';\nimport { useRepo } from '../../context/RepoContext';\nimport Description from './Description';\nimport HomepageUrl from './HomepageUrl';\nimport Topics from './Topics';\n// import { LoadingTextLine } from '@components/Loading';\nimport * as styles from './RepoAboutWidget.classNames';\n\nfunction RepoAboutWidget() {\n  const { data, isRepoLoading } = useRepo();\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.heading}>About</h3>\n      <div className={styles.description}>\n        <div className=\"space-y-4\">\n          <Description text={data?.description} />\n          <HomepageUrl homepageUrl={data?.homepageUrl} />\n          <Topics topics={data?.topics} />\n        </div>\n      </div>\n      <div>\n        <a className={styles.readmeLink}>\n          <BookOpenIcon className={styles.readmeIcon} /> Readme\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default RepoAboutWidget;\n", "interface DescriptionProps {\n  text?: string | null;\n}\n\nfunction Description({ text }: DescriptionProps) {\n  return text ? (\n    <span>{text}</span>\n  ) : (\n    <span className=\"italic\">No description, website, or topics provided.</span>\n  );\n}\n\nexport default Description;\n", "import { Link } from '@remix-run/react';\nimport { LinkIcon } from '@heroicons/react/outline';\nimport * as styles from './RepoAboutWidget.classNames';\n\ninterface HomepageUrlProps {\n  homepageUrl?: string | null;\n}\n\nfunction HomepageUrl({ homepageUrl }: HomepageUrlProps) {\n  if (!homepageUrl) {\n    return null;\n  }\n\n  return (\n    <div className={styles.linkContainer}>\n      <LinkIcon className={styles.linkIcon} />\n      <Link to={homepageUrl} className={styles.link} target=\"_blank\">\n        {homepageUrl}\n      </Link>\n    </div>\n  );\n}\n\nexport default HomepageUrl;\n", "export const container = 'pb-8 space-y-5 border-b-2 border-gray-300';\n\nexport const heading = 'text-gray-700 font-semibold';\n\nexport const description = 'text-gray-600';\n\nexport const readmeLink =\n  'flex items-center text-gray-500 hover:text-blue-500 text-sm cursor-pointer leading-snug';\n\nexport const readmeIcon = 'h-5 w-5 mt-0.5 mr-2';\n\nexport const linkContainer =\n  'max-w-full overflow-hidden overflow-ellipsis whitespace-nowrap';\n\nexport const linkIcon = 'w-4 h-4 inline text-gray-700 mr-2 -mt-0.5';\n\nexport const link = 'font-semibold text-blue-600 hover:underline text-sm';\n\nexport const topic =\n  'inline-block bg-blue-100 text-blue-600 text-xs font-medium py-1 px-2 rounded-xl mr-1.5 hover:text-white hover:bg-blue-600 transition-colors cursor-pointer';\n", "import * as styles from './RepoAboutWidget.classNames';\n\ninterface TopicsProps {\n  topics?: string[];\n}\n\nfunction Topics({ topics }: TopicsProps) {\n  if (!topics) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-1\">\n      {topics.map((topic) => (\n        <span key={topic} className={styles.topic}>\n          {topic}\n        </span>\n      ))}\n    </div>\n  );\n}\n\nexport default Topics;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAGA,kBAAqB;;;ACHrB;;;ACAA;AAIA,qBAAqB,EAAE,QAA0B;AAC/C,SAAO,OACL,oCAAC,QAAD,MAAO,QAEP,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KAAS;AAAA;AAI7B,IAAO,sBAAQ;;;ACZf;;;ACAA;AAAO,IAAM,YAAY;AAElB,IAAM,UAAU;AAEhB,IAAM,cAAc;AAEpB,IAAM,aACX;AAEK,IAAM,aAAa;AAEnB,IAAM,gBACX;AAEK,IAAM,WAAW;AAEjB,IAAM,OAAO;AAEb,IAAM,QACX;;;ADXF,qBAAqB,EAAE,eAAiC;AACtD,MAAI,CAAC,aAAa;AAChB,WAAO;AAAA;AAGT,SACE,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,kBAAD;AAAA,IAAU,WAAkB;AAAA,MAC5B,oCAAC,MAAD;AAAA,IAAM,IAAI;AAAA,IAAa,WAAkB;AAAA,IAAM,QAAO;AAAA,KACnD;AAAA;AAMT,IAAO,sBAAQ;;;AEvBf;AAMA,gBAAgB,EAAE,UAAuB;AACvC,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA;AAGT,SACE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACZ,OAAO,IAAI,CAAC,WACX,oCAAC,QAAD;AAAA,IAAM,KAAK;AAAA,IAAO,WAAkB;AAAA,KACjC;AAAA;AAOX,IAAO,iBAAQ;;;AJdf,2BAA2B;AACzB,QAAM,EAAE,MAAM,kBAAkB;AAChC,SACE,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,MAAD;AAAA,IAAI,WAAkB;AAAA,KAAS,UAC/B,oCAAC,OAAD;AAAA,IAAK,WAAkB;AAAA,KACrB,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,qBAAD;AAAA,IAAa,MAAM,6BAAM;AAAA,MACzB,oCAAC,qBAAD;AAAA,IAAa,aAAa,6BAAM;AAAA,MAChC,oCAAC,gBAAD;AAAA,IAAQ,QAAQ,6BAAM;AAAA,QAG1B,oCAAC,OAAD,MACE,oCAAC,KAAD;AAAA,IAAG,WAAkB;AAAA,KACnB,oCAAC,sBAAD;AAAA,IAAc,WAAkB;AAAA,MAAc;AAAA;AAOxD,IAAO,0BAAQ;;;ADsEA,sBAAsB;AACnC,QAAM,EAAE,SAAS,OAAO,WAAW;AACnC,SACE,oCAAC,cAAD;AAAA,IAAc,OAAO;AAAA,KACnB,oCAAC,oBAAD,OACA,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,yBAAD,OACA,oCAAC,2BAAD;AAAA,IACE;AAAA,IACA,QAAQ,QAAQ;AAAA,IAChB,UAAU,IAAI,QAAQ,SAAS,QAAQ;AAAA,IACvC,UAAU,QAAQ;AAAA,MAEpB,oCAAC,yBAAD;AAAA,IAAY;AAAA,OAEd,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACb,oCAAC,yBAAD;AAAA;",
  "names": []
}
